

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Dec 15 01:28:38 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    71                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    73  0000                     
    74                           ; Version 2.20
    75                           ; Generated 12/02/2020 GMT
    76                           ; 
    77                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC18F4550 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108  0000                     
   109                           	psect	idataBANK2
   110  007D1A                     __pidataBANK2:
   111                           	callstack 0
   112                           
   113                           ;initializer for _Ro
   114  007D1A  0000               	dw	0
   115  007D1C  4120               	dw	16672
   116                           
   117                           ;initializer for _MQ6_curve
   118  007D1E  3333               	dw	13107
   119  007D20  4013               	dw	16403
   120  007D22  999A               	dw	39322
   121  007D24  3E99               	dw	16025
   122  007D26  EB85               	dw	60293
   123  007D28  BED1               	dw	48849
   124                           
   125                           	psect	smallconst
   126  000800                     __psmallconst:
   127                           	callstack 0
   128  000800  00                 	db	0
   129  000801                     _dp_l:
   130                           	callstack 0
   131  000801  0000               	dw	0
   132  000803  0000               	dw	0
   133  000805  CFDC               	dw	53212
   134  000807  35D1               	dw	13777
   135  000809                     __end_of_dp_l:
   136                           	callstack 0
   137  000809                     _dp_h:
   138                           	callstack 0
   139  000809  0000               	dw	0
   140  00080B  0000               	dw	0
   141  00080D  C000               	dw	49152
   142  00080F  3F15               	dw	16149
   143  000811                     __end_of_dp_h:
   144                           	callstack 0
   145  000811  4260               	dw	16992
   146  000813  0DA2               	dw	3490
   147  000815                     __end_of_tiny@sqrtf$F1192:
   148                           	callstack 0
   149  000815  A570               	dw	42352
   150  000817  36EC               	dw	14060
   151  000819                     __end_of_ivln2_l:
   152                           	callstack 0
   153  000819  AA3B               	dw	43579
   154  00081B  3FB8               	dw	16312
   155  00081D                     __end_of_ivln2:
   156                           	callstack 0
   157  00081D  384F               	dw	14415
   158  00081F  3F76               	dw	16246
   159  000821                     __end_of_cp:
   160                           	callstack 0
   161  000821  AA3C               	dw	43580
   162  000823  3338               	dw	13112
   163  000825                     __end_of_ovt:
   164                           	callstack 0
   165  000825  BE8C               	dw	48780
   166  000827  35BF               	dw	13759
   167  000829                     __end_of_lg2_l:
   168                           	callstack 0
   169  000829  7200               	dw	29184
   170  00082B  3F31               	dw	16177
   171  00082D                     __end_of_lg2_h:
   172                           	callstack 0
   173  00082D  7218               	dw	29208
   174  00082F  3F31               	dw	16177
   175  000831                     __end_of_lg2:
   176                           	callstack 0
   177  000831  BB4C               	dw	47948
   178  000833  3331               	dw	13105
   179  000835                     __end_of_P5:
   180                           	callstack 0
   181  000835  EA0E               	dw	59918
   182  000837  B5DD               	dw	46557
   183  000839                     __end_of_P4:
   184                           	callstack 0
   185  000839  B355               	dw	45909
   186  00083B  388A               	dw	14474
   187  00083D                     __end_of_P3:
   188                           	callstack 0
   189  00083D  0B61               	dw	2913
   190  00083F  BB36               	dw	47926
   191  000841                     __end_of_P2:
   192                           	callstack 0
   193  000841  AAAB               	dw	43691
   194  000843  3E2A               	dw	15914
   195  000845                     __end_of_P1:
   196                           	callstack 0
   197  000845  F142               	dw	61762
   198  000847  3E53               	dw	15955
   199  000849                     __end_of_L6:
   200                           	callstack 0
   201  000849  3255               	dw	12885
   202  00084B  3E6C               	dw	15980
   203  00084D                     __end_of_L5:
   204                           	callstack 0
   205  00084D  A305               	dw	41733
   206  00084F  3E8B               	dw	16011
   207  000851                     __end_of_L4:
   208                           	callstack 0
   209  000851  AAAB               	dw	43691
   210  000853  3EAA               	dw	16042
   211  000855                     __end_of_L3:
   212                           	callstack 0
   213  000855  6DB7               	dw	28087
   214  000857  3EDB               	dw	16091
   215  000859                     __end_of_L2:
   216                           	callstack 0
   217  000859  999A               	dw	39322
   218  00085B  3F19               	dw	16153
   219  00085D                     __end_of_L1:
   220                           	callstack 0
   221  00085D  4260               	dw	16992
   222  00085F  0DA2               	dw	3490
   223  000861                     __end_of_tiny:
   224                           	callstack 0
   225  000861  F2CA               	dw	62154
   226  000863  7149               	dw	29001
   227  000865                     __end_of_huge:
   228                           	callstack 0
   229  000865  0000               	dw	0
   230  000867  4B80               	dw	19328
   231  000869                     __end_of_two24:
   232                           	callstack 0
   233  000869  9E26               	dw	40486
   234  00086B  3E78               	dw	15992
   235  00086D                     __end_of_Lg4:
   236                           	callstack 0
   237  00086D  E9EE               	dw	59886
   238  00086F  3E91               	dw	16017
   239  000871                     __end_of_Lg3:
   240                           	callstack 0
   241  000871  CE13               	dw	52755
   242  000873  3ECC               	dw	16076
   243  000875                     __end_of_Lg2:
   244                           	callstack 0
   245  000875  AAAA               	dw	43690
   246  000877  3F2A               	dw	16170
   247  000879                     __end_of_Lg1:
   248                           	callstack 0
   249  000879  F7D1               	dw	63441
   250  00087B  3717               	dw	14103
   251  00087D                     __end_of_ln2_lo:
   252                           	callstack 0
   253  00087D  7180               	dw	29056
   254  00087F  3F31               	dw	16177
   255  000881                     __end_of_ln2_hi:
   256                           	callstack 0
   257  000881                     _bp:
   258                           	callstack 0
   259  000881  0000               	dw	0
   260  000883  3F80               	dw	16256
   261  000885  0000               	dw	0
   262  000887  3FC0               	dw	16320
   263  000889                     __end_of_bp:
   264                           	callstack 0
   265  000889  AA00               	dw	43520
   266  00088B  3FB8               	dw	16312
   267  00088D                     __end_of_ivln2_h:
   268                           	callstack 0
   269  00088D  23C6               	dw	9158
   270  00088F  B8F6               	dw	47350
   271  000891                     __end_of_cp_l:
   272                           	callstack 0
   273  000891  4000               	dw	16384
   274  000893  3F76               	dw	16246
   275  000895                     __end_of_cp_h:
   276                           	callstack 0
   277  0000                     _PORTDbits	set	3971
   278  0000                     _TRISDbits	set	3989
   279  0000                     _OSCCON	set	4051
   280  0000                     _ADCON0bits	set	4034
   281  0000                     _ADCON0	set	4034
   282  0000                     _ADRESL	set	4035
   283  0000                     _ADRESH	set	4036
   284  0000                     _ADCON2	set	4032
   285  0000                     _ADCON1	set	4033
   286  0000                     _TRISA	set	3986
   287  0000                     _LATB	set	3978
   288  0000                     _TRISD	set	3989
   289  0000                     _TRISB	set	3987
   290  0000                     _GO	set	32273
   291  0000                     _ADON	set	32272
   292  0000                     _LATD1	set	31841
   293  0000                     _LATD0	set	31840
   294  000895                     STR_5:
   295  000895  47                 	db	71	;'G'
   296  000896  61                 	db	97	;'a'
   297  000897  73                 	db	115	;'s'
   298  000898  20                 	db	32
   299  000899  50                 	db	80	;'P'
   300  00089A  72                 	db	114	;'r'
   301  00089B  6F                 	db	111	;'o'
   302  00089C  70                 	db	112	;'p'
   303  00089D  61                 	db	97	;'a'
   304  00089E  6E                 	db	110	;'n'
   305  00089F  6F                 	db	111	;'o'
   306  0008A0  00                 	db	0
   307  0008A1                     STR_1:
   308  0008A1  43                 	db	67	;'C'
   309  0008A2  61                 	db	97	;'a'
   310  0008A3  6C                 	db	108	;'l'
   311  0008A4  69                 	db	105	;'i'
   312  0008A5  62                 	db	98	;'b'
   313  0008A6  72                 	db	114	;'r'
   314  0008A7  61                 	db	97	;'a'
   315  0008A8  6E                 	db	110	;'n'
   316  0008A9  64                 	db	100	;'d'
   317  0008AA  6F                 	db	111	;'o'
   318  0008AB  00                 	db	0
   319  0008AC                     STR_7:
   320  0008AC  47                 	db	71	;'G'
   321  0008AD  61                 	db	97	;'a'
   322  0008AE  73                 	db	115	;'s'
   323  0008AF  20                 	db	32
   324  0008B0  70                 	db	112	;'p'
   325  0008B1  70                 	db	112	;'p'
   326  0008B2  6D                 	db	109	;'m'
   327  0008B3  20                 	db	32
   328  0008B4  3D                 	db	61	;'='
   329  0008B5  00                 	db	0
   330  0008B6                     STR_6:
   331  0008B6  44                 	db	68	;'D'
   332  0008B7  65                 	db	101	;'e'
   333  0008B8  74                 	db	116	;'t'
   334  0008B9  65                 	db	101	;'e'
   335  0008BA  63                 	db	99	;'c'
   336  0008BB  74                 	db	116	;'t'
   337  0008BC  61                 	db	97	;'a'
   338  0008BD  64                 	db	100	;'d'
   339  0008BE  6F                 	db	111	;'o'
   340  0008BF  00                 	db	0
   341  0008C0                     STR_2:
   342  0008C0  4C                 	db	76	;'L'
   343  0008C1  69                 	db	105	;'i'
   344  0008C2  73                 	db	115	;'s'
   345  0008C3  74                 	db	116	;'t'
   346  0008C4  6F                 	db	111	;'o'
   347  0008C5  21                 	db	33
   348  0008C6  00                 	db	0
   349  0008C7                     STR_9:
   350  0008C7  47                 	db	71	;'G'
   351  0008C8  61                 	db	97	;'a'
   352  0008C9  73                 	db	115	;'s'
   353  0008CA  20                 	db	32
   354  0008CB  4E                 	db	78	;'N'
   355  0008CC  6F                 	db	111	;'o'
   356  0008CD  00                 	db	0
   357  0008CE                     STR_4:
   358  0008CE  4B                 	db	75	;'K'
   359  0008CF  20                 	db	32
   360  0008D0  4F                 	db	79	;'O'
   361  0008D1  68                 	db	104	;'h'
   362  0008D2  6D                 	db	109	;'m'
   363  0008D3  73                 	db	115	;'s'
   364  0008D4  00                 	db	0
   365  0008D5                     STR_3:
   366  0008D5  25                 	db	37
   367  0008D6  2E                 	db	46
   368  0008D7  32                 	db	50	;'2'
   369  0008D8  66                 	db	102	;'f'
   370  0008D9  00                 	db	0
   371  0008DA                     STR_11:
   372  0008DA  49                 	db	73	;'I'
   373  0008DB  4E                 	db	78	;'N'
   374  0008DC  46                 	db	70	;'F'
   375  0008DD  00                 	db	0
   376  0008DE                     STR_15:
   377  0008DE  4E                 	db	78	;'N'
   378  0008DF  41                 	db	65	;'A'
   379  0008E0  4E                 	db	78	;'N'
   380  0008E1  00                 	db	0
   381  0008E2                     STR_12:
   382  0008E2  69                 	db	105	;'i'
   383  0008E3  6E                 	db	110	;'n'
   384  0008E4  66                 	db	102	;'f'
   385  0008E5  00                 	db	0
   386  0008E6                     STR_16:
   387  0008E6  6E                 	db	110	;'n'
   388  0008E7  61                 	db	97	;'a'
   389  0008E8  6E                 	db	110	;'n'
   390  0008E9  00                 	db	0
   391  0008EA                     STR_8:
   392  0008EA  25                 	db	37
   393  0008EB  2E                 	db	46
   394  0008EC  64                 	db	100	;'d'
   395  0008ED  00                 	db	0
   396  0008EE                     STR_19:
   397  0008EE  6C                 	db	108	;'l'
   398  0008EF  66                 	db	102	;'f'
   399  0008F0  00                 	db	0
   400  0008F1  00                 	db	0	; dummy byte at the end
   401  0000                     
   402                           ; #config settings
   403                           
   404                           	psect	cinit
   405  007994                     __pcinit:
   406                           	callstack 0
   407  007994                     start_initialization:
   408                           	callstack 0
   409  007994                     __initialization:
   410                           	callstack 0
   411                           
   412                           ; Initialize objects allocated to BANK2 (16 bytes)
   413                           ; load TBLPTR registers with __pidataBANK2
   414  007994  0E1A               	movlw	low __pidataBANK2
   415  007996  6EF6               	movwf	tblptrl,c
   416  007998  0E7D               	movlw	high __pidataBANK2
   417  00799A  6EF7               	movwf	tblptrh,c
   418  00799C  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   419  00799E  6EF8               	movwf	tblptru,c
   420  0079A0  EE02  F07E         	lfsr	0,__pdataBANK2
   421  0079A4  EE10 F010          	lfsr	1,16
   422  0079A8                     copy_data0:
   423  0079A8  0009               	tblrd		*+
   424  0079AA  CFF5 FFEE          	movff	tablat,postinc0
   425  0079AE  50E5               	movf	postdec1,w,c
   426  0079B0  50E1               	movf	fsr1l,w,c
   427  0079B2  E1FA               	bnz	copy_data0
   428                           
   429                           ; Clear objects allocated to BANK2 (98 bytes)
   430  0079B4  EE02  F000         	lfsr	0,__pbssBANK2
   431  0079B8  0E62               	movlw	98
   432  0079BA                     clear_0:
   433  0079BA  6AEE               	clrf	postinc0,c
   434  0079BC  06E8               	decf	wreg,f,c
   435  0079BE  E1FD               	bnz	clear_0
   436                           
   437                           ; Clear objects allocated to BANK1 (4 bytes)
   438  0079C0  0101               	movlb	1
   439  0079C2  6BFF               	clrf	(__pbssBANK1+3)& (0+255),b
   440  0079C4  6BFE               	clrf	(__pbssBANK1+2)& (0+255),b
   441  0079C6  6BFD               	clrf	(__pbssBANK1+1)& (0+255),b
   442  0079C8  6BFC               	clrf	__pbssBANK1& (0+255),b
   443                           
   444                           ; Clear objects allocated to BANK0 (4 bytes)
   445  0079CA  0100               	movlb	0
   446  0079CC  6BFE               	clrf	(__pbssBANK0+3)& (0+255),b
   447  0079CE  6BFD               	clrf	(__pbssBANK0+2)& (0+255),b
   448  0079D0  6BFC               	clrf	(__pbssBANK0+1)& (0+255),b
   449  0079D2  6BFB               	clrf	__pbssBANK0& (0+255),b
   450  0079D4                     end_of_initialization:
   451                           	callstack 0
   452  0079D4                     __end_of__initialization:
   453                           	callstack 0
   454  0079D4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   455  0079D6  6EF8               	movwf	tblptru,c
   456  0079D8  0100               	movlb	0
   457  0079DA  EF49  F032         	goto	_main	;jump to C main() function
   458                           
   459                           	psect	bssBANK0
   460  0000FB                     __pbssBANK0:
   461                           	callstack 0
   462  0000FB                     _prec:
   463                           	callstack 0
   464  0000FB                     	ds	2
   465  0000FD                     _flags:
   466                           	callstack 0
   467  0000FD                     	ds	2
   468                           
   469                           	psect	bssBANK1
   470  0001FC                     __pbssBANK1:
   471                           	callstack 0
   472  0001FC                     _nout:
   473                           	callstack 0
   474  0001FC                     	ds	2
   475  0001FE                     _width:
   476                           	callstack 0
   477  0001FE                     	ds	2
   478                           
   479                           	psect	bssBANK2
   480  000200                     __pbssBANK2:
   481                           	callstack 0
   482  000200                     fabsf@F465:
   483                           	callstack 0
   484  000200                     	ds	4
   485  000204                     floorf@F527:
   486                           	callstack 0
   487  000204                     	ds	4
   488  000208                     ___fpclassifyf@F465:
   489                           	callstack 0
   490  000208                     	ds	4
   491  00020C                     logf@F472:
   492                           	callstack 0
   493  00020C                     	ds	4
   494  000210                     _errno:
   495                           	callstack 0
   496  000210                     	ds	2
   497  000212                     _dbuf:
   498                           	callstack 0
   499  000212                     	ds	80
   500                           
   501                           	psect	dataBANK2
   502  00027E                     __pdataBANK2:
   503                           	callstack 0
   504  00027E                     _Ro:
   505                           	callstack 0
   506  00027E                     	ds	4
   507  000282                     _MQ6_curve:
   508                           	callstack 0
   509  000282                     	ds	12
   510                           
   511                           	psect	cstackBANK2
   512  000262                     __pcstackBANK2:
   513                           	callstack 0
   514  000262                     	ds	2
   515  000264                     sprintf@ap:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x2
   519  000264                     	ds	2
   520  000266                     sprintf@f:
   521                           	callstack 0
   522                           
   523                           ; 6 bytes @ 0x4
   524  000266                     	ds	6
   525  00026C                     main@data:
   526                           	callstack 0
   527                           
   528                           ; 10 bytes @ 0xA
   529  00026C                     	ds	10
   530  000276                     main@rs:
   531                           	callstack 0
   532                           
   533                           ; 4 bytes @ 0x14
   534  000276                     	ds	4
   535  00027A                     main@ratio:
   536                           	callstack 0
   537                           
   538                           ; 4 bytes @ 0x18
   539  00027A                     	ds	4
   540                           
   541                           	psect	cstackBANK1
   542  000100                     __pcstackBANK1:
   543                           	callstack 0
   544  000100                     _powf$1463:
   545                           	callstack 0
   546                           
   547                           ; 4 bytes @ 0x0
   548  000100                     	ds	4
   549  000104                     _powf$1464:
   550                           	callstack 0
   551                           
   552                           ; 4 bytes @ 0x4
   553  000104                     	ds	4
   554  000108                     _powf$1468:
   555                           	callstack 0
   556                           
   557                           ; 4 bytes @ 0x8
   558  000108                     	ds	4
   559  00010C                     _powf$1469:
   560                           	callstack 0
   561                           
   562                           ; 4 bytes @ 0xC
   563  00010C                     	ds	4
   564  000110                     _powf$1470:
   565                           	callstack 0
   566                           
   567                           ; 4 bytes @ 0x10
   568  000110                     	ds	4
   569  000114                     _powf$1471:
   570                           	callstack 0
   571                           
   572                           ; 4 bytes @ 0x14
   573  000114                     	ds	4
   574  000118                     _powf$1472:
   575                           	callstack 0
   576                           
   577                           ; 4 bytes @ 0x18
   578  000118                     	ds	4
   579  00011C                     powf@t2:
   580                           	callstack 0
   581                           
   582                           ; 4 bytes @ 0x1C
   583  00011C                     	ds	4
   584  000120                     powf@z_h:
   585                           	callstack 0
   586                           
   587                           ; 4 bytes @ 0x20
   588  000120                     	ds	4
   589  000124                     powf@z_l:
   590                           	callstack 0
   591                           
   592                           ; 4 bytes @ 0x24
   593  000124                     	ds	4
   594  000128                     powf@y1:
   595                           	callstack 0
   596                           
   597                           ; 4 bytes @ 0x28
   598  000128                     	ds	4
   599  00012C                     powf@i:
   600                           	callstack 0
   601                           
   602                           ; 4 bytes @ 0x2C
   603  00012C                     	ds	4
   604  000130                     powf@s_l:
   605                           	callstack 0
   606                           
   607                           ; 4 bytes @ 0x30
   608  000130                     	ds	4
   609  000134                     powf@t_l:
   610                           	callstack 0
   611                           
   612                           ; 4 bytes @ 0x34
   613  000134                     	ds	4
   614  000138                     _powf$1462:
   615                           	callstack 0
   616                           
   617                           ; 4 bytes @ 0x38
   618  000138                     	ds	4
   619  00013C                     _powf$1466:
   620                           	callstack 0
   621                           
   622                           ; 4 bytes @ 0x3C
   623  00013C                     	ds	4
   624  000140                     _powf$1467:
   625                           	callstack 0
   626                           
   627                           ; 4 bytes @ 0x40
   628  000140                     	ds	4
   629  000144                     powf@w:
   630                           	callstack 0
   631                           
   632                           ; 4 bytes @ 0x44
   633  000144                     	ds	4
   634  000148                     _powf$1460:
   635                           	callstack 0
   636                           
   637                           ; 4 bytes @ 0x48
   638  000148                     	ds	4
   639  00014C                     powf@r:
   640                           	callstack 0
   641                           
   642                           ; 4 bytes @ 0x4C
   643  00014C                     	ds	4
   644  000150                     powf@yisint:
   645                           	callstack 0
   646                           
   647                           ; 4 bytes @ 0x50
   648  000150                     	ds	4
   649  000154                     _powf$1459:
   650                           	callstack 0
   651                           
   652                           ; 4 bytes @ 0x54
   653  000154                     	ds	4
   654  000158                     _powf$1465:
   655                           	callstack 0
   656                           
   657                           ; 4 bytes @ 0x58
   658  000158                     	ds	4
   659  00015C                     powf@s:
   660                           	callstack 0
   661                           
   662                           ; 4 bytes @ 0x5C
   663  00015C                     	ds	4
   664  000160                     powf@hx:
   665                           	callstack 0
   666                           
   667                           ; 4 bytes @ 0x60
   668  000160                     	ds	4
   669  000164                     powf@p_l:
   670                           	callstack 0
   671                           
   672                           ; 4 bytes @ 0x64
   673  000164                     	ds	4
   674  000168                     powf@t_h:
   675                           	callstack 0
   676                           
   677                           ; 4 bytes @ 0x68
   678  000168                     	ds	4
   679  00016C                     powf@s_h:
   680                           	callstack 0
   681                           
   682                           ; 4 bytes @ 0x6C
   683  00016C                     	ds	4
   684  000170                     powf@ax:
   685                           	callstack 0
   686                           
   687                           ; 4 bytes @ 0x70
   688  000170                     	ds	4
   689  000174                     powf@u:
   690                           	callstack 0
   691                           
   692                           ; 4 bytes @ 0x74
   693  000174                     	ds	4
   694  000178                     powf@v:
   695                           	callstack 0
   696                           
   697                           ; 4 bytes @ 0x78
   698  000178                     	ds	4
   699  00017C                     powf@n:
   700                           	callstack 0
   701                           
   702                           ; 4 bytes @ 0x7C
   703  00017C                     	ds	4
   704  000180                     powf@t1:
   705                           	callstack 0
   706                           
   707                           ; 4 bytes @ 0x80
   708  000180                     	ds	4
   709  000184                     powf@hy:
   710                           	callstack 0
   711                           
   712                           ; 4 bytes @ 0x84
   713  000184                     	ds	4
   714  000188                     powf@sn:
   715                           	callstack 0
   716                           
   717                           ; 4 bytes @ 0x88
   718  000188                     	ds	4
   719  00018C                     powf@s2:
   720                           	callstack 0
   721                           
   722                           ; 4 bytes @ 0x8C
   723  00018C                     	ds	4
   724  000190                     powf@is:
   725                           	callstack 0
   726                           
   727                           ; 4 bytes @ 0x90
   728  000190                     	ds	4
   729  000194                     _powf$1461:
   730                           	callstack 0
   731                           
   732                           ; 4 bytes @ 0x94
   733  000194                     	ds	4
   734  000198                     powf@iy:
   735                           	callstack 0
   736                           
   737                           ; 4 bytes @ 0x98
   738  000198                     	ds	4
   739  00019C                     powf@p_h:
   740                           	callstack 0
   741                           
   742                           ; 4 bytes @ 0x9C
   743  00019C                     	ds	4
   744  0001A0                     powf@k:
   745                           	callstack 0
   746                           
   747                           ; 4 bytes @ 0xA0
   748  0001A0                     	ds	4
   749  0001A4                     _powf$1458:
   750                           	callstack 0
   751                           
   752                           ; 4 bytes @ 0xA4
   753  0001A4                     	ds	4
   754  0001A8                     powf@ix:
   755                           	callstack 0
   756                           
   757                           ; 4 bytes @ 0xA8
   758  0001A8                     	ds	4
   759  0001AC                     powf@j:
   760                           	callstack 0
   761                           
   762                           ; 4 bytes @ 0xAC
   763  0001AC                     	ds	4
   764  0001B0                     powf@t:
   765                           	callstack 0
   766                           
   767                           ; 4 bytes @ 0xB0
   768  0001B0                     	ds	4
   769  0001B4                     powf@z:
   770                           	callstack 0
   771                           
   772                           ; 4 bytes @ 0xB4
   773  0001B4                     	ds	4
   774  0001B8                     powf@__xc8_float_word:
   775                           	callstack 0
   776                           
   777                           ; 4 bytes @ 0xB8
   778  0001B8                     	ds	4
   779  0001BC                     _efgtoa$937:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0xBC
   783  0001BC                     	ds	2
   784  0001BE                     _efgtoa$938:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0xBE
   788  0001BE                     	ds	2
   789  0001C0                     _efgtoa$942:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0xC0
   793  0001C0                     	ds	2
   794  0001C2                     _efgtoa$946:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0xC2
   798  0001C2                     	ds	2
   799  0001C4                     _efgtoa$947:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0xC4
   803  0001C4                     	ds	2
   804  0001C6                     _efgtoa$948:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0xC6
   808  0001C6                     	ds	2
   809  0001C8                     efgtoa@t:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0xC8
   813  0001C8                     	ds	2
   814  0001CA                     efgtoa@pp:
   815                           	callstack 0
   816                           
   817                           ; 2 bytes @ 0xCA
   818  0001CA                     	ds	2
   819  0001CC                     efgtoa@ne:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0xCC
   823  0001CC                     	ds	2
   824  0001CE                     efgtoa@m:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0xCE
   828  0001CE                     	ds	2
   829  0001D0                     efgtoa@ou:
   830                           	callstack 0
   831                           
   832                           ; 4 bytes @ 0xD0
   833  0001D0                     	ds	4
   834  0001D4                     efgtoa@d:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0xD4
   838  0001D4                     	ds	2
   839  0001D6                     efgtoa@sign:
   840                           	callstack 0
   841                           
   842                           ; 2 bytes @ 0xD6
   843  0001D6                     	ds	2
   844  0001D8                     efgtoa@p:
   845                           	callstack 0
   846                           
   847                           ; 2 bytes @ 0xD8
   848  0001D8                     	ds	2
   849  0001DA                     efgtoa@w:
   850                           	callstack 0
   851                           
   852                           ; 2 bytes @ 0xDA
   853  0001DA                     	ds	2
   854  0001DC                     efgtoa@nmode:
   855                           	callstack 0
   856                           
   857                           ; 1 bytes @ 0xDC
   858  0001DC                     	ds	1
   859  0001DD                     efgtoa@mode:
   860                           	callstack 0
   861                           
   862                           ; 1 bytes @ 0xDD
   863  0001DD                     	ds	1
   864  0001DE                     efgtoa@h:
   865                           	callstack 0
   866                           
   867                           ; 4 bytes @ 0xDE
   868  0001DE                     	ds	4
   869  0001E2                     efgtoa@l:
   870                           	callstack 0
   871                           
   872                           ; 4 bytes @ 0xE2
   873  0001E2                     	ds	4
   874  0001E6                     efgtoa@i:
   875                           	callstack 0
   876                           
   877                           ; 2 bytes @ 0xE6
   878  0001E6                     	ds	2
   879  0001E8                     efgtoa@g:
   880                           	callstack 0
   881                           
   882                           ; 4 bytes @ 0xE8
   883  0001E8                     	ds	4
   884  0001EC                     efgtoa@e:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0xEC
   888  0001EC                     	ds	2
   889  0001EE                     efgtoa@n:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0xEE
   893  0001EE                     	ds	2
   894  0001F0                     efgtoa@u:
   895                           	callstack 0
   896                           
   897                           ; 4 bytes @ 0xF0
   898  0001F0                     	ds	4
   899  0001F4                     ?_sprintf:
   900                           	callstack 0
   901  0001F4                     sprintf@s:
   902                           	callstack 0
   903                           
   904                           ; 2 bytes @ 0xF4
   905  0001F4                     	ds	2
   906  0001F6                     sprintf@fmt:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0xF6
   910  0001F6                     	ds	6
   911                           
   912                           	psect	cstackBANK0
   913  000060                     __pcstackBANK0:
   914                           	callstack 0
   915  000060                     ?_logf:
   916                           	callstack 0
   917  000060                     read_mq@count:
   918                           	callstack 0
   919  000060                     ___flge@ff1:
   920                           	callstack 0
   921  000060                     logf@x:
   922                           	callstack 0
   923                           
   924                           ; 4 bytes @ 0x0
   925  000060                     	ds	2
   926  000062                     read_mq@rs:
   927                           	callstack 0
   928                           
   929                           ; 4 bytes @ 0x2
   930  000062                     	ds	2
   931  000064                     ??_logf:
   932  000064                     ___flge@ff2:
   933                           	callstack 0
   934                           
   935                           ; 4 bytes @ 0x4
   936  000064                     	ds	4
   937  000068                     ??___flge:
   938                           
   939                           ; 1 bytes @ 0x8
   940  000068                     	ds	2
   941  00006A                     logf@R:
   942                           	callstack 0
   943                           
   944                           ; 4 bytes @ 0xA
   945  00006A                     	ds	2
   946  00006C                     ?_sqrtf:
   947                           	callstack 0
   948  00006C                     sqrtf@x:
   949                           	callstack 0
   950                           
   951                           ; 4 bytes @ 0xC
   952  00006C                     	ds	2
   953  00006E                     logf@t1:
   954                           	callstack 0
   955                           
   956                           ; 4 bytes @ 0xE
   957  00006E                     	ds	2
   958  000070                     ??_sqrtf:
   959                           
   960                           ; 1 bytes @ 0x10
   961  000070                     	ds	2
   962  000072                     logf@t2:
   963                           	callstack 0
   964                           
   965                           ; 4 bytes @ 0x12
   966  000072                     	ds	4
   967  000076                     _logf$1454:
   968                           	callstack 0
   969                           
   970                           ; 4 bytes @ 0x16
   971  000076                     	ds	3
   972  000079                     sqrtf@s:
   973                           	callstack 0
   974                           
   975                           ; 4 bytes @ 0x19
   976  000079                     	ds	1
   977  00007A                     _logf$1455:
   978                           	callstack 0
   979                           
   980                           ; 4 bytes @ 0x1A
   981  00007A                     	ds	3
   982  00007D                     sqrtf@i:
   983                           	callstack 0
   984                           
   985                           ; 4 bytes @ 0x1D
   986  00007D                     	ds	1
   987  00007E                     _logf$1456:
   988                           	callstack 0
   989                           
   990                           ; 4 bytes @ 0x1E
   991  00007E                     	ds	3
   992  000081                     sqrtf@__xc8_float_word:
   993                           	callstack 0
   994                           
   995                           ; 4 bytes @ 0x21
   996  000081                     	ds	1
   997  000082                     _logf$1457:
   998                           	callstack 0
   999                           
  1000                           ; 4 bytes @ 0x22
  1001  000082                     	ds	3
  1002  000085                     sqrtf@q:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x25
  1006  000085                     	ds	1
  1007  000086                     logf@k:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x26
  1011  000086                     	ds	2
  1012  000088                     logf@hfsq:
  1013                           	callstack 0
  1014                           
  1015                           ; 4 bytes @ 0x28
  1016  000088                     	ds	1
  1017  000089                     sqrtf@t:
  1018                           	callstack 0
  1019                           
  1020                           ; 4 bytes @ 0x29
  1021  000089                     	ds	3
  1022  00008C                     logf@dk:
  1023                           	callstack 0
  1024                           
  1025                           ; 4 bytes @ 0x2C
  1026  00008C                     	ds	1
  1027  00008D                     sqrtf@z:
  1028                           	callstack 0
  1029                           
  1030                           ; 4 bytes @ 0x2D
  1031  00008D                     	ds	3
  1032  000090                     logf@s:
  1033                           	callstack 0
  1034                           
  1035                           ; 4 bytes @ 0x30
  1036  000090                     	ds	1
  1037  000091                     sqrtf@m:
  1038                           	callstack 0
  1039                           
  1040                           ; 4 bytes @ 0x31
  1041  000091                     	ds	3
  1042  000094                     logf@z:
  1043                           	callstack 0
  1044                           
  1045                           ; 4 bytes @ 0x34
  1046  000094                     	ds	1
  1047  000095                     sqrtf@r:
  1048                           	callstack 0
  1049                           
  1050                           ; 4 bytes @ 0x35
  1051  000095                     	ds	3
  1052  000098                     logf@w:
  1053                           	callstack 0
  1054                           
  1055                           ; 4 bytes @ 0x38
  1056  000098                     	ds	1
  1057  000099                     sqrtf@ix:
  1058                           	callstack 0
  1059                           
  1060                           ; 4 bytes @ 0x39
  1061  000099                     	ds	3
  1062  00009C                     _logf$1453:
  1063                           	callstack 0
  1064                           
  1065                           ; 4 bytes @ 0x3C
  1066  00009C                     	ds	4
  1067  0000A0                     logf@u:
  1068                           	callstack 0
  1069                           
  1070                           ; 4 bytes @ 0x40
  1071  0000A0                     	ds	4
  1072  0000A4                     logf@f:
  1073                           	callstack 0
  1074                           
  1075                           ; 4 bytes @ 0x44
  1076  0000A4                     	ds	4
  1077  0000A8                     logf@ix:
  1078                           	callstack 0
  1079                           
  1080                           ; 4 bytes @ 0x48
  1081  0000A8                     	ds	4
  1082  0000AC                     ?_powf:
  1083                           	callstack 0
  1084  0000AC                     powf@x:
  1085                           	callstack 0
  1086                           
  1087                           ; 4 bytes @ 0x4C
  1088  0000AC                     	ds	4
  1089  0000B0                     powf@y:
  1090                           	callstack 0
  1091                           
  1092                           ; 4 bytes @ 0x50
  1093  0000B0                     	ds	4
  1094  0000B4                     ??_powf:
  1095                           
  1096                           ; 1 bytes @ 0x54
  1097  0000B4                     	ds	9
  1098  0000BD                     ?___fltol:
  1099                           	callstack 0
  1100  0000BD                     ___fltol@f1:
  1101                           	callstack 0
  1102                           
  1103                           ; 4 bytes @ 0x5D
  1104  0000BD                     	ds	4
  1105  0000C1                     ??___fltol:
  1106                           
  1107                           ; 1 bytes @ 0x61
  1108  0000C1                     	ds	4
  1109  0000C5                     ___fltol@sign1:
  1110                           	callstack 0
  1111                           
  1112                           ; 1 bytes @ 0x65
  1113  0000C5                     	ds	1
  1114  0000C6                     ___fltol@exp1:
  1115                           	callstack 0
  1116                           
  1117                           ; 1 bytes @ 0x66
  1118  0000C6                     	ds	1
  1119  0000C7                     ?_gas_plot_log_scale:
  1120                           	callstack 0
  1121  0000C7                     ?_efgtoa:
  1122                           	callstack 0
  1123  0000C7                     efgtoa@fp:
  1124                           	callstack 0
  1125  0000C7                     gas_plot_log_scale@rs_ro_ratio:
  1126                           	callstack 0
  1127                           
  1128                           ; 4 bytes @ 0x67
  1129  0000C7                     	ds	2
  1130  0000C9                     efgtoa@f:
  1131                           	callstack 0
  1132                           
  1133                           ; 4 bytes @ 0x69
  1134  0000C9                     	ds	2
  1135  0000CB                     gas_plot_log_scale@curve:
  1136                           	callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x6B
  1139  0000CB                     	ds	2
  1140  0000CD                     efgtoa@c:
  1141                           	callstack 0
  1142  0000CD                     _gas_plot_log_scale$1450:
  1143                           	callstack 0
  1144                           
  1145                           ; 4 bytes @ 0x6D
  1146  0000CD                     	ds	1
  1147  0000CE                     ??_efgtoa:
  1148                           
  1149                           ; 1 bytes @ 0x6E
  1150  0000CE                     	ds	3
  1151  0000D1                     _gas_plot_log_scale$1451:
  1152                           	callstack 0
  1153                           
  1154                           ; 4 bytes @ 0x71
  1155  0000D1                     	ds	2
  1156  0000D3                     ?_vfpfcnvrt:
  1157                           	callstack 0
  1158  0000D3                     vfpfcnvrt@fp:
  1159                           	callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x73
  1162  0000D3                     	ds	2
  1163  0000D5                     vfpfcnvrt@fmt:
  1164                           	callstack 0
  1165  0000D5                     _gas_plot_log_scale$1452:
  1166                           	callstack 0
  1167                           
  1168                           ; 4 bytes @ 0x75
  1169  0000D5                     	ds	2
  1170  0000D7                     vfpfcnvrt@ap:
  1171                           	callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x77
  1174  0000D7                     	ds	2
  1175  0000D9                     ??_vfpfcnvrt:
  1176                           
  1177                           ; 1 bytes @ 0x79
  1178  0000D9                     	ds	4
  1179  0000DD                     vfpfcnvrt@ll:
  1180                           	callstack 0
  1181                           
  1182                           ; 8 bytes @ 0x7D
  1183  0000DD                     	ds	8
  1184  0000E5                     _vfpfcnvrt$962:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x85
  1188  0000E5                     	ds	2
  1189  0000E7                     _vfpfcnvrt$967:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x87
  1193  0000E7                     	ds	2
  1194  0000E9                     vfpfcnvrt@f:
  1195                           	callstack 0
  1196                           
  1197                           ; 4 bytes @ 0x89
  1198  0000E9                     	ds	4
  1199  0000ED                     vfpfcnvrt@ct:
  1200                           	callstack 0
  1201                           
  1202                           ; 3 bytes @ 0x8D
  1203  0000ED                     	ds	3
  1204  0000F0                     vfpfcnvrt@c:
  1205                           	callstack 0
  1206                           
  1207                           ; 1 bytes @ 0x90
  1208  0000F0                     	ds	1
  1209  0000F1                     ?_vfprintf:
  1210                           	callstack 0
  1211  0000F1                     vfprintf@fp:
  1212                           	callstack 0
  1213                           
  1214                           ; 2 bytes @ 0x91
  1215  0000F1                     	ds	2
  1216  0000F3                     vfprintf@fmt:
  1217                           	callstack 0
  1218                           
  1219                           ; 2 bytes @ 0x93
  1220  0000F3                     	ds	2
  1221  0000F5                     vfprintf@ap:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x95
  1225  0000F5                     	ds	2
  1226  0000F7                     vfprintf@cfmt:
  1227                           	callstack 0
  1228                           
  1229                           ; 2 bytes @ 0x97
  1230  0000F7                     	ds	2
  1231  0000F9                     ??_main:
  1232                           
  1233                           ; 1 bytes @ 0x99
  1234  0000F9                     	ds	2
  1235                           
  1236                           	psect	cstackCOMRAM
  1237  000001                     __pcstackCOMRAM:
  1238                           	callstack 0
  1239  000001                     ?_strlen:
  1240                           	callstack 0
  1241  000001                     ?___fpclassifyf:
  1242                           	callstack 0
  1243  000001                     ?_isupper:
  1244                           	callstack 0
  1245  000001                     ?_isdigit:
  1246                           	callstack 0
  1247  000001                     ?_strncmp:
  1248                           	callstack 0
  1249  000001                     ?_isspace:
  1250                           	callstack 0
  1251  000001                     ?_ADC_Read:
  1252                           	callstack 0
  1253  000001                     ?___wmul:
  1254                           	callstack 0
  1255  000001                     ?___awdiv:
  1256                           	callstack 0
  1257  000001                     ?___awmod:
  1258                           	callstack 0
  1259  000001                     ?_fabsf:
  1260                           	callstack 0
  1261  000001                     ?_nanf:
  1262                           	callstack 0
  1263  000001                     ?___flneg:
  1264                           	callstack 0
  1265  000001                     ?___xxtofl:
  1266                           	callstack 0
  1267  000001                     ?___aodiv:
  1268                           	callstack 0
  1269  000001                     ?___aomod:
  1270                           	callstack 0
  1271  000001                     MSdelay@val:
  1272                           	callstack 0
  1273  000001                     ADC_Read@channel:
  1274                           	callstack 0
  1275  000001                     ___wmul@multiplier:
  1276                           	callstack 0
  1277  000001                     ___awdiv@dividend:
  1278                           	callstack 0
  1279  000001                     ___awmod@dividend:
  1280                           	callstack 0
  1281  000001                     isdigit@c:
  1282                           	callstack 0
  1283  000001                     isspace@c:
  1284                           	callstack 0
  1285  000001                     isupper@c:
  1286                           	callstack 0
  1287  000001                     fputc@c:
  1288                           	callstack 0
  1289  000001                     nanf@s:
  1290                           	callstack 0
  1291  000001                     strcpy@dest:
  1292                           	callstack 0
  1293  000001                     strlen@s:
  1294                           	callstack 0
  1295  000001                     strncmp@_l:
  1296                           	callstack 0
  1297  000001                     ___fleq@ff1:
  1298                           	callstack 0
  1299  000001                     ___flneg@f1:
  1300                           	callstack 0
  1301  000001                     ___xxtofl@val:
  1302                           	callstack 0
  1303  000001                     ___fpclassifyf@x:
  1304                           	callstack 0
  1305  000001                     fabsf@x:
  1306                           	callstack 0
  1307  000001                     ___aodiv@dividend:
  1308                           	callstack 0
  1309  000001                     ___aomod@dividend:
  1310                           	callstack 0
  1311                           
  1312                           ; 8 bytes @ 0x0
  1313  000001                     	ds	2
  1314  000003                     ??_isupper:
  1315  000003                     ??_isdigit:
  1316  000003                     ??_isspace:
  1317  000003                     ??_ADC_Read:
  1318  000003                     MSdelay@i:
  1319                           	callstack 0
  1320  000003                     ___wmul@multiplicand:
  1321                           	callstack 0
  1322  000003                     ___awdiv@divisor:
  1323                           	callstack 0
  1324  000003                     ___awmod@divisor:
  1325                           	callstack 0
  1326  000003                     fputc@fp:
  1327                           	callstack 0
  1328  000003                     strcpy@src:
  1329                           	callstack 0
  1330  000003                     strlen@a:
  1331                           	callstack 0
  1332  000003                     strncmp@_r:
  1333                           	callstack 0
  1334                           
  1335                           ; 2 bytes @ 0x2
  1336  000003                     	ds	2
  1337  000005                     ??_fputc:
  1338  000005                     ??___fpclassifyf:
  1339  000005                     ??_strcpy:
  1340  000005                     ??___xxtofl:
  1341  000005                     ___awdiv@counter:
  1342                           	callstack 0
  1343  000005                     ___awmod@counter:
  1344                           	callstack 0
  1345  000005                     MSdelay@j:
  1346                           	callstack 0
  1347  000005                     ___wmul@product:
  1348                           	callstack 0
  1349  000005                     strncmp@n:
  1350                           	callstack 0
  1351  000005                     ___fleq@ff2:
  1352                           	callstack 0
  1353  000005                     fabsf@u:
  1354                           	callstack 0
  1355  000005                     nanf@u:
  1356                           	callstack 0
  1357                           
  1358                           ; 4 bytes @ 0x4
  1359  000005                     	ds	1
  1360  000006                     ___awdiv@sign:
  1361                           	callstack 0
  1362  000006                     ___awmod@sign:
  1363                           	callstack 0
  1364                           
  1365                           ; 1 bytes @ 0x5
  1366  000006                     	ds	1
  1367  000007                     ??_strncmp:
  1368  000007                     ?_tolower:
  1369                           	callstack 0
  1370  000007                     LCD_Command@cmd:
  1371                           	callstack 0
  1372  000007                     LCD_Char@dat:
  1373                           	callstack 0
  1374  000007                     _isspace$1034:
  1375                           	callstack 0
  1376  000007                     ADC_Read@digital:
  1377                           	callstack 0
  1378  000007                     ___awdiv@quotient:
  1379                           	callstack 0
  1380  000007                     strcpy@s:
  1381                           	callstack 0
  1382  000007                     tolower@c:
  1383                           	callstack 0
  1384                           
  1385                           ; 2 bytes @ 0x6
  1386  000007                     	ds	1
  1387  000008                     ?_atoi:
  1388                           	callstack 0
  1389  000008                     LCD_String@msg:
  1390                           	callstack 0
  1391  000008                     atoi@s:
  1392                           	callstack 0
  1393  000008                     strncmp@l:
  1394                           	callstack 0
  1395                           
  1396                           ; 2 bytes @ 0x7
  1397  000008                     	ds	1
  1398  000009                     ??_tolower:
  1399  000009                     ??___fleq:
  1400  000009                     ___xxtofl@sign:
  1401                           	callstack 0
  1402  000009                     ___fpclassifyf@e:
  1403                           	callstack 0
  1404  000009                     strcpy@d:
  1405                           	callstack 0
  1406  000009                     ___aodiv@divisor:
  1407                           	callstack 0
  1408  000009                     ___aomod@divisor:
  1409                           	callstack 0
  1410                           
  1411                           ; 8 bytes @ 0x8
  1412  000009                     	ds	1
  1413  00000A                     ??_atoi:
  1414  00000A                     LCD_String_xy@pos:
  1415                           	callstack 0
  1416  00000A                     ___xxtofl@exp:
  1417                           	callstack 0
  1418  00000A                     fputs@s:
  1419                           	callstack 0
  1420  00000A                     strncmp@r:
  1421                           	callstack 0
  1422                           
  1423                           ; 2 bytes @ 0x9
  1424  00000A                     	ds	1
  1425  00000B                     LCD_String_xy@msg:
  1426                           	callstack 0
  1427  00000B                     ___xxtofl@arg:
  1428                           	callstack 0
  1429  00000B                     ___fpclassifyf@u:
  1430                           	callstack 0
  1431                           
  1432                           ; 4 bytes @ 0xA
  1433  00000B                     	ds	1
  1434  00000C                     fputs@fp:
  1435                           	callstack 0
  1436                           
  1437                           ; 2 bytes @ 0xB
  1438  00000C                     	ds	1
  1439  00000D                     LCD_String_xy@row:
  1440                           	callstack 0
  1441  00000D                     _tolower$1240:
  1442                           	callstack 0
  1443                           
  1444                           ; 2 bytes @ 0xC
  1445  00000D                     	ds	1
  1446  00000E                     LCD_String_xy@location:
  1447                           	callstack 0
  1448  00000E                     fputs@c:
  1449                           	callstack 0
  1450  00000E                     atoi@neg:
  1451                           	callstack 0
  1452                           
  1453                           ; 2 bytes @ 0xD
  1454  00000E                     	ds	1
  1455  00000F                     ?___flmul:
  1456                           	callstack 0
  1457  00000F                     fputs@i:
  1458                           	callstack 0
  1459  00000F                     ___flmul@b:
  1460                           	callstack 0
  1461                           
  1462                           ; 4 bytes @ 0xE
  1463  00000F                     	ds	1
  1464  000010                     _atoi$1003:
  1465                           	callstack 0
  1466                           
  1467                           ; 2 bytes @ 0xF
  1468  000010                     	ds	1
  1469  000011                     ?_pad:
  1470                           	callstack 0
  1471  000011                     ___aodiv@counter:
  1472                           	callstack 0
  1473  000011                     ___aomod@counter:
  1474                           	callstack 0
  1475  000011                     pad@fp:
  1476                           	callstack 0
  1477                           
  1478                           ; 2 bytes @ 0x10
  1479  000011                     	ds	1
  1480  000012                     ___aodiv@sign:
  1481                           	callstack 0
  1482  000012                     ___aomod@sign:
  1483                           	callstack 0
  1484  000012                     _atoi$1005:
  1485                           	callstack 0
  1486                           
  1487                           ; 2 bytes @ 0x11
  1488  000012                     	ds	1
  1489  000013                     ?_abs:
  1490                           	callstack 0
  1491  000013                     pad@buf:
  1492                           	callstack 0
  1493  000013                     abs@a:
  1494                           	callstack 0
  1495  000013                     ___flmul@a:
  1496                           	callstack 0
  1497  000013                     ___aodiv@quotient:
  1498                           	callstack 0
  1499                           
  1500                           ; 8 bytes @ 0x12
  1501  000013                     	ds	1
  1502  000014                     _atoi$1004:
  1503                           	callstack 0
  1504                           
  1505                           ; 1 bytes @ 0x13
  1506  000014                     	ds	1
  1507  000015                     ??_abs:
  1508  000015                     pad@p:
  1509                           	callstack 0
  1510  000015                     atoi@n:
  1511                           	callstack 0
  1512                           
  1513                           ; 2 bytes @ 0x14
  1514  000015                     	ds	2
  1515  000017                     ??___flmul:
  1516  000017                     ??_pad:
  1517                           
  1518                           ; 1 bytes @ 0x16
  1519  000017                     	ds	1
  1520  000018                     pad@i:
  1521                           	callstack 0
  1522                           
  1523                           ; 2 bytes @ 0x17
  1524  000018                     	ds	2
  1525  00001A                     pad@w:
  1526                           	callstack 0
  1527                           
  1528                           ; 2 bytes @ 0x19
  1529  00001A                     	ds	1
  1530  00001B                     ___flmul@sign:
  1531                           	callstack 0
  1532                           
  1533                           ; 1 bytes @ 0x1A
  1534  00001B                     	ds	1
  1535  00001C                     ?_dtoa:
  1536                           	callstack 0
  1537  00001C                     dtoa@fp:
  1538                           	callstack 0
  1539  00001C                     ___flmul@grs:
  1540                           	callstack 0
  1541                           
  1542                           ; 4 bytes @ 0x1B
  1543  00001C                     	ds	2
  1544  00001E                     dtoa@d:
  1545                           	callstack 0
  1546                           
  1547                           ; 8 bytes @ 0x1D
  1548  00001E                     	ds	2
  1549  000020                     ___flmul@aexp:
  1550                           	callstack 0
  1551                           
  1552                           ; 1 bytes @ 0x1F
  1553  000020                     	ds	1
  1554  000021                     ___flmul@bexp:
  1555                           	callstack 0
  1556                           
  1557                           ; 1 bytes @ 0x20
  1558  000021                     	ds	1
  1559  000022                     ___flmul@prod:
  1560                           	callstack 0
  1561                           
  1562                           ; 4 bytes @ 0x21
  1563  000022                     	ds	4
  1564  000026                     ??_dtoa:
  1565  000026                     ___flmul@temp:
  1566                           	callstack 0
  1567                           
  1568                           ; 2 bytes @ 0x25
  1569  000026                     	ds	2
  1570  000028                     ?___fldiv:
  1571                           	callstack 0
  1572  000028                     ?_scalbnf:
  1573                           	callstack 0
  1574  000028                     ___fldiv@b:
  1575                           	callstack 0
  1576  000028                     scalbnf@x:
  1577                           	callstack 0
  1578                           
  1579                           ; 4 bytes @ 0x27
  1580  000028                     	ds	4
  1581  00002C                     scalbnf@n:
  1582                           	callstack 0
  1583  00002C                     ___fldiv@a:
  1584                           	callstack 0
  1585                           
  1586                           ; 4 bytes @ 0x2B
  1587  00002C                     	ds	2
  1588  00002E                     ??_scalbnf:
  1589  00002E                     _dtoa$913:
  1590                           	callstack 0
  1591                           
  1592                           ; 2 bytes @ 0x2D
  1593  00002E                     	ds	2
  1594  000030                     ??___fldiv:
  1595  000030                     dtoa@p:
  1596                           	callstack 0
  1597                           
  1598                           ; 2 bytes @ 0x2F
  1599  000030                     	ds	2
  1600  000032                     dtoa@w:
  1601                           	callstack 0
  1602  000032                     scalbnf@u:
  1603                           	callstack 0
  1604                           
  1605                           ; 4 bytes @ 0x31
  1606  000032                     	ds	2
  1607  000034                     dtoa@s:
  1608                           	callstack 0
  1609  000034                     ___fldiv@rem:
  1610                           	callstack 0
  1611                           
  1612                           ; 4 bytes @ 0x33
  1613  000034                     	ds	2
  1614  000036                     scalbnf@y:
  1615                           	callstack 0
  1616  000036                     dtoa@n:
  1617                           	callstack 0
  1618                           
  1619                           ; 8 bytes @ 0x35
  1620  000036                     	ds	2
  1621  000038                     ___fldiv@sign:
  1622                           	callstack 0
  1623                           
  1624                           ; 1 bytes @ 0x37
  1625  000038                     	ds	1
  1626  000039                     ___fldiv@new_exp:
  1627                           	callstack 0
  1628                           
  1629                           ; 2 bytes @ 0x38
  1630  000039                     	ds	2
  1631  00003B                     ___fldiv@grs:
  1632                           	callstack 0
  1633                           
  1634                           ; 4 bytes @ 0x3A
  1635  00003B                     	ds	3
  1636  00003E                     dtoa@i:
  1637                           	callstack 0
  1638                           
  1639                           ; 2 bytes @ 0x3D
  1640  00003E                     	ds	1
  1641  00003F                     ___fldiv@bexp:
  1642                           	callstack 0
  1643                           
  1644                           ; 1 bytes @ 0x3E
  1645  00003F                     	ds	1
  1646  000040                     ___fldiv@aexp:
  1647                           	callstack 0
  1648                           
  1649                           ; 1 bytes @ 0x3F
  1650  000040                     	ds	1
  1651  000041                     ?_calculate_resistance:
  1652                           	callstack 0
  1653  000041                     ?_floorf:
  1654                           	callstack 0
  1655  000041                     calculate_resistance@adc_channel:
  1656                           	callstack 0
  1657  000041                     floorf@x:
  1658                           	callstack 0
  1659                           
  1660                           ; 4 bytes @ 0x40
  1661  000041                     	ds	4
  1662  000045                     ??_calculate_resistance:
  1663  000045                     ??_floorf:
  1664                           
  1665                           ; 1 bytes @ 0x44
  1666  000045                     	ds	2
  1667  000047                     ?___fladd:
  1668                           	callstack 0
  1669  000047                     ___fladd@b:
  1670                           	callstack 0
  1671                           
  1672                           ; 4 bytes @ 0x46
  1673  000047                     	ds	4
  1674  00004B                     ___fladd@a:
  1675                           	callstack 0
  1676  00004B                     floorf@m:
  1677                           	callstack 0
  1678                           
  1679                           ; 4 bytes @ 0x4A
  1680  00004B                     	ds	4
  1681  00004F                     ??___fladd:
  1682  00004F                     floorf@e:
  1683                           	callstack 0
  1684                           
  1685                           ; 2 bytes @ 0x4E
  1686  00004F                     	ds	2
  1687  000051                     floorf@u:
  1688                           	callstack 0
  1689                           
  1690                           ; 4 bytes @ 0x50
  1691  000051                     	ds	2
  1692  000053                     ___fladd@signs:
  1693                           	callstack 0
  1694                           
  1695                           ; 1 bytes @ 0x52
  1696  000053                     	ds	1
  1697  000054                     ___fladd@aexp:
  1698                           	callstack 0
  1699                           
  1700                           ; 1 bytes @ 0x53
  1701  000054                     	ds	1
  1702  000055                     ___fladd@bexp:
  1703                           	callstack 0
  1704                           
  1705                           ; 1 bytes @ 0x54
  1706  000055                     	ds	1
  1707  000056                     ___fladd@grs:
  1708                           	callstack 0
  1709                           
  1710                           ; 1 bytes @ 0x55
  1711  000056                     	ds	1
  1712  000057                     ?_read_mq:
  1713                           	callstack 0
  1714  000057                     ?___flsub:
  1715                           	callstack 0
  1716  000057                     ___flsub@b:
  1717                           	callstack 0
  1718                           
  1719                           ; 4 bytes @ 0x56
  1720  000057                     	ds	4
  1721  00005B                     ??_read_mq:
  1722  00005B                     ___flsub@a:
  1723                           	callstack 0
  1724                           
  1725                           ; 4 bytes @ 0x5A
  1726  00005B                     	ds	4
  1727  00005F                     
  1728                           ; 1 bytes @ 0x5E
  1729 ;;
  1730 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1731 ;;
  1732 ;; *************** function _main *****************
  1733 ;; Defined at:
  1734 ;;		line 34 in file "main_file.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;		None
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;  ratio           4   24[BANK2 ] float 
  1739 ;;  rs              4   20[BANK2 ] float 
  1740 ;;  data           10   10[BANK2 ] unsigned char [10]
  1741 ;;  digital         2    0        int 
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      void 
  1744 ;; Registers used:
  1745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1751 ;;      Params:         0       0       0       0       0       0       0       0       0
  1752 ;;      Locals:         0       0       0      18       0       0       0       0       0
  1753 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1754 ;;      Totals:         0       2       0      18       0       0       0       0       0
  1755 ;;Total ram usage:       20 bytes
  1756 ;; Hardware stack levels required when called:    8
  1757 ;; This function calls:
  1758 ;;		_ADC_Init
  1759 ;;		_LCD_Clear
  1760 ;;		_LCD_Init
  1761 ;;		_LCD_String_xy
  1762 ;;		___fldiv
  1763 ;;		_gas_plot_log_scale
  1764 ;;		_read_mq
  1765 ;;		_sprintf
  1766 ;; This function is called by:
  1767 ;;		Startup code after reset
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           	psect	text0
  1772  006492                     __ptext0:
  1773                           	callstack 0
  1774  006492                     _main:
  1775                           	callstack 23
  1776  006492                     
  1777                           ;main_file.c: 35:     char data[10];;main_file.c: 36:     int digital;;main_file.c: 37: 
      +                              OSCCON = 0x72;
  1778  006492  0E72               	movlw	114
  1779  006494  6ED3               	movwf	211,c	;volatile
  1780  006496                     
  1781                           ;main_file.c: 38:     LCD_Init();
  1782  006496  EC22  F03E         	call	_LCD_Init	;wreg free
  1783  00649A                     
  1784                           ;main_file.c: 39:     ADC_Init();
  1785  00649A  EC83  F03E         	call	_ADC_Init	;wreg free
  1786  00649E                     
  1787                           ;main_file.c: 40:     TRISDbits.TRISD5 = 1;
  1788  00649E  8A95               	bsf	149,5,c	;volatile
  1789  0064A0                     
  1790                           ;main_file.c: 41:     PORTDbits.RD5 = 0;
  1791  0064A0  9A83               	bcf	131,5,c	;volatile
  1792  0064A2                     
  1793                           ;main_file.c: 42:     LCD_Clear();
  1794  0064A2  EC95  F03E         	call	_LCD_Clear	;wreg free
  1795  0064A6                     
  1796                           ;main_file.c: 43:     LCD_String_xy(1, 1, "Calibrando");
  1797  0064A6  0E01               	movlw	1
  1798  0064A8  6E0A               	movwf	LCD_String_xy@pos^0,c
  1799  0064AA  0EA1               	movlw	low STR_1
  1800  0064AC  6E0B               	movwf	LCD_String_xy@msg^0,c
  1801  0064AE  0E08               	movlw	high STR_1
  1802  0064B0  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1803  0064B2  0E01               	movlw	1
  1804  0064B4  EC79  F03D         	call	_LCD_String_xy
  1805  0064B8                     
  1806                           ;main_file.c: 45:     LCD_Clear();
  1807  0064B8  EC95  F03E         	call	_LCD_Clear	;wreg free
  1808  0064BC                     
  1809                           ;main_file.c: 46:     LCD_String_xy(1, 1, "Listo!");
  1810  0064BC  0E01               	movlw	1
  1811  0064BE  6E0A               	movwf	LCD_String_xy@pos^0,c
  1812  0064C0  0EC0               	movlw	low STR_2
  1813  0064C2  6E0B               	movwf	LCD_String_xy@msg^0,c
  1814  0064C4  0E08               	movlw	high STR_2
  1815  0064C6  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1816  0064C8  0E01               	movlw	1
  1817  0064CA  EC79  F03D         	call	_LCD_String_xy
  1818  0064CE                     
  1819                           ;main_file.c: 47:     _delay((unsigned long)((500)*(8000000/4000.0)));
  1820  0064CE  0E06               	movlw	6
  1821  0064D0  0100               	movlb	0	; () banked
  1822  0064D2  6FFA               	movwf	(??_main+1)& (0+255),b
  1823  0064D4  0E13               	movlw	19
  1824  0064D6  6FF9               	movwf	??_main& (0+255),b
  1825  0064D8  0EAD               	movlw	173
  1826  0064DA                     u7457:
  1827  0064DA  2EE8               	decfsz	wreg,f,c
  1828  0064DC  D7FE               	bra	u7457
  1829  0064DE  2FF9               	decfsz	??_main& (0+255),f,b
  1830  0064E0  D7FC               	bra	u7457
  1831  0064E2  2FFA               	decfsz	(??_main+1)& (0+255),f,b
  1832  0064E4  D7FA               	bra	u7457
  1833  0064E6  D000               	nop2	
  1834  0064E8                     
  1835                           ;main_file.c: 48:     LCD_Clear();
  1836  0064E8  EC95  F03E         	call	_LCD_Clear	;wreg free
  1837  0064EC                     
  1838                           ;main_file.c: 49:     sprintf(data,"%.2f",Ro);
  1839  0064EC  0E6C               	movlw	low main@data
  1840  0064EE  0101               	movlb	1	; () banked
  1841  0064F0  6FF4               	movwf	sprintf@s& (0+255),b
  1842  0064F2  0E02               	movlw	high main@data
  1843  0064F4  6FF5               	movwf	(sprintf@s+1)& (0+255),b
  1844  0064F6  0ED5               	movlw	low STR_3
  1845  0064F8  6FF6               	movwf	sprintf@fmt& (0+255),b
  1846  0064FA  0E08               	movlw	high STR_3
  1847  0064FC  6FF7               	movwf	(sprintf@fmt+1)& (0+255),b
  1848  0064FE  0E00               	movlw	0
  1849  006500  6FF8               	movwf	(?_sprintf+4)& (0+255),b
  1850  006502  0E00               	movlw	0
  1851  006504  6FF9               	movwf	(?_sprintf+5)& (0+255),b
  1852  006506  0E20               	movlw	32
  1853  006508  6FFA               	movwf	(?_sprintf+6)& (0+255),b
  1854  00650A  0E41               	movlw	65
  1855  00650C  6FFB               	movwf	(?_sprintf+7)& (0+255),b
  1856  00650E  EC74  F03C         	call	_sprintf	;wreg free
  1857  006512                     
  1858                           ;main_file.c: 50:     LCD_String_xy(1, 1, data);
  1859  006512  0E01               	movlw	1
  1860  006514  6E0A               	movwf	LCD_String_xy@pos^0,c
  1861  006516  0E6C               	movlw	low main@data
  1862  006518  6E0B               	movwf	LCD_String_xy@msg^0,c
  1863  00651A  0E02               	movlw	high main@data
  1864  00651C  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1865  00651E  0E01               	movlw	1
  1866  006520  EC79  F03D         	call	_LCD_String_xy
  1867  006524                     
  1868                           ;main_file.c: 51:     LCD_String_xy(1, 6, "K Ohms");
  1869  006524  0E06               	movlw	6
  1870  006526  6E0A               	movwf	LCD_String_xy@pos^0,c
  1871  006528  0ECE               	movlw	low STR_4
  1872  00652A  6E0B               	movwf	LCD_String_xy@msg^0,c
  1873  00652C  0E08               	movlw	high STR_4
  1874  00652E  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1875  006530  0E01               	movlw	1
  1876  006532  EC79  F03D         	call	_LCD_String_xy
  1877  006536                     l6058:
  1878                           
  1879                           ;main_file.c: 52:     _delay((unsigned long)((1500)*(8000000/4000.0)));
  1880  006536  0E10               	movlw	16
  1881  006538  0100               	movlb	0	; () banked
  1882  00653A  6FFA               	movwf	(??_main+1)& (0+255),b
  1883  00653C  0E39               	movlw	57
  1884  00653E  6FF9               	movwf	??_main& (0+255),b
  1885  006540  0E0D               	movlw	13
  1886  006542                     u7467:
  1887  006542  2EE8               	decfsz	wreg,f,c
  1888  006544  D7FE               	bra	u7467
  1889  006546  2FF9               	decfsz	??_main& (0+255),f,b
  1890  006548  D7FC               	bra	u7467
  1891  00654A  2FFA               	decfsz	(??_main+1)& (0+255),f,b
  1892  00654C  D7FA               	bra	u7467
  1893  00654E  D000               	nop2	
  1894  006550                     
  1895                           ;main_file.c: 53:     LCD_Clear();
  1896  006550  EC95  F03E         	call	_LCD_Clear	;wreg free
  1897  006554                     l6062:
  1898                           
  1899                           ;main_file.c: 55:         if (PORTDbits.RD5 == 1) {
  1900  006554  AA83               	btfss	131,5,c	;volatile
  1901  006556  EFAF  F032         	goto	u7431
  1902  00655A  EFB1  F032         	goto	u7430
  1903  00655E                     u7431:
  1904  00655E  EF28  F033         	goto	l6084
  1905  006562                     u7430:
  1906  006562                     
  1907                           ;main_file.c: 56:             LCD_String_xy(1, 1, "Gas Propano");
  1908  006562  0E01               	movlw	1
  1909  006564  6E0A               	movwf	LCD_String_xy@pos^0,c
  1910  006566  0E95               	movlw	low STR_5
  1911  006568  6E0B               	movwf	LCD_String_xy@msg^0,c
  1912  00656A  0E08               	movlw	high STR_5
  1913  00656C  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1914  00656E  0E01               	movlw	1
  1915  006570  EC79  F03D         	call	_LCD_String_xy
  1916                           
  1917                           ;main_file.c: 57:             LCD_String_xy(2, 1, "Detectado");
  1918  006574  0E01               	movlw	1
  1919  006576  6E0A               	movwf	LCD_String_xy@pos^0,c
  1920  006578  0EB6               	movlw	low STR_6
  1921  00657A  6E0B               	movwf	LCD_String_xy@msg^0,c
  1922  00657C  0E08               	movlw	high STR_6
  1923  00657E  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1924  006580  0E02               	movlw	2
  1925  006582  EC79  F03D         	call	_LCD_String_xy
  1926  006586                     
  1927                           ;main_file.c: 58:             _delay((unsigned long)((1500)*(8000000/4000.0)));
  1928  006586  0E10               	movlw	16
  1929  006588  0100               	movlb	0	; () banked
  1930  00658A  6FFA               	movwf	(??_main+1)& (0+255),b
  1931  00658C  0E39               	movlw	57
  1932  00658E  6FF9               	movwf	??_main& (0+255),b
  1933  006590  0E0D               	movlw	13
  1934  006592                     u7477:
  1935  006592  2EE8               	decfsz	wreg,f,c
  1936  006594  D7FE               	bra	u7477
  1937  006596  2FF9               	decfsz	??_main& (0+255),f,b
  1938  006598  D7FC               	bra	u7477
  1939  00659A  2FFA               	decfsz	(??_main+1)& (0+255),f,b
  1940  00659C  D7FA               	bra	u7477
  1941  00659E  D000               	nop2	
  1942  0065A0                     
  1943                           ;main_file.c: 59:             LCD_Clear();
  1944  0065A0  EC95  F03E         	call	_LCD_Clear	;wreg free
  1945  0065A4                     
  1946                           ;main_file.c: 60:             LCD_String_xy(1, 1, "Gas ppm =");
  1947  0065A4  0E01               	movlw	1
  1948  0065A6  6E0A               	movwf	LCD_String_xy@pos^0,c
  1949  0065A8  0EAC               	movlw	low STR_7
  1950  0065AA  6E0B               	movwf	LCD_String_xy@msg^0,c
  1951  0065AC  0E08               	movlw	high STR_7
  1952  0065AE  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1953  0065B0  0E01               	movlw	1
  1954  0065B2  EC79  F03D         	call	_LCD_String_xy
  1955  0065B6                     
  1956                           ;main_file.c: 61:             float rs = read_mq();
  1957  0065B6  EC67  F038         	call	_read_mq	;wreg free
  1958  0065BA  C057  F276         	movff	?_read_mq,main@rs
  1959  0065BE  C058  F277         	movff	?_read_mq+1,main@rs+1
  1960  0065C2  C059  F278         	movff	?_read_mq+2,main@rs+2
  1961  0065C6  C05A  F279         	movff	?_read_mq+3,main@rs+3
  1962  0065CA  C276  F028         	movff	main@rs,___fldiv@b
  1963  0065CE  C277  F029         	movff	main@rs+1,___fldiv@b+1
  1964  0065D2  C278  F02A         	movff	main@rs+2,___fldiv@b+2
  1965  0065D6  C279  F02B         	movff	main@rs+3,___fldiv@b+3
  1966  0065DA  0E00               	movlw	0
  1967  0065DC  6E2C               	movwf	___fldiv@a^0,c
  1968  0065DE  0E00               	movlw	0
  1969  0065E0  6E2D               	movwf	(___fldiv@a+1)^0,c
  1970  0065E2  0E20               	movlw	32
  1971  0065E4  6E2E               	movwf	(___fldiv@a+2)^0,c
  1972  0065E6  0E41               	movlw	65
  1973  0065E8  6E2F               	movwf	(___fldiv@a+3)^0,c
  1974  0065EA  ECE7  F02C         	call	___fldiv	;wreg free
  1975  0065EE  C028  F27A         	movff	?___fldiv,main@ratio
  1976  0065F2  C029  F27B         	movff	?___fldiv+1,main@ratio+1
  1977  0065F6  C02A  F27C         	movff	?___fldiv+2,main@ratio+2
  1978  0065FA  C02B  F27D         	movff	?___fldiv+3,main@ratio+3
  1979  0065FE                     
  1980                           ;main_file.c: 63:             sprintf(data,"%.d",gas_plot_log_scale(ratio, MQ6_curve));
  1981  0065FE  0E6C               	movlw	low main@data
  1982  006600  0101               	movlb	1	; () banked
  1983  006602  6FF4               	movwf	sprintf@s& (0+255),b
  1984  006604  0E02               	movlw	high main@data
  1985  006606  6FF5               	movwf	(sprintf@s+1)& (0+255),b
  1986  006608  0EEA               	movlw	low STR_8
  1987  00660A  6FF6               	movwf	sprintf@fmt& (0+255),b
  1988  00660C  0E08               	movlw	high STR_8
  1989  00660E  6FF7               	movwf	(sprintf@fmt+1)& (0+255),b
  1990  006610  C27A  F0C7         	movff	main@ratio,gas_plot_log_scale@rs_ro_ratio
  1991  006614  C27B  F0C8         	movff	main@ratio+1,gas_plot_log_scale@rs_ro_ratio+1
  1992  006618  C27C  F0C9         	movff	main@ratio+2,gas_plot_log_scale@rs_ro_ratio+2
  1993  00661C  C27D  F0CA         	movff	main@ratio+3,gas_plot_log_scale@rs_ro_ratio+3
  1994  006620  0E82               	movlw	low _MQ6_curve
  1995  006622  0100               	movlb	0	; () banked
  1996  006624  6FCB               	movwf	gas_plot_log_scale@curve& (0+255),b
  1997  006626  0E02               	movlw	high _MQ6_curve
  1998  006628  6FCC               	movwf	(gas_plot_log_scale@curve+1)& (0+255),b
  1999  00662A  EC56  F036         	call	_gas_plot_log_scale	;wreg free
  2000  00662E  C0C7  F1F8         	movff	?_gas_plot_log_scale,?_sprintf+4
  2001  006632  C0C8  F1F9         	movff	?_gas_plot_log_scale+1,?_sprintf+5
  2002  006636  EC74  F03C         	call	_sprintf	;wreg free
  2003  00663A                     
  2004                           ;main_file.c: 64:             LCD_String_xy(2, 1, data);
  2005  00663A  0E01               	movlw	1
  2006  00663C  6E0A               	movwf	LCD_String_xy@pos^0,c
  2007  00663E  0E6C               	movlw	low main@data
  2008  006640  6E0B               	movwf	LCD_String_xy@msg^0,c
  2009  006642  0E02               	movlw	high main@data
  2010  006644  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  2011  006646  0E02               	movlw	2
  2012  006648  EC79  F03D         	call	_LCD_String_xy
  2013  00664C  EF9B  F032         	goto	l6058
  2014  006650                     l6084:
  2015                           
  2016                           ;main_file.c: 68:             LCD_String_xy(1, 1, "Gas No");
  2017  006650  0E01               	movlw	1
  2018  006652  6E0A               	movwf	LCD_String_xy@pos^0,c
  2019  006654  0EC7               	movlw	low STR_9
  2020  006656  6E0B               	movwf	LCD_String_xy@msg^0,c
  2021  006658  0E08               	movlw	high STR_9
  2022  00665A  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  2023  00665C  0E01               	movlw	1
  2024  00665E  EC79  F03D         	call	_LCD_String_xy
  2025                           
  2026                           ;main_file.c: 69:             LCD_String_xy(2, 1, "Detectado");
  2027  006662  0E01               	movlw	1
  2028  006664  6E0A               	movwf	LCD_String_xy@pos^0,c
  2029  006666  0EB6               	movlw	low STR_6
  2030  006668  6E0B               	movwf	LCD_String_xy@msg^0,c
  2031  00666A  0E08               	movlw	high STR_6
  2032  00666C  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  2033  00666E  0E02               	movlw	2
  2034  006670  EC79  F03D         	call	_LCD_String_xy
  2035  006674  EFAA  F032         	goto	l6062
  2036  006678  EF00  F000         	goto	start
  2037  00667C                     __end_of_main:
  2038                           	callstack 0
  2039                           
  2040 ;; *************** function _sprintf *****************
  2041 ;; Defined at:
  2042 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;  s               2  244[BANK1 ] PTR unsigned char 
  2045 ;;		 -> main@data(10), 
  2046 ;;  fmt             2  246[BANK1 ] PTR const unsigned char 
  2047 ;;		 -> STR_8(4), STR_3(5), 
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;  f               6    4[BANK2 ] struct _IO_FILE
  2050 ;;  ap              2    2[BANK2 ] PTR void [1]
  2051 ;;		 -> ?_sprintf(2), 
  2052 ;;  ret             2    0        int 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  2  244[BANK1 ] int 
  2055 ;; Registers used:
  2056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2062 ;;      Params:         0       0       8       0       0       0       0       0       0
  2063 ;;      Locals:         0       0       0      10       0       0       0       0       0
  2064 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2065 ;;      Totals:         0       0       8      10       0       0       0       0       0
  2066 ;;Total ram usage:       18 bytes
  2067 ;; Hardware stack levels used:    1
  2068 ;; Hardware stack levels required when called:    7
  2069 ;; This function calls:
  2070 ;;		_vfprintf
  2071 ;; This function is called by:
  2072 ;;		_main
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           	psect	text1
  2077  0078E8                     __ptext1:
  2078                           	callstack 0
  2079  0078E8                     _sprintf:
  2080                           	callstack 23
  2081  0078E8  0EF8               	movlw	low (?_sprintf+4)
  2082  0078EA  0102               	movlb	2	; () banked
  2083  0078EC  6F64               	movwf	sprintf@ap& (0+255),b
  2084  0078EE  0E01               	movlw	high (?_sprintf+4)
  2085  0078F0  6F65               	movwf	(sprintf@ap+1)& (0+255),b
  2086  0078F2  C1F4  F266         	movff	sprintf@s,sprintf@f
  2087  0078F6  C1F5  F267         	movff	sprintf@s+1,sprintf@f+1
  2088  0078FA                     
  2089                           ; BSR set to: 2
  2090  0078FA  0E00               	movlw	0
  2091  0078FC  6F69               	movwf	(sprintf@f+3)& (0+255),b
  2092  0078FE  0E00               	movlw	0
  2093  007900  6F68               	movwf	(sprintf@f+2)& (0+255),b
  2094  007902                     
  2095                           ; BSR set to: 2
  2096  007902  0E00               	movlw	0
  2097  007904  6F6B               	movwf	(sprintf@f+5)& (0+255),b
  2098  007906  0E00               	movlw	0
  2099  007908  6F6A               	movwf	(sprintf@f+4)& (0+255),b
  2100  00790A                     
  2101                           ; BSR set to: 2
  2102  00790A  0E66               	movlw	low sprintf@f
  2103  00790C  0100               	movlb	0	; () banked
  2104  00790E  6FF1               	movwf	vfprintf@fp& (0+255),b
  2105  007910  0E02               	movlw	high sprintf@f
  2106  007912  6FF2               	movwf	(vfprintf@fp+1)& (0+255),b
  2107  007914  C1F6  F0F3         	movff	sprintf@fmt,vfprintf@fmt
  2108  007918  C1F7  F0F4         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2109  00791C  0E64               	movlw	low sprintf@ap
  2110  00791E  6FF5               	movwf	vfprintf@ap& (0+255),b
  2111  007920  0E02               	movlw	high sprintf@ap
  2112  007922  6FF6               	movwf	(vfprintf@ap+1)& (0+255),b
  2113  007924  ECB2  F03B         	call	_vfprintf	;wreg free
  2114  007928  0102               	movlb	2	; () banked
  2115  00792A  5168               	movf	(sprintf@f+2)& (0+255),w,b
  2116  00792C  0101               	movlb	1	; () banked
  2117  00792E  25F4               	addwf	sprintf@s& (0+255),w,b
  2118  007930  6ED9               	movwf	fsr2l,c
  2119  007932  0102               	movlb	2	; () banked
  2120  007934  5169               	movf	(sprintf@f+3)& (0+255),w,b
  2121  007936  0101               	movlb	1	; () banked
  2122  007938  21F5               	addwfc	(sprintf@s+1)& (0+255),w,b
  2123  00793A  6EDA               	movwf	fsr2h,c
  2124  00793C  0E00               	movlw	0
  2125  00793E  6EDF               	movwf	indf2,c
  2126  007940                     
  2127                           ; BSR set to: 1
  2128  007940  0012               	return		;funcret
  2129  007942                     __end_of_sprintf:
  2130                           	callstack 0
  2131                           
  2132 ;; *************** function _vfprintf *****************
  2133 ;; Defined at:
  2134 ;;		line 1390 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  fp              2  145[BANK0 ] PTR struct _IO_FILE
  2137 ;;		 -> sprintf@f(6), 
  2138 ;;  fmt             2  147[BANK0 ] PTR const unsigned char 
  2139 ;;		 -> STR_8(4), STR_3(5), 
  2140 ;;  ap              2  149[BANK0 ] PTR PTR void 
  2141 ;;		 -> sprintf@ap(2), 
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;  cfmt            2  151[BANK0 ] PTR unsigned char 
  2144 ;;		 -> STR_8(4), STR_3(5), 
  2145 ;; Return value:  Size  Location     Type
  2146 ;;                  2  145[BANK0 ] int 
  2147 ;; Registers used:
  2148 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2149 ;; Tracked objects:
  2150 ;;		On entry : 0/0
  2151 ;;		On exit  : 0/0
  2152 ;;		Unchanged: 0/0
  2153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2154 ;;      Params:         0       6       0       0       0       0       0       0       0
  2155 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2156 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2157 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2158 ;;Total ram usage:        8 bytes
  2159 ;; Hardware stack levels used:    1
  2160 ;; Hardware stack levels required when called:    6
  2161 ;; This function calls:
  2162 ;;		_vfpfcnvrt
  2163 ;; This function is called by:
  2164 ;;		_sprintf
  2165 ;; This function uses a non-reentrant model
  2166 ;;
  2167                           
  2168                           	psect	text2
  2169  007764                     __ptext2:
  2170                           	callstack 0
  2171  007764                     _vfprintf:
  2172                           	callstack 23
  2173  007764                     
  2174                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);D:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2175  007764  C0F3  F0F7         	movff	vfprintf@fmt,vfprintf@cfmt
  2176  007768  C0F4  F0F8         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2177  00776C                     
  2178                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2179  00776C  0E00               	movlw	0
  2180  00776E  0101               	movlb	1	; () banked
  2181  007770  6FFD               	movwf	(_nout+1)& (0+255),b
  2182  007772  0E00               	movlw	0
  2183  007774  6FFC               	movwf	_nout& (0+255),b
  2184                           
  2185                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2186  007776  EFD4  F03B         	goto	l5954
  2187  00777A                     l5952:
  2188                           
  2189                           ; BSR set to: 1
  2190                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2191  00777A  C0F1  F0D3         	movff	vfprintf@fp,vfpfcnvrt@fp
  2192  00777E  C0F2  F0D4         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2193  007782  0EF7               	movlw	low vfprintf@cfmt
  2194  007784  0100               	movlb	0	; () banked
  2195  007786  6FD5               	movwf	vfpfcnvrt@fmt& (0+255),b
  2196  007788  0E00               	movlw	high vfprintf@cfmt
  2197  00778A  6FD6               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2198  00778C  C0F5  F0D7         	movff	vfprintf@ap,vfpfcnvrt@ap
  2199  007790  C0F6  F0D8         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2200  007794  EC77  F023         	call	_vfpfcnvrt	;wreg free
  2201  007798  0100               	movlb	0	; () banked
  2202  00779A  51D3               	movf	?_vfpfcnvrt& (0+255),w,b
  2203  00779C  0101               	movlb	1	; () banked
  2204  00779E  27FC               	addwf	_nout& (0+255),f,b
  2205  0077A0  0100               	movlb	0	; () banked
  2206  0077A2  51D4               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2207  0077A4  0101               	movlb	1	; () banked
  2208  0077A6  23FD               	addwfc	(_nout+1)& (0+255),f,b
  2209  0077A8                     l5954:
  2210                           
  2211                           ; BSR set to: 1
  2212                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2213  0077A8  C0F7  FFF6         	movff	vfprintf@cfmt,tblptrl
  2214  0077AC  C0F8  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2215  0077B0                     	if	0	;tblptru may be non-zero
  2216  0077B0                     	endif
  2217  0077B0                     	if	0	;tblptru may be non-zero
  2218  0077B0                     	endif
  2219  0077B0  0008               	tblrd		*
  2220  0077B2  50F5               	movf	tablat,w,c
  2221  0077B4  0900               	iorlw	0
  2222  0077B6  A4D8               	btfss	status,2,c
  2223  0077B8  EFE0  F03B         	goto	u7401
  2224  0077BC  EFE2  F03B         	goto	u7400
  2225  0077C0                     u7401:
  2226  0077C0  EFBD  F03B         	goto	l5952
  2227  0077C4                     u7400:
  2228  0077C4                     
  2229                           ; BSR set to: 1
  2230                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2231  0077C4  C1FC  F0F1         	movff	_nout,?_vfprintf
  2232  0077C8  C1FD  F0F2         	movff	_nout+1,?_vfprintf+1
  2233  0077CC                     
  2234                           ; BSR set to: 1
  2235  0077CC  0012               	return		;funcret
  2236  0077CE                     __end_of_vfprintf:
  2237                           	callstack 0
  2238                           
  2239 ;; *************** function _vfpfcnvrt *****************
  2240 ;; Defined at:
  2241 ;;		line 692 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;  fp              2  115[BANK0 ] PTR struct _IO_FILE
  2244 ;;		 -> sprintf@f(6), 
  2245 ;;  fmt             2  117[BANK0 ] PTR PTR unsigned char 
  2246 ;;		 -> vfprintf@cfmt(2), 
  2247 ;;  ap              2  119[BANK0 ] PTR PTR void 
  2248 ;;		 -> sprintf@ap(2), 
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;  ll              8  125[BANK0 ] long long 
  2251 ;;  llu             8    0        unsigned long long 
  2252 ;;  f               4  137[BANK0 ] unsigned long long 
  2253 ;;  ct              3  141[BANK0 ] unsigned char [3]
  2254 ;;  vp              3    0        PTR void 
  2255 ;;  cp              3    0        PTR unsigned char 
  2256 ;;  i               2    0        int 
  2257 ;;  done            2    0        int 
  2258 ;;  c               1  144[BANK0 ] unsigned char 
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  2  115[BANK0 ] int 
  2261 ;; Registers used:
  2262 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2268 ;;      Params:         0       6       0       0       0       0       0       0       0
  2269 ;;      Locals:         0      20       0       0       0       0       0       0       0
  2270 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2271 ;;      Totals:         0      30       0       0       0       0       0       0       0
  2272 ;;Total ram usage:       30 bytes
  2273 ;; Hardware stack levels used:    1
  2274 ;; Hardware stack levels required when called:    5
  2275 ;; This function calls:
  2276 ;;		_atoi
  2277 ;;		_dtoa
  2278 ;;		_efgtoa
  2279 ;;		_fputc
  2280 ;;		_isdigit
  2281 ;;		_isupper
  2282 ;;		_strncmp
  2283 ;;		_tolower
  2284 ;; This function is called by:
  2285 ;;		_vfprintf
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text3
  2290  0046EE                     __ptext3:
  2291                           	callstack 0
  2292  0046EE                     _vfpfcnvrt:
  2293                           	callstack 23
  2294  0046EE                     
  2295                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);D:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;D:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;D:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;D:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2296  0046EE  C0D5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2297  0046F2  C0D6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2298  0046F6  CFDE FFF6          	movff	postinc2,tblptrl
  2299  0046FA  CFDD FFF7          	movff	postdec2,tblptrh
  2300  0046FE                     	if	0	;tblptru may be non-zero
  2301  0046FE                     	endif
  2302  0046FE                     	if	0	;tblptru may be non-zero
  2303  0046FE                     	endif
  2304  0046FE  0008               	tblrd		*
  2305  004700  50F5               	movf	tablat,w,c
  2306  004702  0A25               	xorlw	37
  2307  004704  A4D8               	btfss	status,2,c
  2308  004706  EF87  F023         	goto	u6271
  2309  00470A  EF89  F023         	goto	u6270
  2310  00470E                     u6271:
  2311  00470E  EFF7  F025         	goto	l5250
  2312  004712                     u6270:
  2313  004712                     
  2314                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2315  004712  C0D5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2316  004716  C0D6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2317  00471A  2ADE               	incf	postinc2,f,c
  2318  00471C  0E00               	movlw	0
  2319  00471E  22DD               	addwfc	postdec2,f,c
  2320  004720                     
  2321                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2322  004720  0E00               	movlw	0
  2323  004722  0101               	movlb	1	; () banked
  2324  004724  6FFF               	movwf	(_width+1)& (0+255),b
  2325  004726  0E00               	movlw	0
  2326  004728  6FFE               	movwf	_width& (0+255),b
  2327  00472A  C1FE  F0FD         	movff	_width,_flags
  2328  00472E  C1FF  F0FE         	movff	_width+1,_flags+1
  2329  004732                     
  2330                           ; BSR set to: 1
  2331                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2332  004732  0100               	movlb	0	; () banked
  2333  004734  69FB               	setf	_prec& (0+255),b
  2334  004736  69FC               	setf	(_prec+1)& (0+255),b
  2335  004738                     
  2336                           ; BSR set to: 0
  2337                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  2338  004738  C0D5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2339  00473C  C0D6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2340  004740  CFDE FFF6          	movff	postinc2,tblptrl
  2341  004744  CFDD FFF7          	movff	postdec2,tblptrh
  2342  004748                     	if	0	;tblptru may be non-zero
  2343  004748                     	endif
  2344  004748                     	if	0	;tblptru may be non-zero
  2345  004748                     	endif
  2346  004748  0008               	tblrd		*
  2347  00474A  50F5               	movf	tablat,w,c
  2348  00474C  0A2E               	xorlw	46
  2349  00474E  A4D8               	btfss	status,2,c
  2350  004750  EFAC  F023         	goto	u6281
  2351  004754  EFAE  F023         	goto	u6280
  2352  004758                     u6281:
  2353  004758  EF2C  F024         	goto	l5186
  2354  00475C                     u6280:
  2355  00475C                     
  2356                           ; BSR set to: 0
  2357                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  2358  00475C  0E00               	movlw	0
  2359  00475E  6FFC               	movwf	(_prec+1)& (0+255),b
  2360  004760  0E00               	movlw	0
  2361  004762  6FFB               	movwf	_prec& (0+255),b
  2362  004764                     
  2363                           ; BSR set to: 0
  2364                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  2365  004764  C0D5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2366  004768  C0D6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2367  00476C  2ADE               	incf	postinc2,f,c
  2368  00476E  0E00               	movlw	0
  2369  004770  22DD               	addwfc	postdec2,f,c
  2370  004772                     
  2371                           ; BSR set to: 0
  2372                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  2373  004772  C0D5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2374  004776  C0D6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2375  00477A  CFDE FFF6          	movff	postinc2,tblptrl
  2376  00477E  CFDD FFF7          	movff	postdec2,tblptrh
  2377  004782                     	if	0	;tblptru may be non-zero
  2378  004782                     	endif
  2379  004782                     	if	0	;tblptru may be non-zero
  2380  004782                     	endif
  2381  004782  0008               	tblrd		*
  2382  004784  50F5               	movf	tablat,w,c
  2383  004786  0A2A               	xorlw	42
  2384  004788  A4D8               	btfss	status,2,c
  2385  00478A  EFC9  F023         	goto	u6291
  2386  00478E  EFCB  F023         	goto	u6290
  2387  004792                     u6291:
  2388  004792  EFE8  F023         	goto	l5176
  2389  004796                     u6290:
  2390  004796                     
  2391                           ; BSR set to: 0
  2392                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  2393  004796  C0D5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2394  00479A  C0D6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2395  00479E  2ADE               	incf	postinc2,f,c
  2396  0047A0  0E00               	movlw	0
  2397  0047A2  22DD               	addwfc	postdec2,f,c
  2398                           
  2399                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2400  0047A4  C0D7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2401  0047A8  C0D8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2402  0047AC  CFDF F0D9          	movff	indf2,??_vfpfcnvrt
  2403  0047B0  0E02               	movlw	2
  2404  0047B2  26DE               	addwf	postinc2,f,c
  2405  0047B4  CFDF F0DA          	movff	indf2,??_vfpfcnvrt+1
  2406  0047B8  0E00               	movlw	0
  2407  0047BA  22DD               	addwfc	postdec2,f,c
  2408  0047BC  C0D9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2409  0047C0  C0DA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2410  0047C4  CFDE F0FB          	movff	postinc2,_prec
  2411  0047C8  CFDD F0FC          	movff	postdec2,_prec+1
  2412                           
  2413                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  2414  0047CC  EF2C  F024         	goto	l5186
  2415  0047D0                     l5176:
  2416                           
  2417                           ; BSR set to: 0
  2418                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  2419  0047D0  C0D5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2420  0047D4  C0D6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2421  0047D8  CFDE F008          	movff	postinc2,atoi@s
  2422  0047DC  CFDD F009          	movff	postdec2,atoi@s+1
  2423  0047E0  EC18  F034         	call	_atoi	;wreg free
  2424  0047E4  C008  F0FB         	movff	?_atoi,_prec
  2425  0047E8  C009  F0FC         	movff	?_atoi+1,_prec+1
  2426                           
  2427                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2428  0047EC  EFFF  F023         	goto	l5180
  2429  0047F0                     l5178:
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  2433  0047F0  C0D5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2434  0047F4  C0D6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2435  0047F8  2ADE               	incf	postinc2,f,c
  2436  0047FA  0E00               	movlw	0
  2437  0047FC  22DD               	addwfc	postdec2,f,c
  2438  0047FE                     l5180:
  2439  0047FE  0ED0               	movlw	208
  2440  004800  0100               	movlb	0	; () banked
  2441  004802  6FD9               	movwf	??_vfpfcnvrt& (0+255),b
  2442  004804  0EFF               	movlw	255
  2443  004806  6FDA               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2444  004808  C0D5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2445  00480C  C0D6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2446  004810  CFDE FFF6          	movff	postinc2,tblptrl
  2447  004814  CFDD FFF7          	movff	postdec2,tblptrh
  2448  004818                     	if	0	;tblptru may be non-zero
  2449  004818                     	endif
  2450  004818                     	if	0	;tblptru may be non-zero
  2451  004818                     	endif
  2452  004818  0008               	tblrd		*
  2453  00481A  50F5               	movf	tablat,w,c
  2454  00481C  6FDB               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2455  00481E  6BDC               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2456  004820  51D9               	movf	??_vfpfcnvrt& (0+255),w,b
  2457  004822  27DB               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2458  004824  51DA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2459  004826  23DC               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2460  004828  51DC               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2461  00482A  E10A               	bnz	u6300
  2462  00482C  0E0A               	movlw	10
  2463  00482E  5DDB               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2464  004830  A0D8               	btfss	status,0,c
  2465  004832  EF1D  F024         	goto	u6301
  2466  004836  EF20  F024         	goto	u6300
  2467  00483A                     u6301:
  2468  00483A  0E01               	movlw	1
  2469  00483C  EF21  F024         	goto	u6310
  2470  004840                     u6300:
  2471  004840  0E00               	movlw	0
  2472  004842                     u6310:
  2473  004842  6FE5               	movwf	_vfpfcnvrt$962& (0+255),b
  2474  004844  6BE6               	clrf	(_vfpfcnvrt$962+1)& (0+255),b
  2475  004846                     
  2476                           ; BSR set to: 0
  2477  004846  51E5               	movf	_vfpfcnvrt$962& (0+255),w,b
  2478  004848  11E6               	iorwf	(_vfpfcnvrt$962+1)& (0+255),w,b
  2479  00484A  A4D8               	btfss	status,2,c
  2480  00484C  EF2A  F024         	goto	u6321
  2481  004850  EF2C  F024         	goto	u6320
  2482  004854                     u6321:
  2483  004854  EFF8  F023         	goto	l5178
  2484  004858                     u6320:
  2485  004858                     l5186:
  2486                           
  2487                           ; BSR set to: 0
  2488                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2489  004858  C0D5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2490  00485C  C0D6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2491  004860  CFDE FFF6          	movff	postinc2,tblptrl
  2492  004864  CFDD FFF7          	movff	postdec2,tblptrh
  2493  004868                     	if	0	;tblptru may be non-zero
  2494  004868                     	endif
  2495  004868                     	if	0	;tblptru may be non-zero
  2496  004868                     	endif
  2497  004868  0008               	tblrd		*
  2498  00486A  50F5               	movf	tablat,w,c
  2499  00486C  6E07               	movwf	tolower@c^0,c
  2500  00486E  6A08               	clrf	(tolower@c+1)^0,c
  2501  004870  ECE7  F03B         	call	_tolower	;wreg free
  2502  004874  5007               	movf	?_tolower^0,w,c
  2503  004876  0100               	movlb	0	; () banked
  2504  004878  6FED               	movwf	vfpfcnvrt@ct& (0+255),b
  2505  00487A                     
  2506                           ; BSR set to: 0
  2507                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2508  00487A  51ED               	movf	vfpfcnvrt@ct& (0+255),w,b
  2509  00487C  B4D8               	btfsc	status,2,c
  2510  00487E  EF43  F024         	goto	u6331
  2511  004882  EF45  F024         	goto	u6330
  2512  004886                     u6331:
  2513  004886  EF7F  F024         	goto	l5196
  2514  00488A                     u6330:
  2515  00488A                     
  2516                           ; BSR set to: 0
  2517                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2518  00488A  C0D5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2519  00488E  C0D6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2520  004892  CFDE F0D9          	movff	postinc2,??_vfpfcnvrt
  2521  004896  CFDD F0DA          	movff	postdec2,??_vfpfcnvrt+1
  2522  00489A  0E01               	movlw	1
  2523  00489C  27D9               	addwf	??_vfpfcnvrt& (0+255),f,b
  2524  00489E  0E00               	movlw	0
  2525  0048A0  23DA               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2526  0048A2  C0D9  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2527  0048A6  C0DA  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2528  0048AA                     	if	0	;tblptru may be non-zero
  2529  0048AA                     	endif
  2530  0048AA                     	if	0	;tblptru may be non-zero
  2531  0048AA                     	endif
  2532  0048AA  0008               	tblrd		*
  2533  0048AC  50F5               	movf	tablat,w,c
  2534  0048AE  6E07               	movwf	tolower@c^0,c
  2535  0048B0  6A08               	clrf	(tolower@c+1)^0,c
  2536  0048B2  ECE7  F03B         	call	_tolower	;wreg free
  2537  0048B6  5007               	movf	?_tolower^0,w,c
  2538  0048B8  0100               	movlb	0	; () banked
  2539  0048BA  6FEE               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2540  0048BC                     
  2541                           ; BSR set to: 0
  2542                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2543  0048BC  51EE               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2544  0048BE  B4D8               	btfsc	status,2,c
  2545  0048C0  EF64  F024         	goto	u6341
  2546  0048C4  EF66  F024         	goto	u6340
  2547  0048C8                     u6341:
  2548  0048C8  EF7F  F024         	goto	l5196
  2549  0048CC                     u6340:
  2550  0048CC                     
  2551                           ; BSR set to: 0
  2552                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2553  0048CC  C0D5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2554  0048D0  C0D6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2555  0048D4  CFDE F0D9          	movff	postinc2,??_vfpfcnvrt
  2556  0048D8  CFDD F0DA          	movff	postdec2,??_vfpfcnvrt+1
  2557  0048DC  0E02               	movlw	2
  2558  0048DE  27D9               	addwf	??_vfpfcnvrt& (0+255),f,b
  2559  0048E0  0E00               	movlw	0
  2560  0048E2  23DA               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2561  0048E4  C0D9  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2562  0048E8  C0DA  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2563  0048EC                     	if	0	;tblptru may be non-zero
  2564  0048EC                     	endif
  2565  0048EC                     	if	0	;tblptru may be non-zero
  2566  0048EC                     	endif
  2567  0048EC  0008               	tblrd		*
  2568  0048EE  50F5               	movf	tablat,w,c
  2569  0048F0  6E07               	movwf	tolower@c^0,c
  2570  0048F2  6A08               	clrf	(tolower@c+1)^0,c
  2571  0048F4  ECE7  F03B         	call	_tolower	;wreg free
  2572  0048F8  5007               	movf	?_tolower^0,w,c
  2573  0048FA  0100               	movlb	0	; () banked
  2574  0048FC  6FEF               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2575  0048FE                     l5196:
  2576                           
  2577                           ; BSR set to: 0
  2578                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2579  0048FE  C0D5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2580  004902  C0D6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2581  004906  CFDE FFF6          	movff	postinc2,tblptrl
  2582  00490A  CFDD FFF7          	movff	postdec2,tblptrh
  2583  00490E                     	if	0	;tblptru may be non-zero
  2584  00490E                     	endif
  2585  00490E                     	if	0	;tblptru may be non-zero
  2586  00490E                     	endif
  2587  00490E  0008               	tblrd		*
  2588  004910  50F5               	movf	tablat,w,c
  2589  004912  0A64               	xorlw	100
  2590  004914  B4D8               	btfsc	status,2,c
  2591  004916  EF8F  F024         	goto	u6351
  2592  00491A  EF91  F024         	goto	u6350
  2593  00491E                     u6351:
  2594  00491E  EFA3  F024         	goto	l5200
  2595  004922                     u6350:
  2596  004922                     
  2597                           ; BSR set to: 0
  2598  004922  C0D5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2599  004926  C0D6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2600  00492A  CFDE FFF6          	movff	postinc2,tblptrl
  2601  00492E  CFDD FFF7          	movff	postdec2,tblptrh
  2602  004932                     	if	0	;tblptru may be non-zero
  2603  004932                     	endif
  2604  004932                     	if	0	;tblptru may be non-zero
  2605  004932                     	endif
  2606  004932  0008               	tblrd		*
  2607  004934  50F5               	movf	tablat,w,c
  2608  004936  0A69               	xorlw	105
  2609  004938  A4D8               	btfss	status,2,c
  2610  00493A  EFA1  F024         	goto	u6361
  2611  00493E  EFA3  F024         	goto	u6360
  2612  004942                     u6361:
  2613  004942  EFE3  F024         	goto	l5206
  2614  004946                     u6360:
  2615  004946                     l5200:
  2616                           
  2617                           ; BSR set to: 0
  2618                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2619  004946  C0D5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2620  00494A  C0D6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2621  00494E  2ADE               	incf	postinc2,f,c
  2622  004950  0E00               	movlw	0
  2623  004952  22DD               	addwfc	postdec2,f,c
  2624                           
  2625                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2626  004954  C0D7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2627  004958  C0D8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2628  00495C  CFDF F0D9          	movff	indf2,??_vfpfcnvrt
  2629  004960  0E02               	movlw	2
  2630  004962  26DE               	addwf	postinc2,f,c
  2631  004964  CFDF F0DA          	movff	indf2,??_vfpfcnvrt+1
  2632  004968  0E00               	movlw	0
  2633  00496A  22DD               	addwfc	postdec2,f,c
  2634  00496C  C0D9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2635  004970  C0DA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2636  004974  CFDE F0DD          	movff	postinc2,vfpfcnvrt@ll
  2637  004978  CFDD F0DE          	movff	postdec2,vfpfcnvrt@ll+1
  2638  00497C  0E00               	movlw	0
  2639  00497E  BFDE               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2640  004980  0EFF               	movlw	-1
  2641  004982  6FDF               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2642  004984  6FE0               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2643  004986  6FE1               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2644  004988  6FE2               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2645  00498A  6FE3               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2646  00498C  6FE4               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2647  00498E                     
  2648                           ; BSR set to: 0
  2649                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2650  00498E  C0D3  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2651  004992  C0D4  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2652  004996  C0DD  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2653  00499A  C0DE  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2654  00499E  C0DF  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2655  0049A2  C0E0  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2656  0049A6  C0E1  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2657  0049AA  C0E2  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2658  0049AE  C0E3  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2659  0049B2  C0E4  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2660  0049B6  ECB4  F02E         	call	_dtoa	;wreg free
  2661  0049BA  C01C  F0D3         	movff	?_dtoa,?_vfpfcnvrt
  2662  0049BE  C01D  F0D4         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2663  0049C2  EF12  F026         	goto	l1035
  2664  0049C6                     l5206:
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2668  0049C6  0E66               	movlw	102
  2669  0049C8  19ED               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2670  0049CA  A4D8               	btfss	status,2,c
  2671  0049CC  EFEA  F024         	goto	u6371
  2672  0049D0  EFEC  F024         	goto	u6370
  2673  0049D4                     u6371:
  2674  0049D4  EF2C  F025         	goto	l5218
  2675  0049D8                     u6370:
  2676  0049D8                     
  2677                           ; BSR set to: 0
  2678                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2679  0049D8  C0D5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2680  0049DC  C0D6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2681  0049E0  CFDE FFF6          	movff	postinc2,tblptrl
  2682  0049E4  CFDD FFF7          	movff	postdec2,tblptrh
  2683  0049E8                     	if	0	;tblptru may be non-zero
  2684  0049E8                     	endif
  2685  0049E8                     	if	0	;tblptru may be non-zero
  2686  0049E8                     	endif
  2687  0049E8  0008               	tblrd		*
  2688  0049EA  CFF5 F0F0          	movff	tablat,vfpfcnvrt@c
  2689  0049EE                     
  2690                           ; BSR set to: 0
  2691                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2692  0049EE  C0D5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2693  0049F2  C0D6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2694  0049F6  2ADE               	incf	postinc2,f,c
  2695  0049F8  0E00               	movlw	0
  2696  0049FA  22DD               	addwfc	postdec2,f,c
  2697  0049FC                     
  2698                           ; BSR set to: 0
  2699                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2700  0049FC  C0D7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2701  004A00  C0D8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2702  004A04  CFDF F0D9          	movff	indf2,??_vfpfcnvrt
  2703  004A08  0E04               	movlw	4
  2704  004A0A  26DE               	addwf	postinc2,f,c
  2705  004A0C  CFDF F0DA          	movff	indf2,??_vfpfcnvrt+1
  2706  004A10  0E00               	movlw	0
  2707  004A12  22DD               	addwfc	postdec2,f,c
  2708  004A14  C0D9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2709  004A18  C0DA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2710  004A1C  CFDE F0E9          	movff	postinc2,vfpfcnvrt@f
  2711  004A20  CFDE F0EA          	movff	postinc2,vfpfcnvrt@f+1
  2712  004A24  CFDE F0EB          	movff	postinc2,vfpfcnvrt@f+2
  2713  004A28  CFDE F0EC          	movff	postinc2,vfpfcnvrt@f+3
  2714  004A2C                     l5214:
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2718  004A2C  C0D3  F0C7         	movff	vfpfcnvrt@fp,efgtoa@fp
  2719  004A30  C0D4  F0C8         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2720  004A34  C0E9  F0C9         	movff	vfpfcnvrt@f,efgtoa@f
  2721  004A38  C0EA  F0CA         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2722  004A3C  C0EB  F0CB         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2723  004A40  C0EC  F0CC         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2724  004A44  C0F0  F0CD         	movff	vfpfcnvrt@c,efgtoa@c
  2725  004A48  EC82  F019         	call	_efgtoa	;wreg free
  2726  004A4C  C0C7  F0D3         	movff	?_efgtoa,?_vfpfcnvrt
  2727  004A50  C0C8  F0D4         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2728  004A54  EF12  F026         	goto	l1035
  2729  004A58                     l5218:
  2730                           
  2731                           ; BSR set to: 0
  2732                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2733  004A58  0EED               	movlw	low vfpfcnvrt@ct
  2734  004A5A  6E01               	movwf	strncmp@_l^0,c
  2735  004A5C  0E00               	movlw	high vfpfcnvrt@ct
  2736  004A5E  6E02               	movwf	(strncmp@_l+1)^0,c
  2737  004A60  0EEE               	movlw	low STR_19
  2738  004A62  6E03               	movwf	strncmp@_r^0,c
  2739  004A64  0E08               	movlw	high STR_19
  2740  004A66  6E04               	movwf	(strncmp@_r+1)^0,c
  2741  004A68  0E00               	movlw	0
  2742  004A6A  6E06               	movwf	(strncmp@n+1)^0,c
  2743  004A6C  0E02               	movlw	2
  2744  004A6E  6E05               	movwf	strncmp@n^0,c
  2745  004A70  ECD5  F038         	call	_strncmp	;wreg free
  2746  004A74  5001               	movf	?_strncmp^0,w,c
  2747  004A76  1002               	iorwf	(?_strncmp+1)^0,w,c
  2748  004A78  A4D8               	btfss	status,2,c
  2749  004A7A  EF41  F025         	goto	u6381
  2750  004A7E  EF43  F025         	goto	u6380
  2751  004A82                     u6381:
  2752  004A82  EFBF  F025         	goto	l5234
  2753  004A86                     u6380:
  2754  004A86                     
  2755                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2756  004A86  C0D5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2757  004A8A  C0D6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2758  004A8E  CFDE F0D9          	movff	postinc2,??_vfpfcnvrt
  2759  004A92  CFDD F0DA          	movff	postdec2,??_vfpfcnvrt+1
  2760  004A96  0E01               	movlw	1
  2761  004A98  0100               	movlb	0	; () banked
  2762  004A9A  27D9               	addwf	??_vfpfcnvrt& (0+255),f,b
  2763  004A9C  0E00               	movlw	0
  2764  004A9E  23DA               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2765  004AA0  C0D9  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2766  004AA4  C0DA  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2767  004AA8                     	if	0	;tblptru may be non-zero
  2768  004AA8                     	endif
  2769  004AA8                     	if	0	;tblptru may be non-zero
  2770  004AA8                     	endif
  2771  004AA8  0008               	tblrd		*
  2772  004AAA  CFF5 F0F0          	movff	tablat,vfpfcnvrt@c
  2773  004AAE  0EBF               	movlw	191
  2774  004AB0  6FD9               	movwf	??_vfpfcnvrt& (0+255),b
  2775  004AB2  0EFF               	movlw	255
  2776  004AB4  6FDA               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2777  004AB6  C0D5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2778  004ABA  C0D6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2779  004ABE  CFDE FFF6          	movff	postinc2,tblptrl
  2780  004AC2  CFDD FFF7          	movff	postdec2,tblptrh
  2781  004AC6                     	if	0	;tblptru may be non-zero
  2782  004AC6                     	endif
  2783  004AC6                     	if	0	;tblptru may be non-zero
  2784  004AC6                     	endif
  2785  004AC6  0008               	tblrd		*
  2786  004AC8  50F5               	movf	tablat,w,c
  2787  004ACA  6FDB               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2788  004ACC  6BDC               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2789  004ACE  51D9               	movf	??_vfpfcnvrt& (0+255),w,b
  2790  004AD0  27DB               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2791  004AD2  51DA               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2792  004AD4  23DC               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2793  004AD6  51DC               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2794  004AD8  E10A               	bnz	u6390
  2795  004ADA  0E1A               	movlw	26
  2796  004ADC  5DDB               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2797  004ADE  A0D8               	btfss	status,0,c
  2798  004AE0  EF74  F025         	goto	u6391
  2799  004AE4  EF77  F025         	goto	u6390
  2800  004AE8                     u6391:
  2801  004AE8  0E01               	movlw	1
  2802  004AEA  EF78  F025         	goto	u6400
  2803  004AEE                     u6390:
  2804  004AEE  0E00               	movlw	0
  2805  004AF0                     u6400:
  2806  004AF0  6FE7               	movwf	_vfpfcnvrt$967& (0+255),b
  2807  004AF2  6BE8               	clrf	(_vfpfcnvrt$967+1)& (0+255),b
  2808  004AF4                     
  2809                           ; BSR set to: 0
  2810  004AF4  51E7               	movf	_vfpfcnvrt$967& (0+255),w,b
  2811  004AF6  11E8               	iorwf	(_vfpfcnvrt$967+1)& (0+255),w,b
  2812  004AF8  B4D8               	btfsc	status,2,c
  2813  004AFA  EF81  F025         	goto	u6411
  2814  004AFE  EF83  F025         	goto	u6410
  2815  004B02                     u6411:
  2816  004B02  EF9D  F025         	goto	l5228
  2817  004B06                     u6410:
  2818  004B06                     
  2819                           ; BSR set to: 0
  2820                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2821  004B06  C0D7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2822  004B0A  C0D8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2823  004B0E  CFDF F0D9          	movff	indf2,??_vfpfcnvrt
  2824  004B12  0E04               	movlw	4
  2825  004B14  26DE               	addwf	postinc2,f,c
  2826  004B16  CFDF F0DA          	movff	indf2,??_vfpfcnvrt+1
  2827  004B1A  0E00               	movlw	0
  2828  004B1C  22DD               	addwfc	postdec2,f,c
  2829  004B1E  C0D9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2830  004B22  C0DA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2831  004B26  CFDE F0E9          	movff	postinc2,vfpfcnvrt@f
  2832  004B2A  CFDE F0EA          	movff	postinc2,vfpfcnvrt@f+1
  2833  004B2E  CFDE F0EB          	movff	postinc2,vfpfcnvrt@f+2
  2834  004B32  CFDE F0EC          	movff	postinc2,vfpfcnvrt@f+3
  2835                           
  2836                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2837  004B36  EFB5  F025         	goto	l1043
  2838  004B3A                     l5228:
  2839                           
  2840                           ; BSR set to: 0
  2841                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2842  004B3A  C0D7  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2843  004B3E  C0D8  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2844  004B42  CFDF F0D9          	movff	indf2,??_vfpfcnvrt
  2845  004B46  0E04               	movlw	4
  2846  004B48  26DE               	addwf	postinc2,f,c
  2847  004B4A  CFDF F0DA          	movff	indf2,??_vfpfcnvrt+1
  2848  004B4E  0E00               	movlw	0
  2849  004B50  22DD               	addwfc	postdec2,f,c
  2850  004B52  C0D9  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2851  004B56  C0DA  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2852  004B5A  CFDE F0E9          	movff	postinc2,vfpfcnvrt@f
  2853  004B5E  CFDE F0EA          	movff	postinc2,vfpfcnvrt@f+1
  2854  004B62  CFDE F0EB          	movff	postinc2,vfpfcnvrt@f+2
  2855  004B66  CFDE F0EC          	movff	postinc2,vfpfcnvrt@f+3
  2856  004B6A                     l1043:
  2857                           
  2858                           ; BSR set to: 0
  2859                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2860  004B6A  0E02               	movlw	2
  2861  004B6C  C0D5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2862  004B70  C0D6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2863  004B74  26DE               	addwf	postinc2,f,c
  2864  004B76  0E00               	movlw	0
  2865  004B78  22DD               	addwfc	postdec2,f,c
  2866  004B7A  EF16  F025         	goto	l5214
  2867  004B7E                     l5234:
  2868                           
  2869                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2870  004B7E  C0D5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2871  004B82  C0D6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2872  004B86  CFDE FFF6          	movff	postinc2,tblptrl
  2873  004B8A  CFDD FFF7          	movff	postdec2,tblptrh
  2874  004B8E                     	if	0	;tblptru may be non-zero
  2875  004B8E                     	endif
  2876  004B8E                     	if	0	;tblptru may be non-zero
  2877  004B8E                     	endif
  2878  004B8E  0008               	tblrd		*
  2879  004B90  50F5               	movf	tablat,w,c
  2880  004B92  0A25               	xorlw	37
  2881  004B94  A4D8               	btfss	status,2,c
  2882  004B96  EFCF  F025         	goto	u6421
  2883  004B9A  EFD1  F025         	goto	u6420
  2884  004B9E                     u6421:
  2885  004B9E  EFE9  F025         	goto	l5244
  2886  004BA2                     u6420:
  2887  004BA2                     
  2888                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2889  004BA2  C0D5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2890  004BA6  C0D6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2891  004BAA  2ADE               	incf	postinc2,f,c
  2892  004BAC  0E00               	movlw	0
  2893  004BAE  22DD               	addwfc	postdec2,f,c
  2894  004BB0                     
  2895                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2896  004BB0  0E00               	movlw	0
  2897  004BB2  6E02               	movwf	(fputc@c+1)^0,c
  2898  004BB4  0E25               	movlw	37
  2899  004BB6  6E01               	movwf	fputc@c^0,c
  2900  004BB8  C0D3  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2901  004BBC  C0D4  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2902  004BC0  EC40  F039         	call	_fputc	;wreg free
  2903  004BC4                     l5240:
  2904                           
  2905                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2906  004BC4  0E00               	movlw	0
  2907  004BC6  0100               	movlb	0	; () banked
  2908  004BC8  6FD4               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2909  004BCA  0E01               	movlw	1
  2910  004BCC  6FD3               	movwf	?_vfpfcnvrt& (0+255),b
  2911  004BCE  EF12  F026         	goto	l1035
  2912  004BD2                     l5244:
  2913                           
  2914                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2915  004BD2  C0D5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2916  004BD6  C0D6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2917  004BDA  2ADE               	incf	postinc2,f,c
  2918  004BDC  0E00               	movlw	0
  2919  004BDE  22DD               	addwfc	postdec2,f,c
  2920  004BE0                     
  2921                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2922  004BE0  0E00               	movlw	0
  2923  004BE2  0100               	movlb	0	; () banked
  2924  004BE4  6FD4               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2925  004BE6  0E00               	movlw	0
  2926  004BE8  6FD3               	movwf	?_vfpfcnvrt& (0+255),b
  2927  004BEA  EF12  F026         	goto	l1035
  2928  004BEE                     l5250:
  2929                           
  2930                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2931  004BEE  C0D5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2932  004BF2  C0D6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2933  004BF6  CFDE FFF6          	movff	postinc2,tblptrl
  2934  004BFA  CFDD FFF7          	movff	postdec2,tblptrh
  2935  004BFE                     	if	0	;tblptru may be non-zero
  2936  004BFE                     	endif
  2937  004BFE                     	if	0	;tblptru may be non-zero
  2938  004BFE                     	endif
  2939  004BFE  0008               	tblrd		*
  2940  004C00  50F5               	movf	tablat,w,c
  2941  004C02  6E01               	movwf	fputc@c^0,c
  2942  004C04  6A02               	clrf	(fputc@c+1)^0,c
  2943  004C06  C0D3  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2944  004C0A  C0D4  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2945  004C0E  EC40  F039         	call	_fputc	;wreg free
  2946  004C12                     
  2947                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2948  004C12  C0D5  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2949  004C16  C0D6  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2950  004C1A  2ADE               	incf	postinc2,f,c
  2951  004C1C  0E00               	movlw	0
  2952  004C1E  22DD               	addwfc	postdec2,f,c
  2953  004C20  EFE2  F025         	goto	l5240
  2954  004C24                     l1035:
  2955  004C24  0012               	return		;funcret
  2956  004C26                     __end_of_vfpfcnvrt:
  2957                           	callstack 0
  2958                           
  2959 ;; *************** function _strncmp *****************
  2960 ;; Defined at:
  2961 ;;		line 3 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strncmp.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2964 ;;		 -> vfpfcnvrt@ct(3), 
  2965 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2966 ;;		 -> STR_21(3), 
  2967 ;;  n               2    4[COMRAM] unsigned int 
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2970 ;;		 -> STR_21(3), 
  2971 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2972 ;;		 -> vfpfcnvrt@ct(3), 
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  2    0[COMRAM] int 
  2975 ;; Registers used:
  2976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2982 ;;      Params:         6       0       0       0       0       0       0       0       0
  2983 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2984 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2985 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2986 ;;Total ram usage:       11 bytes
  2987 ;; Hardware stack levels used:    1
  2988 ;; This function calls:
  2989 ;;		Nothing
  2990 ;; This function is called by:
  2991 ;;		_vfpfcnvrt
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995                           	psect	text4
  2996  0071AA                     __ptext4:
  2997                           	callstack 0
  2998  0071AA                     _strncmp:
  2999                           	callstack 27
  3000  0071AA  C001  F008         	movff	strncmp@_l,strncmp@l
  3001  0071AE  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  3002  0071B2  C003  F00A         	movff	strncmp@_r,strncmp@r
  3003  0071B6  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  3004  0071BA  0605               	decf	strncmp@n^0,f,c
  3005  0071BC  A0D8               	btfss	status,0,c
  3006  0071BE  0606               	decf	(strncmp@n+1)^0,f,c
  3007  0071C0  2805               	incf	strncmp@n^0,w,c
  3008  0071C2  E106               	bnz	u6121
  3009  0071C4  2806               	incf	(strncmp@n+1)^0,w,c
  3010  0071C6  A4D8               	btfss	status,2,c
  3011  0071C8  EFE8  F038         	goto	u6121
  3012  0071CC  EFEA  F038         	goto	u6120
  3013  0071D0                     u6121:
  3014  0071D0  EFF7  F038         	goto	l5082
  3015  0071D4                     u6120:
  3016  0071D4  0E00               	movlw	0
  3017  0071D6  6E02               	movwf	(?_strncmp+1)^0,c
  3018  0071D8  0E00               	movlw	0
  3019  0071DA  6E01               	movwf	?_strncmp^0,c
  3020  0071DC  EF3F  F039         	goto	l1400
  3021  0071E0                     l5080:
  3022  0071E0  4A08               	infsnz	strncmp@l^0,f,c
  3023  0071E2  2A09               	incf	(strncmp@l+1)^0,f,c
  3024  0071E4  4A0A               	infsnz	strncmp@r^0,f,c
  3025  0071E6  2A0B               	incf	(strncmp@r+1)^0,f,c
  3026  0071E8  0605               	decf	strncmp@n^0,f,c
  3027  0071EA  A0D8               	btfss	status,0,c
  3028  0071EC  0606               	decf	(strncmp@n+1)^0,f,c
  3029  0071EE                     l5082:
  3030  0071EE  C008  FFD9         	movff	strncmp@l,fsr2l
  3031  0071F2  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3032  0071F6  50DF               	movf	indf2,w,c
  3033  0071F8  B4D8               	btfsc	status,2,c
  3034  0071FA  EF01  F039         	goto	u6131
  3035  0071FE  EF03  F039         	goto	u6130
  3036  007202                     u6131:
  3037  007202  EF2E  F039         	goto	l5090
  3038  007206                     u6130:
  3039  007206  C00A  FFF6         	movff	strncmp@r,tblptrl
  3040  00720A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3041  00720E                     	if	0	;tblptru may be non-zero
  3042  00720E                     	endif
  3043  00720E                     	if	0	;tblptru may be non-zero
  3044  00720E                     	endif
  3045  00720E  0008               	tblrd		*
  3046  007210  50F5               	movf	tablat,w,c
  3047  007212  0900               	iorlw	0
  3048  007214  B4D8               	btfsc	status,2,c
  3049  007216  EF0F  F039         	goto	u6141
  3050  00721A  EF11  F039         	goto	u6140
  3051  00721E                     u6141:
  3052  00721E  EF2E  F039         	goto	l5090
  3053  007222                     u6140:
  3054  007222  5005               	movf	strncmp@n^0,w,c
  3055  007224  1006               	iorwf	(strncmp@n+1)^0,w,c
  3056  007226  B4D8               	btfsc	status,2,c
  3057  007228  EF18  F039         	goto	u6151
  3058  00722C  EF1A  F039         	goto	u6150
  3059  007230                     u6151:
  3060  007230  EF2E  F039         	goto	l5090
  3061  007234                     u6150:
  3062  007234  C008  FFD9         	movff	strncmp@l,fsr2l
  3063  007238  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3064  00723C  50DF               	movf	indf2,w,c
  3065  00723E  6E07               	movwf	??_strncmp^0,c
  3066  007240  C00A  FFF6         	movff	strncmp@r,tblptrl
  3067  007244  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3068  007248                     	if	0	;tblptru may be non-zero
  3069  007248                     	endif
  3070  007248                     	if	0	;tblptru may be non-zero
  3071  007248                     	endif
  3072  007248  0008               	tblrd		*
  3073  00724A  50F5               	movf	tablat,w,c
  3074  00724C  1807               	xorwf	??_strncmp^0,w,c
  3075  00724E  B4D8               	btfsc	status,2,c
  3076  007250  EF2C  F039         	goto	u6161
  3077  007254  EF2E  F039         	goto	u6160
  3078  007258                     u6161:
  3079  007258  EFF0  F038         	goto	l5080
  3080  00725C                     u6160:
  3081  00725C                     l5090:
  3082  00725C  C008  FFD9         	movff	strncmp@l,fsr2l
  3083  007260  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3084  007264  50DF               	movf	indf2,w,c
  3085  007266  6E07               	movwf	??_strncmp^0,c
  3086  007268  C00A  FFF6         	movff	strncmp@r,tblptrl
  3087  00726C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3088  007270                     	if	0	;tblptru may be non-zero
  3089  007270                     	endif
  3090  007270                     	if	0	;tblptru may be non-zero
  3091  007270                     	endif
  3092  007270  0008               	tblrd		*
  3093  007272  50F5               	movf	tablat,w,c
  3094  007274  5C07               	subwf	??_strncmp^0,w,c
  3095  007276  6E01               	movwf	?_strncmp^0,c
  3096  007278  6A02               	clrf	(?_strncmp+1)^0,c
  3097  00727A  A0D8               	btfss	status,0,c
  3098  00727C  0602               	decf	(?_strncmp+1)^0,f,c
  3099  00727E                     l1400:
  3100  00727E  0012               	return		;funcret
  3101  007280                     __end_of_strncmp:
  3102                           	callstack 0
  3103                           
  3104 ;; *************** function _efgtoa *****************
  3105 ;; Defined at:
  3106 ;;		line 332 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  3109 ;;		 -> sprintf@f(6), 
  3110 ;;  f               4  105[BANK0 ] PTR struct _IO_FILE
  3111 ;;  c               1  109[BANK0 ] unsigned char 
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;  u               4  240[BANK1 ] unsigned char 
  3114 ;;  g               4  232[BANK1 ] unsigned char 
  3115 ;;  l               4  226[BANK1 ] unsigned char 
  3116 ;;  h               4  222[BANK1 ] unsigned char 
  3117 ;;  ou              4  208[BANK1 ] unsigned char 
  3118 ;;  n               2  238[BANK1 ] int 
  3119 ;;  e               2  236[BANK1 ] int 
  3120 ;;  i               2  230[BANK1 ] int 
  3121 ;;  w               2  218[BANK1 ] int 
  3122 ;;  p               2  216[BANK1 ] int 
  3123 ;;  sign            2  214[BANK1 ] int 
  3124 ;;  d               2  212[BANK1 ] int 
  3125 ;;  m               2  206[BANK1 ] int 
  3126 ;;  ne              2  204[BANK1 ] int 
  3127 ;;  pp              2  202[BANK1 ] int 
  3128 ;;  t               2  200[BANK1 ] int 
  3129 ;;  mode            1  221[BANK1 ] unsigned char 
  3130 ;;  nmode           1  220[BANK1 ] unsigned char 
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  2  103[BANK0 ] int 
  3133 ;; Registers used:
  3134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3140 ;;      Params:         0       7       0       0       0       0       0       0       0
  3141 ;;      Locals:         0       0      56       0       0       0       0       0       0
  3142 ;;      Temps:          0       5       0       0       0       0       0       0       0
  3143 ;;      Totals:         0      12      56       0       0       0       0       0       0
  3144 ;;Total ram usage:       68 bytes
  3145 ;; Hardware stack levels used:    1
  3146 ;; Hardware stack levels required when called:    4
  3147 ;; This function calls:
  3148 ;;		___awdiv
  3149 ;;		___awmod
  3150 ;;		___fladd
  3151 ;;		___fldiv
  3152 ;;		___fleq
  3153 ;;		___flge
  3154 ;;		___flmul
  3155 ;;		___flneg
  3156 ;;		___flsub
  3157 ;;		___fltol
  3158 ;;		___fpclassifyf
  3159 ;;		_floorf
  3160 ;;		_isupper
  3161 ;;		_pad
  3162 ;;		_strcpy
  3163 ;;		_tolower
  3164 ;; This function is called by:
  3165 ;;		_vfpfcnvrt
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169                           	psect	text5
  3170  003304                     __ptext5:
  3171                           	callstack 0
  3172  003304                     _efgtoa:
  3173                           	callstack 23
  3174  003304                     
  3175                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);D:\Program Files\Microchip\xc8\v2.31\pic\sources\
      +                          c99\common\doprnt.c: 333: {;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;D:\Program Files\M
      +                          icrochip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  3176  003304  0E00               	movlw	0
  3177  003306  0101               	movlb	1	; () banked
  3178  003308  6FD7               	movwf	(efgtoa@sign+1)& (0+255),b
  3179  00330A  0E00               	movlw	0
  3180  00330C  6FD6               	movwf	efgtoa@sign& (0+255),b
  3181  00330E                     
  3182                           ; BSR set to: 1
  3183                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 340:     g = f;
  3184  00330E  C0C9  F1E8         	movff	efgtoa@f,efgtoa@g
  3185  003312  C0CA  F1E9         	movff	efgtoa@f+1,efgtoa@g+1
  3186  003316  C0CB  F1EA         	movff	efgtoa@f+2,efgtoa@g+2
  3187  00331A  C0CC  F1EB         	movff	efgtoa@f+3,efgtoa@g+3
  3188  00331E                     
  3189                           ; BSR set to: 1
  3190                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  3191  00331E  BFEB               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3192  003320  EF96  F019         	goto	u5510
  3193  003324  EF94  F019         	goto	u5511
  3194  003328                     u5511:
  3195  003328  EFAC  F019         	goto	l4734
  3196  00332C                     u5510:
  3197  00332C                     
  3198                           ; BSR set to: 1
  3199                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  3200  00332C  0E00               	movlw	0
  3201  00332E  6FD7               	movwf	(efgtoa@sign+1)& (0+255),b
  3202  003330  0E01               	movlw	1
  3203  003332  6FD6               	movwf	efgtoa@sign& (0+255),b
  3204  003334                     
  3205                           ; BSR set to: 1
  3206                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  3207  003334  C1E8  F001         	movff	efgtoa@g,___flneg@f1
  3208  003338  C1E9  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3209  00333C  C1EA  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3210  003340  C1EB  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3211  003344  ECD1  F03D         	call	___flneg	;wreg free
  3212  003348  C001  F1E8         	movff	?___flneg,efgtoa@g
  3213  00334C  C002  F1E9         	movff	?___flneg+1,efgtoa@g+1
  3214  003350  C003  F1EA         	movff	?___flneg+2,efgtoa@g+2
  3215  003354  C004  F1EB         	movff	?___flneg+3,efgtoa@g+3
  3216  003358                     l4734:
  3217                           
  3218                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  3219  003358  0E00               	movlw	0
  3220  00335A  0101               	movlb	1	; () banked
  3221  00335C  6FEF               	movwf	(efgtoa@n+1)& (0+255),b
  3222  00335E  0E00               	movlw	0
  3223  003360  6FEE               	movwf	efgtoa@n& (0+255),b
  3224  003362                     
  3225                           ; BSR set to: 1
  3226                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  3227  003362  C1FE  F1DA         	movff	_width,efgtoa@w
  3228  003366  C1FF  F1DB         	movff	_width+1,efgtoa@w+1
  3229  00336A                     
  3230                           ; BSR set to: 1
  3231                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  3232  00336A  51D6               	movf	efgtoa@sign& (0+255),w,b
  3233  00336C  11D7               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3234  00336E  A4D8               	btfss	status,2,c
  3235  003370  EFBC  F019         	goto	u5521
  3236  003374  EFBE  F019         	goto	u5520
  3237  003378                     u5521:
  3238  003378  EFC6  F019         	goto	l4742
  3239  00337C                     u5520:
  3240  00337C                     
  3241                           ; BSR set to: 1
  3242  00337C  0100               	movlb	0	; () banked
  3243  00337E  A5FD               	btfss	_flags& (0+255),2,b
  3244  003380  EFC4  F019         	goto	u5531
  3245  003384  EFC6  F019         	goto	u5530
  3246  003388                     u5531:
  3247  003388  EFE1  F019         	goto	l4754
  3248  00338C                     u5530:
  3249  00338C                     l4742:
  3250                           
  3251                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  3252  00338C  0101               	movlb	1	; () banked
  3253  00338E  51D6               	movf	efgtoa@sign& (0+255),w,b
  3254  003390  11D7               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3255  003392  A4D8               	btfss	status,2,c
  3256  003394  EFCE  F019         	goto	u5541
  3257  003398  EFD0  F019         	goto	u5540
  3258  00339C                     u5541:
  3259  00339C  EFD6  F019         	goto	l4746
  3260  0033A0                     u5540:
  3261  0033A0                     
  3262                           ; BSR set to: 1
  3263  0033A0  0E00               	movlw	0
  3264  0033A2  6FBD               	movwf	(_efgtoa$937+1)& (0+255),b
  3265  0033A4  0E2B               	movlw	43
  3266  0033A6  6FBC               	movwf	_efgtoa$937& (0+255),b
  3267  0033A8  EFDA  F019         	goto	l4748
  3268  0033AC                     l4746:
  3269                           
  3270                           ; BSR set to: 1
  3271  0033AC  0E00               	movlw	0
  3272  0033AE  6FBD               	movwf	(_efgtoa$937+1)& (0+255),b
  3273  0033B0  0E2D               	movlw	45
  3274  0033B2  6FBC               	movwf	_efgtoa$937& (0+255),b
  3275  0033B4                     l4748:
  3276                           
  3277                           ; BSR set to: 1
  3278  0033B4  C1BC  F212         	movff	_efgtoa$937,_dbuf
  3279  0033B8                     
  3280                           ; BSR set to: 1
  3281                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 351:         ++n;
  3282  0033B8  4BEE               	infsnz	efgtoa@n& (0+255),f,b
  3283  0033BA  2BEF               	incf	(efgtoa@n+1)& (0+255),f,b
  3284  0033BC                     
  3285                           ; BSR set to: 1
  3286                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 352:         --w;
  3287  0033BC  07DA               	decf	efgtoa@w& (0+255),f,b
  3288  0033BE  A0D8               	btfss	status,0,c
  3289  0033C0  07DB               	decf	(efgtoa@w+1)& (0+255),f,b
  3290  0033C2                     l4754:
  3291                           
  3292                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3293  0033C2  C1E8  F001         	movff	efgtoa@g,___fpclassifyf@x
  3294  0033C6  C1E9  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3295  0033CA  C1EA  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3296  0033CE  C1EB  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3297  0033D2  ECE8  F037         	call	___fpclassifyf	;wreg free
  3298  0033D6  0401               	decf	?___fpclassifyf^0,w,c
  3299  0033D8  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3300  0033DA  A4D8               	btfss	status,2,c
  3301  0033DC  EFF2  F019         	goto	u5551
  3302  0033E0  EFF4  F019         	goto	u5550
  3303  0033E4                     u5551:
  3304  0033E4  EF4C  F01A         	goto	l4772
  3305  0033E8                     u5550:
  3306  0033E8  0EBF               	movlw	191
  3307  0033EA  0100               	movlb	0	; () banked
  3308  0033EC  6FCE               	movwf	??_efgtoa& (0+255),b
  3309  0033EE  0EFF               	movlw	255
  3310  0033F0  6FCF               	movwf	(??_efgtoa+1)& (0+255),b
  3311  0033F2  51CD               	movf	efgtoa@c& (0+255),w,b
  3312  0033F4  6FD0               	movwf	(??_efgtoa+2)& (0+255),b
  3313  0033F6  6BD1               	clrf	(??_efgtoa+3)& (0+255),b
  3314  0033F8  51CE               	movf	??_efgtoa& (0+255),w,b
  3315  0033FA  27D0               	addwf	(??_efgtoa+2)& (0+255),f,b
  3316  0033FC  51CF               	movf	(??_efgtoa+1)& (0+255),w,b
  3317  0033FE  23D1               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3318  003400  51D1               	movf	(??_efgtoa+3)& (0+255),w,b
  3319  003402  E10A               	bnz	u5560
  3320  003404  0E1A               	movlw	26
  3321  003406  5DD0               	subwf	(??_efgtoa+2)& (0+255),w,b
  3322  003408  A0D8               	btfss	status,0,c
  3323  00340A  EF09  F01A         	goto	u5561
  3324  00340E  EF0C  F01A         	goto	u5560
  3325  003412                     u5561:
  3326  003412  0E01               	movlw	1
  3327  003414  EF0D  F01A         	goto	u5570
  3328  003418                     u5560:
  3329  003418  0E00               	movlw	0
  3330  00341A                     u5570:
  3331  00341A  0101               	movlb	1	; () banked
  3332  00341C  6FBE               	movwf	_efgtoa$938& (0+255),b
  3333  00341E  6BBF               	clrf	(_efgtoa$938+1)& (0+255),b
  3334  003420                     
  3335                           ; BSR set to: 1
  3336  003420  51BE               	movf	_efgtoa$938& (0+255),w,b
  3337  003422  11BF               	iorwf	(_efgtoa$938+1)& (0+255),w,b
  3338  003424  B4D8               	btfsc	status,2,c
  3339  003426  EF17  F01A         	goto	u5581
  3340  00342A  EF19  F01A         	goto	u5580
  3341  00342E                     u5581:
  3342  00342E  EF27  F01A         	goto	l4764
  3343  003432                     u5580:
  3344  003432                     
  3345                           ; BSR set to: 1
  3346                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  3347  003432  0E12               	movlw	low _dbuf
  3348  003434  25EE               	addwf	efgtoa@n& (0+255),w,b
  3349  003436  6E01               	movwf	strcpy@dest^0,c
  3350  003438  0E02               	movlw	high _dbuf
  3351  00343A  21EF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3352  00343C  6E02               	movwf	(strcpy@dest+1)^0,c
  3353  00343E  0EDA               	movlw	low STR_11
  3354  003440  6E03               	movwf	strcpy@src^0,c
  3355  003442  0E08               	movlw	high STR_11
  3356  003444  6E04               	movwf	(strcpy@src+1)^0,c
  3357  003446  EC46  F03C         	call	_strcpy	;wreg free
  3358                           
  3359                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  3360  00344A  EF33  F01A         	goto	l4766
  3361  00344E                     l4764:
  3362                           
  3363                           ; BSR set to: 1
  3364                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  3365  00344E  0E12               	movlw	low _dbuf
  3366  003450  25EE               	addwf	efgtoa@n& (0+255),w,b
  3367  003452  6E01               	movwf	strcpy@dest^0,c
  3368  003454  0E02               	movlw	high _dbuf
  3369  003456  21EF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3370  003458  6E02               	movwf	(strcpy@dest+1)^0,c
  3371  00345A  0EE2               	movlw	low STR_12
  3372  00345C  6E03               	movwf	strcpy@src^0,c
  3373  00345E  0E08               	movlw	high STR_12
  3374  003460  6E04               	movwf	(strcpy@src+1)^0,c
  3375  003462  EC46  F03C         	call	_strcpy	;wreg free
  3376  003466                     l4766:
  3377                           
  3378                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3379  003466  0101               	movlb	1	; () banked
  3380  003468  0EFD               	movlw	253
  3381  00346A  27DA               	addwf	efgtoa@w& (0+255),f,b
  3382  00346C  0EFF               	movlw	255
  3383  00346E  23DB               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3384  003470                     l4768:
  3385                           
  3386                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3387  003470  C0C7  F011         	movff	efgtoa@fp,pad@fp
  3388  003474  C0C8  F012         	movff	efgtoa@fp+1,pad@fp+1
  3389  003478  0E12               	movlw	low _dbuf
  3390  00347A  6E13               	movwf	pad@buf^0,c
  3391  00347C  0E02               	movlw	high _dbuf
  3392  00347E  6E14               	movwf	(pad@buf+1)^0,c
  3393  003480  C1DA  F015         	movff	efgtoa@w,pad@p
  3394  003484  C1DB  F016         	movff	efgtoa@w+1,pad@p+1
  3395  003488  ECA5  F039         	call	_pad	;wreg free
  3396  00348C  C011  F0C7         	movff	?_pad,?_efgtoa
  3397  003490  C012  F0C8         	movff	?_pad+1,?_efgtoa+1
  3398  003494  EFCF  F01F         	goto	l941
  3399  003498                     l4772:
  3400                           
  3401                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3402  003498  C1E8  F001         	movff	efgtoa@g,___fpclassifyf@x
  3403  00349C  C1E9  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3404  0034A0  C1EA  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3405  0034A4  C1EB  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3406  0034A8  ECE8  F037         	call	___fpclassifyf	;wreg free
  3407  0034AC  5001               	movf	?___fpclassifyf^0,w,c
  3408  0034AE  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3409  0034B0  A4D8               	btfss	status,2,c
  3410  0034B2  EF5D  F01A         	goto	u5591
  3411  0034B6  EF5F  F01A         	goto	u5590
  3412  0034BA                     u5591:
  3413  0034BA  EFA0  F01A         	goto	l4790
  3414  0034BE                     u5590:
  3415  0034BE  0EBF               	movlw	191
  3416  0034C0  0100               	movlb	0	; () banked
  3417  0034C2  6FCE               	movwf	??_efgtoa& (0+255),b
  3418  0034C4  0EFF               	movlw	255
  3419  0034C6  6FCF               	movwf	(??_efgtoa+1)& (0+255),b
  3420  0034C8  51CD               	movf	efgtoa@c& (0+255),w,b
  3421  0034CA  6FD0               	movwf	(??_efgtoa+2)& (0+255),b
  3422  0034CC  6BD1               	clrf	(??_efgtoa+3)& (0+255),b
  3423  0034CE  51CE               	movf	??_efgtoa& (0+255),w,b
  3424  0034D0  27D0               	addwf	(??_efgtoa+2)& (0+255),f,b
  3425  0034D2  51CF               	movf	(??_efgtoa+1)& (0+255),w,b
  3426  0034D4  23D1               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3427  0034D6  51D1               	movf	(??_efgtoa+3)& (0+255),w,b
  3428  0034D8  E10A               	bnz	u5600
  3429  0034DA  0E1A               	movlw	26
  3430  0034DC  5DD0               	subwf	(??_efgtoa+2)& (0+255),w,b
  3431  0034DE  A0D8               	btfss	status,0,c
  3432  0034E0  EF74  F01A         	goto	u5601
  3433  0034E4  EF77  F01A         	goto	u5600
  3434  0034E8                     u5601:
  3435  0034E8  0E01               	movlw	1
  3436  0034EA  EF78  F01A         	goto	u5610
  3437  0034EE                     u5600:
  3438  0034EE  0E00               	movlw	0
  3439  0034F0                     u5610:
  3440  0034F0  0101               	movlb	1	; () banked
  3441  0034F2  6FC0               	movwf	_efgtoa$942& (0+255),b
  3442  0034F4  6BC1               	clrf	(_efgtoa$942+1)& (0+255),b
  3443  0034F6                     
  3444                           ; BSR set to: 1
  3445  0034F6  51C0               	movf	_efgtoa$942& (0+255),w,b
  3446  0034F8  11C1               	iorwf	(_efgtoa$942+1)& (0+255),w,b
  3447  0034FA  B4D8               	btfsc	status,2,c
  3448  0034FC  EF82  F01A         	goto	u5621
  3449  003500  EF84  F01A         	goto	u5620
  3450  003504                     u5621:
  3451  003504  EF92  F01A         	goto	l4782
  3452  003508                     u5620:
  3453  003508                     
  3454                           ; BSR set to: 1
  3455                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3456  003508  0E12               	movlw	low _dbuf
  3457  00350A  25EE               	addwf	efgtoa@n& (0+255),w,b
  3458  00350C  6E01               	movwf	strcpy@dest^0,c
  3459  00350E  0E02               	movlw	high _dbuf
  3460  003510  21EF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3461  003512  6E02               	movwf	(strcpy@dest+1)^0,c
  3462  003514  0EDE               	movlw	low STR_15
  3463  003516  6E03               	movwf	strcpy@src^0,c
  3464  003518  0E08               	movlw	high STR_15
  3465  00351A  6E04               	movwf	(strcpy@src+1)^0,c
  3466  00351C  EC46  F03C         	call	_strcpy	;wreg free
  3467                           
  3468                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3469  003520  EF33  F01A         	goto	l4766
  3470  003524                     l4782:
  3471                           
  3472                           ; BSR set to: 1
  3473                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3474  003524  0E12               	movlw	low _dbuf
  3475  003526  25EE               	addwf	efgtoa@n& (0+255),w,b
  3476  003528  6E01               	movwf	strcpy@dest^0,c
  3477  00352A  0E02               	movlw	high _dbuf
  3478  00352C  21EF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3479  00352E  6E02               	movwf	(strcpy@dest+1)^0,c
  3480  003530  0EE6               	movlw	low STR_16
  3481  003532  6E03               	movwf	strcpy@src^0,c
  3482  003534  0E08               	movlw	high STR_16
  3483  003536  6E04               	movwf	(strcpy@src+1)^0,c
  3484  003538  EC46  F03C         	call	_strcpy	;wreg free
  3485  00353C  EF33  F01A         	goto	l4766
  3486  003540                     l4790:
  3487                           
  3488                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3489  003540  0E00               	movlw	0
  3490  003542  0101               	movlb	1	; () banked
  3491  003544  6FF0               	movwf	efgtoa@u& (0+255),b
  3492  003546  0E00               	movlw	0
  3493  003548  6FF1               	movwf	(efgtoa@u+1)& (0+255),b
  3494  00354A  0E80               	movlw	128
  3495  00354C  6FF2               	movwf	(efgtoa@u+2)& (0+255),b
  3496  00354E  0E3F               	movlw	63
  3497  003550  6FF3               	movwf	(efgtoa@u+3)& (0+255),b
  3498                           
  3499                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3500  003552  0E00               	movlw	0
  3501  003554  6FED               	movwf	(efgtoa@e+1)& (0+255),b
  3502  003556  0E00               	movlw	0
  3503  003558  6FEC               	movwf	efgtoa@e& (0+255),b
  3504  00355A                     
  3505                           ; BSR set to: 1
  3506                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3507  00355A  C1E8  F001         	movff	efgtoa@g,___fleq@ff1
  3508  00355E  C1E9  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3509  003562  C1EA  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3510  003566  C1EB  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3511  00356A  0E00               	movlw	0
  3512  00356C  6E05               	movwf	___fleq@ff2^0,c
  3513  00356E  0E00               	movlw	0
  3514  003570  6E06               	movwf	(___fleq@ff2+1)^0,c
  3515  003572  0E00               	movlw	0
  3516  003574  6E07               	movwf	(___fleq@ff2+2)^0,c
  3517  003576  0E00               	movlw	0
  3518  003578  6E08               	movwf	(___fleq@ff2+3)^0,c
  3519  00357A  ECC2  F03A         	call	___fleq	;wreg free
  3520  00357E  B0D8               	btfsc	status,0,c
  3521  003580  EFC4  F01A         	goto	u5631
  3522  003584  EFC6  F01A         	goto	u5630
  3523  003588                     u5631:
  3524  003588  EF4B  F01B         	goto	l4808
  3525  00358C                     u5630:
  3526  00358C  EFE5  F01A         	goto	l4800
  3527  003590                     l4796:
  3528                           
  3529                           ; BSR set to: 0
  3530                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  3531  003590  C1F0  F00F         	movff	efgtoa@u,___flmul@b
  3532  003594  C1F1  F010         	movff	efgtoa@u+1,___flmul@b+1
  3533  003598  C1F2  F011         	movff	efgtoa@u+2,___flmul@b+2
  3534  00359C  C1F3  F012         	movff	efgtoa@u+3,___flmul@b+3
  3535  0035A0  0E00               	movlw	0
  3536  0035A2  6E13               	movwf	___flmul@a^0,c
  3537  0035A4  0E00               	movlw	0
  3538  0035A6  6E14               	movwf	(___flmul@a+1)^0,c
  3539  0035A8  0E20               	movlw	32
  3540  0035AA  6E15               	movwf	(___flmul@a+2)^0,c
  3541  0035AC  0E41               	movlw	65
  3542  0035AE  6E16               	movwf	(___flmul@a+3)^0,c
  3543  0035B0  ECD2  F02A         	call	___flmul	;wreg free
  3544  0035B4  C00F  F1F0         	movff	?___flmul,efgtoa@u
  3545  0035B8  C010  F1F1         	movff	?___flmul+1,efgtoa@u+1
  3546  0035BC  C011  F1F2         	movff	?___flmul+2,efgtoa@u+2
  3547  0035C0  C012  F1F3         	movff	?___flmul+3,efgtoa@u+3
  3548  0035C4                     
  3549                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  3550  0035C4  0101               	movlb	1	; () banked
  3551  0035C6  4BEC               	infsnz	efgtoa@e& (0+255),f,b
  3552  0035C8  2BED               	incf	(efgtoa@e+1)& (0+255),f,b
  3553  0035CA                     l4800:
  3554                           
  3555                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  3556  0035CA  C1E8  F060         	movff	efgtoa@g,___flge@ff1
  3557  0035CE  C1E9  F061         	movff	efgtoa@g+1,___flge@ff1+1
  3558  0035D2  C1EA  F062         	movff	efgtoa@g+2,___flge@ff1+2
  3559  0035D6  C1EB  F063         	movff	efgtoa@g+3,___flge@ff1+3
  3560  0035DA  0E00               	movlw	0
  3561  0035DC  6E13               	movwf	___flmul@a^0,c
  3562  0035DE  0E00               	movlw	0
  3563  0035E0  6E14               	movwf	(___flmul@a+1)^0,c
  3564  0035E2  0E20               	movlw	32
  3565  0035E4  6E15               	movwf	(___flmul@a+2)^0,c
  3566  0035E6  0E41               	movlw	65
  3567  0035E8  6E16               	movwf	(___flmul@a+3)^0,c
  3568  0035EA  C1F0  F00F         	movff	efgtoa@u,___flmul@b
  3569  0035EE  C1F1  F010         	movff	efgtoa@u+1,___flmul@b+1
  3570  0035F2  C1F2  F011         	movff	efgtoa@u+2,___flmul@b+2
  3571  0035F6  C1F3  F012         	movff	efgtoa@u+3,___flmul@b+3
  3572  0035FA  ECD2  F02A         	call	___flmul	;wreg free
  3573  0035FE  C00F  F064         	movff	?___flmul,___flge@ff2
  3574  003602  C010  F065         	movff	?___flmul+1,___flge@ff2+1
  3575  003606  C011  F066         	movff	?___flmul+2,___flge@ff2+2
  3576  00360A  C012  F067         	movff	?___flmul+3,___flge@ff2+3
  3577  00360E  EC65  F037         	call	___flge	;wreg free
  3578  003612  0100               	movlb	0	; () banked
  3579  003614  B0D8               	btfsc	status,0,c
  3580  003616  EF0F  F01B         	goto	u5641
  3581  00361A  EF11  F01B         	goto	u5640
  3582  00361E                     u5641:
  3583  00361E  EFC8  F01A         	goto	l4796
  3584  003622                     u5640:
  3585  003622  EF31  F01B         	goto	l4806
  3586  003626                     l4802:
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3590  003626  C1F0  F028         	movff	efgtoa@u,___fldiv@b
  3591  00362A  C1F1  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3592  00362E  C1F2  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3593  003632  C1F3  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3594  003636  0E00               	movlw	0
  3595  003638  6E2C               	movwf	___fldiv@a^0,c
  3596  00363A  0E00               	movlw	0
  3597  00363C  6E2D               	movwf	(___fldiv@a+1)^0,c
  3598  00363E  0E20               	movlw	32
  3599  003640  6E2E               	movwf	(___fldiv@a+2)^0,c
  3600  003642  0E41               	movlw	65
  3601  003644  6E2F               	movwf	(___fldiv@a+3)^0,c
  3602  003646  ECE7  F02C         	call	___fldiv	;wreg free
  3603  00364A  C028  F1F0         	movff	?___fldiv,efgtoa@u
  3604  00364E  C029  F1F1         	movff	?___fldiv+1,efgtoa@u+1
  3605  003652  C02A  F1F2         	movff	?___fldiv+2,efgtoa@u+2
  3606  003656  C02B  F1F3         	movff	?___fldiv+3,efgtoa@u+3
  3607  00365A                     
  3608                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3609  00365A  0101               	movlb	1	; () banked
  3610  00365C  07EC               	decf	efgtoa@e& (0+255),f,b
  3611  00365E  A0D8               	btfss	status,0,c
  3612  003660  07ED               	decf	(efgtoa@e+1)& (0+255),f,b
  3613  003662                     l4806:
  3614                           
  3615                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3616  003662  C1E8  F060         	movff	efgtoa@g,___flge@ff1
  3617  003666  C1E9  F061         	movff	efgtoa@g+1,___flge@ff1+1
  3618  00366A  C1EA  F062         	movff	efgtoa@g+2,___flge@ff1+2
  3619  00366E  C1EB  F063         	movff	efgtoa@g+3,___flge@ff1+3
  3620  003672  C1F0  F064         	movff	efgtoa@u,___flge@ff2
  3621  003676  C1F1  F065         	movff	efgtoa@u+1,___flge@ff2+1
  3622  00367A  C1F2  F066         	movff	efgtoa@u+2,___flge@ff2+2
  3623  00367E  C1F3  F067         	movff	efgtoa@u+3,___flge@ff2+3
  3624  003682  EC65  F037         	call	___flge	;wreg free
  3625  003686  0100               	movlb	0	; () banked
  3626  003688  A0D8               	btfss	status,0,c
  3627  00368A  EF49  F01B         	goto	u5651
  3628  00368E  EF4B  F01B         	goto	u5650
  3629  003692                     u5651:
  3630  003692  EF13  F01B         	goto	l4802
  3631  003696                     u5650:
  3632  003696                     l4808:
  3633                           
  3634                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3635  003696  C0CD  F007         	movff	efgtoa@c,tolower@c
  3636  00369A  6A08               	clrf	(tolower@c+1)^0,c
  3637  00369C  ECE7  F03B         	call	_tolower	;wreg free
  3638  0036A0  5007               	movf	?_tolower^0,w,c
  3639  0036A2  0101               	movlb	1	; () banked
  3640  0036A4  6FDD               	movwf	efgtoa@mode& (0+255),b
  3641  0036A6                     
  3642                           ; BSR set to: 1
  3643                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3644  0036A6  C1DD  F1DC         	movff	efgtoa@mode,efgtoa@nmode
  3645  0036AA                     
  3646                           ; BSR set to: 1
  3647                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3648  0036AA  0E67               	movlw	103
  3649  0036AC  19DD               	xorwf	efgtoa@mode& (0+255),w,b
  3650  0036AE  A4D8               	btfss	status,2,c
  3651  0036B0  EF5C  F01B         	goto	u5661
  3652  0036B4  EF5E  F01B         	goto	u5660
  3653  0036B8                     u5661:
  3654  0036B8  EF86  F01B         	goto	l4822
  3655  0036BC                     u5660:
  3656  0036BC                     
  3657                           ; BSR set to: 1
  3658                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3659  0036BC  0100               	movlb	0	; () banked
  3660  0036BE  51FB               	movf	_prec& (0+255),w,b
  3661  0036C0  11FC               	iorwf	(_prec+1)& (0+255),w,b
  3662  0036C2  A4D8               	btfss	status,2,c
  3663  0036C4  EF66  F01B         	goto	u5671
  3664  0036C8  EF68  F01B         	goto	u5670
  3665  0036CC                     u5671:
  3666  0036CC  EF6C  F01B         	goto	l4818
  3667  0036D0                     u5670:
  3668  0036D0                     
  3669                           ; BSR set to: 0
  3670                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3671  0036D0  0E00               	movlw	0
  3672  0036D2  6FFC               	movwf	(_prec+1)& (0+255),b
  3673  0036D4  0E01               	movlw	1
  3674  0036D6  6FFB               	movwf	_prec& (0+255),b
  3675  0036D8                     l4818:
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3679  0036D8  BFFC               	btfsc	(_prec+1)& (0+255),7,b
  3680  0036DA  EF79  F01B         	goto	u5680
  3681  0036DE  51FC               	movf	(_prec+1)& (0+255),w,b
  3682  0036E0  E106               	bnz	u5681
  3683  0036E2  05FB               	decf	_prec& (0+255),w,b
  3684  0036E4  B0D8               	btfsc	status,0,c
  3685  0036E6  EF77  F01B         	goto	u5681
  3686  0036EA  EF79  F01B         	goto	u5680
  3687  0036EE                     u5681:
  3688  0036EE  EF80  F01B         	goto	l959
  3689  0036F2                     u5680:
  3690  0036F2                     l4820:
  3691                           
  3692                           ; BSR set to: 0
  3693  0036F2  0E00               	movlw	0
  3694  0036F4  0101               	movlb	1	; () banked
  3695  0036F6  6FD9               	movwf	(efgtoa@p+1)& (0+255),b
  3696  0036F8  0E06               	movlw	6
  3697  0036FA  6FD8               	movwf	efgtoa@p& (0+255),b
  3698  0036FC  EF90  F01B         	goto	l4828
  3699  003700                     l959:
  3700                           
  3701                           ; BSR set to: 0
  3702  003700  C0FB  F1D8         	movff	_prec,efgtoa@p
  3703  003704  C0FC  F1D9         	movff	_prec+1,efgtoa@p+1
  3704  003708  EF90  F01B         	goto	l4828
  3705  00370C                     l4822:
  3706                           
  3707                           ; BSR set to: 1
  3708                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3709  00370C  0100               	movlb	0	; () banked
  3710  00370E  BFFC               	btfsc	(_prec+1)& (0+255),7,b
  3711  003710  EF8C  F01B         	goto	u5691
  3712  003714  EF8E  F01B         	goto	u5690
  3713  003718                     u5691:
  3714  003718  EF79  F01B         	goto	l4820
  3715  00371C                     u5690:
  3716  00371C  EF80  F01B         	goto	l959
  3717  003720                     l4828:
  3718                           
  3719                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3720  003720  0E67               	movlw	103
  3721  003722  0101               	movlb	1	; () banked
  3722  003724  19DD               	xorwf	efgtoa@mode& (0+255),w,b
  3723  003726  A4D8               	btfss	status,2,c
  3724  003728  EF98  F01B         	goto	u5701
  3725  00372C  EF9A  F01B         	goto	u5700
  3726  003730                     u5701:
  3727  003730  EFD0  F01B         	goto	l4838
  3728  003734                     u5700:
  3729  003734                     
  3730                           ; BSR set to: 1
  3731                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3732  003734  AFED               	btfss	(efgtoa@e+1)& (0+255),7,b
  3733  003736  EFA8  F01B         	goto	u5710
  3734  00373A  0EFC               	movlw	252
  3735  00373C  5DEC               	subwf	efgtoa@e& (0+255),w,b
  3736  00373E  0EFF               	movlw	255
  3737  003740  59ED               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3738  003742  A0D8               	btfss	status,0,c
  3739  003744  EFA6  F01B         	goto	u5711
  3740  003748  EFA8  F01B         	goto	u5710
  3741  00374C                     u5711:
  3742  00374C  EFCD  F01B         	goto	l4836
  3743  003750                     u5710:
  3744  003750                     
  3745                           ; BSR set to: 1
  3746  003750  0EFF               	movlw	255
  3747  003752  0100               	movlb	0	; () banked
  3748  003754  6FCE               	movwf	??_efgtoa& (0+255),b
  3749  003756  0EFF               	movlw	255
  3750  003758  6FCF               	movwf	(??_efgtoa+1)& (0+255),b
  3751  00375A  C1D8  F0D0         	movff	efgtoa@p,??_efgtoa+2
  3752  00375E  C1D9  F0D1         	movff	efgtoa@p+1,??_efgtoa+3
  3753  003762  51CE               	movf	??_efgtoa& (0+255),w,b
  3754  003764  27D0               	addwf	(??_efgtoa+2)& (0+255),f,b
  3755  003766  51CF               	movf	(??_efgtoa+1)& (0+255),w,b
  3756  003768  23D1               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3757  00376A  0101               	movlb	1	; () banked
  3758  00376C  51EC               	movf	efgtoa@e& (0+255),w,b
  3759  00376E  0100               	movlb	0	; () banked
  3760  003770  5DD0               	subwf	(??_efgtoa+2)& (0+255),w,b
  3761  003772  51D1               	movf	(??_efgtoa+3)& (0+255),w,b
  3762  003774  0A80               	xorlw	128
  3763  003776  6FD2               	movwf	(??_efgtoa+4)& (0+255),b
  3764  003778  0101               	movlb	1	; () banked
  3765  00377A  51ED               	movf	(efgtoa@e+1)& (0+255),w,b
  3766  00377C  0A80               	xorlw	128
  3767  00377E  0100               	movlb	0	; () banked
  3768  003780  59D2               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3769  003782  A0D8               	btfss	status,0,c
  3770  003784  EFC6  F01B         	goto	u5721
  3771  003788  EFC8  F01B         	goto	u5720
  3772  00378C                     u5721:
  3773  00378C  EFCD  F01B         	goto	l4836
  3774  003790                     u5720:
  3775  003790                     
  3776                           ; BSR set to: 0
  3777                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3778  003790  0E66               	movlw	102
  3779  003792  0101               	movlb	1	; () banked
  3780  003794  6FDC               	movwf	efgtoa@nmode& (0+255),b
  3781                           
  3782                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3783  003796  EFD0  F01B         	goto	l4838
  3784  00379A                     l4836:
  3785                           
  3786                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3787  00379A  0E65               	movlw	101
  3788  00379C  0101               	movlb	1	; () banked
  3789  00379E  6FDC               	movwf	efgtoa@nmode& (0+255),b
  3790  0037A0                     l4838:
  3791                           
  3792                           ; BSR set to: 1
  3793                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3794  0037A0  C1D8  F1CE         	movff	efgtoa@p,efgtoa@m
  3795  0037A4  C1D9  F1CF         	movff	efgtoa@p+1,efgtoa@m+1
  3796  0037A8                     
  3797                           ; BSR set to: 1
  3798                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3799  0037A8  0E67               	movlw	103
  3800  0037AA  19DD               	xorwf	efgtoa@mode& (0+255),w,b
  3801  0037AC  A4D8               	btfss	status,2,c
  3802  0037AE  EFDB  F01B         	goto	u5731
  3803  0037B2  EFDD  F01B         	goto	u5730
  3804  0037B6                     u5731:
  3805  0037B6  EFED  F01B         	goto	l4846
  3806  0037BA                     u5730:
  3807  0037BA                     
  3808                           ; BSR set to: 1
  3809  0037BA  0E66               	movlw	102
  3810  0037BC  19DC               	xorwf	efgtoa@nmode& (0+255),w,b
  3811  0037BE  A4D8               	btfss	status,2,c
  3812  0037C0  EFE4  F01B         	goto	u5741
  3813  0037C4  EFE6  F01B         	goto	u5740
  3814  0037C8                     u5741:
  3815  0037C8  EFEF  F01B         	goto	l4848
  3816  0037CC                     u5740:
  3817  0037CC                     
  3818                           ; BSR set to: 1
  3819  0037CC  BFED               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3820  0037CE  EFED  F01B         	goto	u5750
  3821  0037D2  EFEB  F01B         	goto	u5751
  3822  0037D6                     u5751:
  3823  0037D6  EFEF  F01B         	goto	l4848
  3824  0037DA                     u5750:
  3825  0037DA                     l4846:
  3826                           
  3827                           ; BSR set to: 1
  3828                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3829  0037DA  4BCE               	infsnz	efgtoa@m& (0+255),f,b
  3830  0037DC  2BCF               	incf	(efgtoa@m+1)& (0+255),f,b
  3831  0037DE                     l4848:
  3832                           
  3833                           ; BSR set to: 1
  3834                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3835  0037DE  0E66               	movlw	102
  3836  0037E0  19DC               	xorwf	efgtoa@nmode& (0+255),w,b
  3837  0037E2  A4D8               	btfss	status,2,c
  3838  0037E4  EFF6  F01B         	goto	u5761
  3839  0037E8  EFF8  F01B         	goto	u5760
  3840  0037EC                     u5761:
  3841  0037EC  EF18  F01C         	goto	l4858
  3842  0037F0                     u5760:
  3843  0037F0                     
  3844                           ; BSR set to: 1
  3845                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3846  0037F0  BFED               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3847  0037F2  EFFF  F01B         	goto	u5770
  3848  0037F6  EFFD  F01B         	goto	u5771
  3849  0037FA                     u5771:
  3850  0037FA  EF0B  F01C         	goto	l4854
  3851  0037FE                     u5770:
  3852  0037FE                     
  3853                           ; BSR set to: 1
  3854                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3855  0037FE  0E00               	movlw	0
  3856  003800  6FF0               	movwf	efgtoa@u& (0+255),b
  3857  003802  0E00               	movlw	0
  3858  003804  6FF1               	movwf	(efgtoa@u+1)& (0+255),b
  3859  003806  0E80               	movlw	128
  3860  003808  6FF2               	movwf	(efgtoa@u+2)& (0+255),b
  3861  00380A  0E3F               	movlw	63
  3862  00380C  6FF3               	movwf	(efgtoa@u+3)& (0+255),b
  3863                           
  3864                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3865  00380E  0E00               	movlw	0
  3866  003810  6FED               	movwf	(efgtoa@e+1)& (0+255),b
  3867  003812  0E00               	movlw	0
  3868  003814  6FEC               	movwf	efgtoa@e& (0+255),b
  3869  003816                     l4854:
  3870                           
  3871                           ; BSR set to: 1
  3872                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3873  003816  0E67               	movlw	103
  3874  003818  19DD               	xorwf	efgtoa@mode& (0+255),w,b
  3875  00381A  B4D8               	btfsc	status,2,c
  3876  00381C  EF12  F01C         	goto	u5781
  3877  003820  EF14  F01C         	goto	u5780
  3878  003824                     u5781:
  3879  003824  EF18  F01C         	goto	l4858
  3880  003828                     u5780:
  3881  003828                     
  3882                           ; BSR set to: 1
  3883                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3884  003828  51EC               	movf	efgtoa@e& (0+255),w,b
  3885  00382A  27CE               	addwf	efgtoa@m& (0+255),f,b
  3886  00382C  51ED               	movf	(efgtoa@e+1)& (0+255),w,b
  3887  00382E  23CF               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3888  003830                     l4858:
  3889                           
  3890                           ; BSR set to: 1
  3891                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3892  003830  0E00               	movlw	0
  3893  003832  6FE7               	movwf	(efgtoa@i+1)& (0+255),b
  3894  003834  0E00               	movlw	0
  3895  003836  6FE6               	movwf	efgtoa@i& (0+255),b
  3896  003838                     
  3897                           ; BSR set to: 1
  3898                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3899  003838  C1E8  F1DE         	movff	efgtoa@g,efgtoa@h
  3900  00383C  C1E9  F1DF         	movff	efgtoa@g+1,efgtoa@h+1
  3901  003840  C1EA  F1E0         	movff	efgtoa@g+2,efgtoa@h+2
  3902  003844  C1EB  F1E1         	movff	efgtoa@g+3,efgtoa@h+3
  3903  003848                     
  3904                           ; BSR set to: 1
  3905                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3906  003848  C1F0  F1D0         	movff	efgtoa@u,efgtoa@ou
  3907  00384C  C1F1  F1D1         	movff	efgtoa@u+1,efgtoa@ou+1
  3908  003850  C1F2  F1D2         	movff	efgtoa@u+2,efgtoa@ou+2
  3909  003854  C1F3  F1D3         	movff	efgtoa@u+3,efgtoa@ou+3
  3910                           
  3911                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3912  003858  EFA9  F01C         	goto	l4872
  3913  00385C                     l4864:
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3917  00385C  C1DE  F028         	movff	efgtoa@h,___fldiv@b
  3918  003860  C1DF  F029         	movff	efgtoa@h+1,___fldiv@b+1
  3919  003864  C1E0  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  3920  003868  C1E1  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  3921  00386C  C1F0  F02C         	movff	efgtoa@u,___fldiv@a
  3922  003870  C1F1  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  3923  003874  C1F2  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  3924  003878  C1F3  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  3925  00387C  ECE7  F02C         	call	___fldiv	;wreg free
  3926  003880  C028  F041         	movff	?___fldiv,floorf@x
  3927  003884  C029  F042         	movff	?___fldiv+1,floorf@x+1
  3928  003888  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  3929  00388C  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  3930  003890  EC40  F031         	call	_floorf	;wreg free
  3931  003894  C041  F1E2         	movff	?_floorf,efgtoa@l
  3932  003898  C042  F1E3         	movff	?_floorf+1,efgtoa@l+1
  3933  00389C  C043  F1E4         	movff	?_floorf+2,efgtoa@l+2
  3934  0038A0  C044  F1E5         	movff	?_floorf+3,efgtoa@l+3
  3935                           
  3936                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3937  0038A4  C1E2  F0BD         	movff	efgtoa@l,___fltol@f1
  3938  0038A8  C1E3  F0BE         	movff	efgtoa@l+1,___fltol@f1+1
  3939  0038AC  C1E4  F0BF         	movff	efgtoa@l+2,___fltol@f1+2
  3940  0038B0  C1E5  F0C0         	movff	efgtoa@l+3,___fltol@f1+3
  3941  0038B4  ECE1  F036         	call	___fltol	;wreg free
  3942  0038B8  C0BD  F1D4         	movff	?___fltol,efgtoa@d
  3943  0038BC  C0BE  F1D5         	movff	?___fltol+1,efgtoa@d+1
  3944  0038C0                     
  3945                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3946  0038C0  C1DE  F057         	movff	efgtoa@h,___flsub@b
  3947  0038C4  C1DF  F058         	movff	efgtoa@h+1,___flsub@b+1
  3948  0038C8  C1E0  F059         	movff	efgtoa@h+2,___flsub@b+2
  3949  0038CC  C1E1  F05A         	movff	efgtoa@h+3,___flsub@b+3
  3950  0038D0  C1F0  F013         	movff	efgtoa@u,___flmul@a
  3951  0038D4  C1F1  F014         	movff	efgtoa@u+1,___flmul@a+1
  3952  0038D8  C1F2  F015         	movff	efgtoa@u+2,___flmul@a+2
  3953  0038DC  C1F3  F016         	movff	efgtoa@u+3,___flmul@a+3
  3954  0038E0  C1E2  F00F         	movff	efgtoa@l,___flmul@b
  3955  0038E4  C1E3  F010         	movff	efgtoa@l+1,___flmul@b+1
  3956  0038E8  C1E4  F011         	movff	efgtoa@l+2,___flmul@b+2
  3957  0038EC  C1E5  F012         	movff	efgtoa@l+3,___flmul@b+3
  3958  0038F0  ECD2  F02A         	call	___flmul	;wreg free
  3959  0038F4  C00F  F05B         	movff	?___flmul,___flsub@a
  3960  0038F8  C010  F05C         	movff	?___flmul+1,___flsub@a+1
  3961  0038FC  C011  F05D         	movff	?___flmul+2,___flsub@a+2
  3962  003900  C012  F05E         	movff	?___flmul+3,___flsub@a+3
  3963  003904  EC14  F03D         	call	___flsub	;wreg free
  3964  003908  C057  F1DE         	movff	?___flsub,efgtoa@h
  3965  00390C  C058  F1DF         	movff	?___flsub+1,efgtoa@h+1
  3966  003910  C059  F1E0         	movff	?___flsub+2,efgtoa@h+2
  3967  003914  C05A  F1E1         	movff	?___flsub+3,efgtoa@h+3
  3968  003918                     
  3969                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3970  003918  C1F0  F028         	movff	efgtoa@u,___fldiv@b
  3971  00391C  C1F1  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3972  003920  C1F2  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3973  003924  C1F3  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3974  003928  0E00               	movlw	0
  3975  00392A  6E2C               	movwf	___fldiv@a^0,c
  3976  00392C  0E00               	movlw	0
  3977  00392E  6E2D               	movwf	(___fldiv@a+1)^0,c
  3978  003930  0E20               	movlw	32
  3979  003932  6E2E               	movwf	(___fldiv@a+2)^0,c
  3980  003934  0E41               	movlw	65
  3981  003936  6E2F               	movwf	(___fldiv@a+3)^0,c
  3982  003938  ECE7  F02C         	call	___fldiv	;wreg free
  3983  00393C  C028  F1F0         	movff	?___fldiv,efgtoa@u
  3984  003940  C029  F1F1         	movff	?___fldiv+1,efgtoa@u+1
  3985  003944  C02A  F1F2         	movff	?___fldiv+2,efgtoa@u+2
  3986  003948  C02B  F1F3         	movff	?___fldiv+3,efgtoa@u+3
  3987  00394C                     
  3988                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3989  00394C  0101               	movlb	1	; () banked
  3990  00394E  4BE6               	infsnz	efgtoa@i& (0+255),f,b
  3991  003950  2BE7               	incf	(efgtoa@i+1)& (0+255),f,b
  3992  003952                     l4872:
  3993                           
  3994                           ; BSR set to: 1
  3995                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3996  003952  51CE               	movf	efgtoa@m& (0+255),w,b
  3997  003954  5DE6               	subwf	efgtoa@i& (0+255),w,b
  3998  003956  51E7               	movf	(efgtoa@i+1)& (0+255),w,b
  3999  003958  0A80               	xorlw	128
  4000  00395A  0100               	movlb	0	; () banked
  4001  00395C  6FCE               	movwf	??_efgtoa& (0+255),b
  4002  00395E  0101               	movlb	1	; () banked
  4003  003960  51CF               	movf	(efgtoa@m+1)& (0+255),w,b
  4004  003962  0A80               	xorlw	128
  4005  003964  0100               	movlb	0	; () banked
  4006  003966  59CE               	subwfb	??_efgtoa& (0+255),w,b
  4007  003968  A0D8               	btfss	status,0,c
  4008  00396A  EFB9  F01C         	goto	u5791
  4009  00396E  EFBB  F01C         	goto	u5790
  4010  003972                     u5791:
  4011  003972  EF2E  F01C         	goto	l4864
  4012  003976                     u5790:
  4013  003976                     
  4014                           ; BSR set to: 0
  4015                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  4016  003976  C1F0  F00F         	movff	efgtoa@u,___flmul@b
  4017  00397A  C1F1  F010         	movff	efgtoa@u+1,___flmul@b+1
  4018  00397E  C1F2  F011         	movff	efgtoa@u+2,___flmul@b+2
  4019  003982  C1F3  F012         	movff	efgtoa@u+3,___flmul@b+3
  4020  003986  0E00               	movlw	0
  4021  003988  6E13               	movwf	___flmul@a^0,c
  4022  00398A  0E00               	movlw	0
  4023  00398C  6E14               	movwf	(___flmul@a+1)^0,c
  4024  00398E  0EA0               	movlw	160
  4025  003990  6E15               	movwf	(___flmul@a+2)^0,c
  4026  003992  0E40               	movlw	64
  4027  003994  6E16               	movwf	(___flmul@a+3)^0,c
  4028  003996  ECD2  F02A         	call	___flmul	;wreg free
  4029  00399A  C00F  F1E2         	movff	?___flmul,efgtoa@l
  4030  00399E  C010  F1E3         	movff	?___flmul+1,efgtoa@l+1
  4031  0039A2  C011  F1E4         	movff	?___flmul+2,efgtoa@l+2
  4032  0039A6  C012  F1E5         	movff	?___flmul+3,efgtoa@l+3
  4033  0039AA                     
  4034                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  4035  0039AA  C1DE  F060         	movff	efgtoa@h,___flge@ff1
  4036  0039AE  C1DF  F061         	movff	efgtoa@h+1,___flge@ff1+1
  4037  0039B2  C1E0  F062         	movff	efgtoa@h+2,___flge@ff1+2
  4038  0039B6  C1E1  F063         	movff	efgtoa@h+3,___flge@ff1+3
  4039  0039BA  C1E2  F064         	movff	efgtoa@l,___flge@ff2
  4040  0039BE  C1E3  F065         	movff	efgtoa@l+1,___flge@ff2+1
  4041  0039C2  C1E4  F066         	movff	efgtoa@l+2,___flge@ff2+2
  4042  0039C6  C1E5  F067         	movff	efgtoa@l+3,___flge@ff2+3
  4043  0039CA  EC65  F037         	call	___flge	;wreg free
  4044  0039CE  0100               	movlb	0	; () banked
  4045  0039D0  B0D8               	btfsc	status,0,c
  4046  0039D2  EFED  F01C         	goto	u5801
  4047  0039D6  EFEF  F01C         	goto	u5800
  4048  0039DA                     u5801:
  4049  0039DA  EFFA  F01C         	goto	l4880
  4050  0039DE                     u5800:
  4051  0039DE                     
  4052                           ; BSR set to: 0
  4053                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  4054  0039DE  0E00               	movlw	0
  4055  0039E0  0101               	movlb	1	; () banked
  4056  0039E2  6FE2               	movwf	efgtoa@l& (0+255),b
  4057  0039E4  0E00               	movlw	0
  4058  0039E6  6FE3               	movwf	(efgtoa@l+1)& (0+255),b
  4059  0039E8  0E00               	movlw	0
  4060  0039EA  6FE4               	movwf	(efgtoa@l+2)& (0+255),b
  4061  0039EC  0E00               	movlw	0
  4062  0039EE  6FE5               	movwf	(efgtoa@l+3)& (0+255),b
  4063                           
  4064                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 443:     } else {
  4065  0039F0  EF23  F01D         	goto	l4886
  4066  0039F4                     l4880:
  4067                           
  4068                           ; BSR set to: 0
  4069                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  4070  0039F4  C1DE  F001         	movff	efgtoa@h,___fleq@ff1
  4071  0039F8  C1DF  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4072  0039FC  C1E0  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4073  003A00  C1E1  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4074  003A04  C1E2  F005         	movff	efgtoa@l,___fleq@ff2
  4075  003A08  C1E3  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4076  003A0C  C1E4  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4077  003A10  C1E5  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4078  003A14  ECC2  F03A         	call	___fleq	;wreg free
  4079  003A18  A0D8               	btfss	status,0,c
  4080  003A1A  EF11  F01D         	goto	u5811
  4081  003A1E  EF13  F01D         	goto	u5810
  4082  003A22                     u5811:
  4083  003A22  EF23  F01D         	goto	l4886
  4084  003A26                     u5810:
  4085  003A26  0101               	movlb	1	; () banked
  4086  003A28  B1D4               	btfsc	efgtoa@d& (0+255),0,b
  4087  003A2A  EF19  F01D         	goto	u5821
  4088  003A2E  EF1B  F01D         	goto	u5820
  4089  003A32                     u5821:
  4090  003A32  EF23  F01D         	goto	l4886
  4091  003A36                     u5820:
  4092  003A36                     
  4093                           ; BSR set to: 1
  4094                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  4095  003A36  0E00               	movlw	0
  4096  003A38  6FE2               	movwf	efgtoa@l& (0+255),b
  4097  003A3A  0E00               	movlw	0
  4098  003A3C  6FE3               	movwf	(efgtoa@l+1)& (0+255),b
  4099  003A3E  0E00               	movlw	0
  4100  003A40  6FE4               	movwf	(efgtoa@l+2)& (0+255),b
  4101  003A42  0E00               	movlw	0
  4102  003A44  6FE5               	movwf	(efgtoa@l+3)& (0+255),b
  4103  003A46                     l4886:
  4104                           
  4105                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  4106  003A46  C1E8  F047         	movff	efgtoa@g,___fladd@b
  4107  003A4A  C1E9  F048         	movff	efgtoa@g+1,___fladd@b+1
  4108  003A4E  C1EA  F049         	movff	efgtoa@g+2,___fladd@b+2
  4109  003A52  C1EB  F04A         	movff	efgtoa@g+3,___fladd@b+3
  4110  003A56  C1E2  F04B         	movff	efgtoa@l,___fladd@a
  4111  003A5A  C1E3  F04C         	movff	efgtoa@l+1,___fladd@a+1
  4112  003A5E  C1E4  F04D         	movff	efgtoa@l+2,___fladd@a+2
  4113  003A62  C1E5  F04E         	movff	efgtoa@l+3,___fladd@a+3
  4114  003A66  EC13  F026         	call	___fladd	;wreg free
  4115  003A6A  C047  F1DE         	movff	?___fladd,efgtoa@h
  4116  003A6E  C048  F1DF         	movff	?___fladd+1,efgtoa@h+1
  4117  003A72  C049  F1E0         	movff	?___fladd+2,efgtoa@h+2
  4118  003A76  C04A  F1E1         	movff	?___fladd+3,efgtoa@h+3
  4119  003A7A                     
  4120                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  4121  003A7A  C1DE  F060         	movff	efgtoa@h,___flge@ff1
  4122  003A7E  C1DF  F061         	movff	efgtoa@h+1,___flge@ff1+1
  4123  003A82  C1E0  F062         	movff	efgtoa@h+2,___flge@ff1+2
  4124  003A86  C1E1  F063         	movff	efgtoa@h+3,___flge@ff1+3
  4125  003A8A  0E00               	movlw	0
  4126  003A8C  6E13               	movwf	___flmul@a^0,c
  4127  003A8E  0E00               	movlw	0
  4128  003A90  6E14               	movwf	(___flmul@a+1)^0,c
  4129  003A92  0E20               	movlw	32
  4130  003A94  6E15               	movwf	(___flmul@a+2)^0,c
  4131  003A96  0E41               	movlw	65
  4132  003A98  6E16               	movwf	(___flmul@a+3)^0,c
  4133  003A9A  C1D0  F00F         	movff	efgtoa@ou,___flmul@b
  4134  003A9E  C1D1  F010         	movff	efgtoa@ou+1,___flmul@b+1
  4135  003AA2  C1D2  F011         	movff	efgtoa@ou+2,___flmul@b+2
  4136  003AA6  C1D3  F012         	movff	efgtoa@ou+3,___flmul@b+3
  4137  003AAA  ECD2  F02A         	call	___flmul	;wreg free
  4138  003AAE  C00F  F064         	movff	?___flmul,___flge@ff2
  4139  003AB2  C010  F065         	movff	?___flmul+1,___flge@ff2+1
  4140  003AB6  C011  F066         	movff	?___flmul+2,___flge@ff2+2
  4141  003ABA  C012  F067         	movff	?___flmul+3,___flge@ff2+3
  4142  003ABE  EC65  F037         	call	___flge	;wreg free
  4143  003AC2  0100               	movlb	0	; () banked
  4144  003AC4  A0D8               	btfss	status,0,c
  4145  003AC6  EF67  F01D         	goto	u5831
  4146  003ACA  EF69  F01D         	goto	u5830
  4147  003ACE                     u5831:
  4148  003ACE  EF92  F01D         	goto	l4898
  4149  003AD2                     u5830:
  4150  003AD2                     
  4151                           ; BSR set to: 0
  4152                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 454:   e++;
  4153  003AD2  0101               	movlb	1	; () banked
  4154  003AD4  4BEC               	infsnz	efgtoa@e& (0+255),f,b
  4155  003AD6  2BED               	incf	(efgtoa@e+1)& (0+255),f,b
  4156  003AD8                     
  4157                           ; BSR set to: 1
  4158                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  4159  003AD8  C1D0  F00F         	movff	efgtoa@ou,___flmul@b
  4160  003ADC  C1D1  F010         	movff	efgtoa@ou+1,___flmul@b+1
  4161  003AE0  C1D2  F011         	movff	efgtoa@ou+2,___flmul@b+2
  4162  003AE4  C1D3  F012         	movff	efgtoa@ou+3,___flmul@b+3
  4163  003AE8  0E00               	movlw	0
  4164  003AEA  6E13               	movwf	___flmul@a^0,c
  4165  003AEC  0E00               	movlw	0
  4166  003AEE  6E14               	movwf	(___flmul@a+1)^0,c
  4167  003AF0  0E20               	movlw	32
  4168  003AF2  6E15               	movwf	(___flmul@a+2)^0,c
  4169  003AF4  0E41               	movlw	65
  4170  003AF6  6E16               	movwf	(___flmul@a+3)^0,c
  4171  003AF8  ECD2  F02A         	call	___flmul	;wreg free
  4172  003AFC  C00F  F1D0         	movff	?___flmul,efgtoa@ou
  4173  003B00  C010  F1D1         	movff	?___flmul+1,efgtoa@ou+1
  4174  003B04  C011  F1D2         	movff	?___flmul+2,efgtoa@ou+2
  4175  003B08  C012  F1D3         	movff	?___flmul+3,efgtoa@ou+3
  4176  003B0C                     
  4177                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  4178  003B0C  0E66               	movlw	102
  4179  003B0E  0101               	movlb	1	; () banked
  4180  003B10  19DC               	xorwf	efgtoa@nmode& (0+255),w,b
  4181  003B12  A4D8               	btfss	status,2,c
  4182  003B14  EF8E  F01D         	goto	u5841
  4183  003B18  EF90  F01D         	goto	u5840
  4184  003B1C                     u5841:
  4185  003B1C  EF92  F01D         	goto	l4898
  4186  003B20                     u5840:
  4187  003B20                     
  4188                           ; BSR set to: 1
  4189                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 458:    m++;
  4190  003B20  4BCE               	infsnz	efgtoa@m& (0+255),f,b
  4191  003B22  2BCF               	incf	(efgtoa@m+1)& (0+255),f,b
  4192  003B24                     l4898:
  4193                           
  4194                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  4195  003B24  C1D0  F1F0         	movff	efgtoa@ou,efgtoa@u
  4196  003B28  C1D1  F1F1         	movff	efgtoa@ou+1,efgtoa@u+1
  4197  003B2C  C1D2  F1F2         	movff	efgtoa@ou+2,efgtoa@u+2
  4198  003B30  C1D3  F1F3         	movff	efgtoa@ou+3,efgtoa@u+3
  4199  003B34                     
  4200                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  4201  003B34  0E65               	movlw	101
  4202  003B36  0101               	movlb	1	; () banked
  4203  003B38  19DC               	xorwf	efgtoa@nmode& (0+255),w,b
  4204  003B3A  B4D8               	btfsc	status,2,c
  4205  003B3C  EFA2  F01D         	goto	u5851
  4206  003B40  EFA4  F01D         	goto	u5850
  4207  003B44                     u5851:
  4208  003B44  EFAA  F01D         	goto	l4904
  4209  003B48                     u5850:
  4210  003B48                     
  4211                           ; BSR set to: 1
  4212  003B48  C1EC  F1CC         	movff	efgtoa@e,efgtoa@ne
  4213  003B4C  C1ED  F1CD         	movff	efgtoa@e+1,efgtoa@ne+1
  4214  003B50  EFAE  F01D         	goto	l987
  4215  003B54                     l4904:
  4216                           
  4217                           ; BSR set to: 1
  4218  003B54  0E00               	movlw	0
  4219  003B56  6FCD               	movwf	(efgtoa@ne+1)& (0+255),b
  4220  003B58  0E00               	movlw	0
  4221  003B5A  6FCC               	movwf	efgtoa@ne& (0+255),b
  4222  003B5C                     l987:
  4223                           
  4224                           ; BSR set to: 1
  4225                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  4226  003B5C  0E00               	movlw	0
  4227  003B5E  6FCB               	movwf	(efgtoa@pp+1)& (0+255),b
  4228  003B60  0E00               	movlw	0
  4229  003B62  6FCA               	movwf	efgtoa@pp& (0+255),b
  4230                           
  4231                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  4232  003B64  0E00               	movlw	0
  4233  003B66  6FC9               	movwf	(efgtoa@t+1)& (0+255),b
  4234  003B68  0E00               	movlw	0
  4235  003B6A  6FC8               	movwf	efgtoa@t& (0+255),b
  4236                           
  4237                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  4238  003B6C  0E00               	movlw	0
  4239  003B6E  6FE7               	movwf	(efgtoa@i+1)& (0+255),b
  4240  003B70  0E00               	movlw	0
  4241  003B72  6FE6               	movwf	efgtoa@i& (0+255),b
  4242                           
  4243                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4244  003B74  EFAB  F01E         	goto	l4954
  4245  003B78                     l4906:
  4246                           
  4247                           ; BSR set to: 1
  4248                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  4249  003B78  C1DE  F028         	movff	efgtoa@h,___fldiv@b
  4250  003B7C  C1DF  F029         	movff	efgtoa@h+1,___fldiv@b+1
  4251  003B80  C1E0  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  4252  003B84  C1E1  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  4253  003B88  C1F0  F02C         	movff	efgtoa@u,___fldiv@a
  4254  003B8C  C1F1  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  4255  003B90  C1F2  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  4256  003B94  C1F3  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  4257  003B98  ECE7  F02C         	call	___fldiv	;wreg free
  4258  003B9C  C028  F041         	movff	?___fldiv,floorf@x
  4259  003BA0  C029  F042         	movff	?___fldiv+1,floorf@x+1
  4260  003BA4  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  4261  003BA8  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  4262  003BAC  EC40  F031         	call	_floorf	;wreg free
  4263  003BB0  C041  F1E2         	movff	?_floorf,efgtoa@l
  4264  003BB4  C042  F1E3         	movff	?_floorf+1,efgtoa@l+1
  4265  003BB8  C043  F1E4         	movff	?_floorf+2,efgtoa@l+2
  4266  003BBC  C044  F1E5         	movff	?_floorf+3,efgtoa@l+3
  4267                           
  4268                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  4269  003BC0  C1E2  F0BD         	movff	efgtoa@l,___fltol@f1
  4270  003BC4  C1E3  F0BE         	movff	efgtoa@l+1,___fltol@f1+1
  4271  003BC8  C1E4  F0BF         	movff	efgtoa@l+2,___fltol@f1+2
  4272  003BCC  C1E5  F0C0         	movff	efgtoa@l+3,___fltol@f1+3
  4273  003BD0  ECE1  F036         	call	___fltol	;wreg free
  4274  003BD4  C0BD  F1D4         	movff	?___fltol,efgtoa@d
  4275  003BD8  C0BE  F1D5         	movff	?___fltol+1,efgtoa@d+1
  4276  003BDC                     
  4277                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4278  003BDC  0100               	movlb	0	; () banked
  4279  003BDE  B9FD               	btfsc	_flags& (0+255),4,b
  4280  003BE0  EFF4  F01D         	goto	u5861
  4281  003BE4  EFF6  F01D         	goto	u5860
  4282  003BE8                     u5861:
  4283  003BE8  EF14  F01E         	goto	l4918
  4284  003BEC                     u5860:
  4285  003BEC                     
  4286                           ; BSR set to: 0
  4287  003BEC  0101               	movlb	1	; () banked
  4288  003BEE  51D4               	movf	efgtoa@d& (0+255),w,b
  4289  003BF0  11D5               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4290  003BF2  A4D8               	btfss	status,2,c
  4291  003BF4  EFFE  F01D         	goto	u5871
  4292  003BF8  EF00  F01E         	goto	u5870
  4293  003BFC                     u5871:
  4294  003BFC  EF14  F01E         	goto	l4918
  4295  003C00                     u5870:
  4296  003C00                     
  4297                           ; BSR set to: 1
  4298  003C00  0E67               	movlw	103
  4299  003C02  19DD               	xorwf	efgtoa@mode& (0+255),w,b
  4300  003C04  A4D8               	btfss	status,2,c
  4301  003C06  EF07  F01E         	goto	u5881
  4302  003C0A  EF09  F01E         	goto	u5880
  4303  003C0E                     u5881:
  4304  003C0E  EF14  F01E         	goto	l4918
  4305  003C12                     u5880:
  4306  003C12                     
  4307                           ; BSR set to: 1
  4308  003C12  BFCD               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4309  003C14  EF10  F01E         	goto	u5890
  4310  003C18  EF0E  F01E         	goto	u5891
  4311  003C1C                     u5891:
  4312  003C1C  EF14  F01E         	goto	l4918
  4313  003C20                     u5890:
  4314  003C20                     
  4315                           ; BSR set to: 1
  4316                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  4317  003C20  4BC8               	infsnz	efgtoa@t& (0+255),f,b
  4318  003C22  2BC9               	incf	(efgtoa@t+1)& (0+255),f,b
  4319                           
  4320                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  4321  003C24  EF5F  F01E         	goto	l4946
  4322  003C28                     l4918:
  4323                           
  4324                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  4325  003C28  0101               	movlb	1	; () banked
  4326  003C2A  51CA               	movf	efgtoa@pp& (0+255),w,b
  4327  003C2C  11CB               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4328  003C2E  A4D8               	btfss	status,2,c
  4329  003C30  EF1C  F01E         	goto	u5901
  4330  003C34  EF1E  F01E         	goto	u5900
  4331  003C38                     u5901:
  4332  003C38  EF48  F01E         	goto	l4938
  4333  003C3C                     u5900:
  4334  003C3C                     
  4335                           ; BSR set to: 1
  4336  003C3C  BFCD               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4337  003C3E  EF25  F01E         	goto	u5910
  4338  003C42  EF23  F01E         	goto	u5911
  4339  003C46                     u5911:
  4340  003C46  EF48  F01E         	goto	l4938
  4341  003C4A                     u5910:
  4342  003C4A                     
  4343                           ; BSR set to: 1
  4344                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  4345  003C4A  0E12               	movlw	low _dbuf
  4346  003C4C  25EE               	addwf	efgtoa@n& (0+255),w,b
  4347  003C4E  6ED9               	movwf	fsr2l,c
  4348  003C50  0E02               	movlw	high _dbuf
  4349  003C52  21EF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4350  003C54  6EDA               	movwf	fsr2h,c
  4351  003C56  0E2E               	movlw	46
  4352  003C58  6EDF               	movwf	indf2,c
  4353  003C5A                     
  4354                           ; BSR set to: 1
  4355  003C5A  4BEE               	infsnz	efgtoa@n& (0+255),f,b
  4356  003C5C  2BEF               	incf	(efgtoa@n+1)& (0+255),f,b
  4357  003C5E                     
  4358                           ; BSR set to: 1
  4359                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  4360  003C5E  07DA               	decf	efgtoa@w& (0+255),f,b
  4361  003C60  A0D8               	btfss	status,0,c
  4362  003C62  07DB               	decf	(efgtoa@w+1)& (0+255),f,b
  4363  003C64                     
  4364                           ; BSR set to: 1
  4365                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  4366  003C64  0E00               	movlw	0
  4367  003C66  6FCB               	movwf	(efgtoa@pp+1)& (0+255),b
  4368  003C68  0E01               	movlw	1
  4369  003C6A  6FCA               	movwf	efgtoa@pp& (0+255),b
  4370  003C6C  EF48  F01E         	goto	l4938
  4371  003C70                     l4930:
  4372                           
  4373                           ; BSR set to: 1
  4374                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  4375  003C70  0E12               	movlw	low _dbuf
  4376  003C72  25EE               	addwf	efgtoa@n& (0+255),w,b
  4377  003C74  6ED9               	movwf	fsr2l,c
  4378  003C76  0E02               	movlw	high _dbuf
  4379  003C78  21EF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4380  003C7A  6EDA               	movwf	fsr2h,c
  4381  003C7C  0E30               	movlw	48
  4382  003C7E  6EDF               	movwf	indf2,c
  4383  003C80                     
  4384                           ; BSR set to: 1
  4385  003C80  4BEE               	infsnz	efgtoa@n& (0+255),f,b
  4386  003C82  2BEF               	incf	(efgtoa@n+1)& (0+255),f,b
  4387  003C84                     
  4388                           ; BSR set to: 1
  4389                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  4390  003C84  07DA               	decf	efgtoa@w& (0+255),f,b
  4391  003C86  A0D8               	btfss	status,0,c
  4392  003C88  07DB               	decf	(efgtoa@w+1)& (0+255),f,b
  4393  003C8A                     
  4394                           ; BSR set to: 1
  4395                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  4396  003C8A  07C8               	decf	efgtoa@t& (0+255),f,b
  4397  003C8C  A0D8               	btfss	status,0,c
  4398  003C8E  07C9               	decf	(efgtoa@t+1)& (0+255),f,b
  4399  003C90                     l4938:
  4400                           
  4401                           ; BSR set to: 1
  4402                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  4403  003C90  51C8               	movf	efgtoa@t& (0+255),w,b
  4404  003C92  11C9               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4405  003C94  A4D8               	btfss	status,2,c
  4406  003C96  EF4F  F01E         	goto	u5921
  4407  003C9A  EF51  F01E         	goto	u5920
  4408  003C9E                     u5921:
  4409  003C9E  EF38  F01E         	goto	l4930
  4410  003CA2                     u5920:
  4411  003CA2                     
  4412                           ; BSR set to: 1
  4413                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4414  003CA2  0E12               	movlw	low _dbuf
  4415  003CA4  25EE               	addwf	efgtoa@n& (0+255),w,b
  4416  003CA6  6ED9               	movwf	fsr2l,c
  4417  003CA8  0E02               	movlw	high _dbuf
  4418  003CAA  21EF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4419  003CAC  6EDA               	movwf	fsr2h,c
  4420  003CAE  51D4               	movf	efgtoa@d& (0+255),w,b
  4421  003CB0  0F30               	addlw	48
  4422  003CB2  6EDF               	movwf	indf2,c
  4423  003CB4                     
  4424                           ; BSR set to: 1
  4425  003CB4  4BEE               	infsnz	efgtoa@n& (0+255),f,b
  4426  003CB6  2BEF               	incf	(efgtoa@n+1)& (0+255),f,b
  4427  003CB8                     
  4428                           ; BSR set to: 1
  4429                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  4430  003CB8  07DA               	decf	efgtoa@w& (0+255),f,b
  4431  003CBA  A0D8               	btfss	status,0,c
  4432  003CBC  07DB               	decf	(efgtoa@w+1)& (0+255),f,b
  4433  003CBE                     l4946:
  4434                           
  4435                           ; BSR set to: 1
  4436                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  4437  003CBE  C1DE  F057         	movff	efgtoa@h,___flsub@b
  4438  003CC2  C1DF  F058         	movff	efgtoa@h+1,___flsub@b+1
  4439  003CC6  C1E0  F059         	movff	efgtoa@h+2,___flsub@b+2
  4440  003CCA  C1E1  F05A         	movff	efgtoa@h+3,___flsub@b+3
  4441  003CCE  C1F0  F013         	movff	efgtoa@u,___flmul@a
  4442  003CD2  C1F1  F014         	movff	efgtoa@u+1,___flmul@a+1
  4443  003CD6  C1F2  F015         	movff	efgtoa@u+2,___flmul@a+2
  4444  003CDA  C1F3  F016         	movff	efgtoa@u+3,___flmul@a+3
  4445  003CDE  C1E2  F00F         	movff	efgtoa@l,___flmul@b
  4446  003CE2  C1E3  F010         	movff	efgtoa@l+1,___flmul@b+1
  4447  003CE6  C1E4  F011         	movff	efgtoa@l+2,___flmul@b+2
  4448  003CEA  C1E5  F012         	movff	efgtoa@l+3,___flmul@b+3
  4449  003CEE  ECD2  F02A         	call	___flmul	;wreg free
  4450  003CF2  C00F  F05B         	movff	?___flmul,___flsub@a
  4451  003CF6  C010  F05C         	movff	?___flmul+1,___flsub@a+1
  4452  003CFA  C011  F05D         	movff	?___flmul+2,___flsub@a+2
  4453  003CFE  C012  F05E         	movff	?___flmul+3,___flsub@a+3
  4454  003D02  EC14  F03D         	call	___flsub	;wreg free
  4455  003D06  C057  F1DE         	movff	?___flsub,efgtoa@h
  4456  003D0A  C058  F1DF         	movff	?___flsub+1,efgtoa@h+1
  4457  003D0E  C059  F1E0         	movff	?___flsub+2,efgtoa@h+2
  4458  003D12  C05A  F1E1         	movff	?___flsub+3,efgtoa@h+3
  4459  003D16                     
  4460                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  4461  003D16  C1F0  F028         	movff	efgtoa@u,___fldiv@b
  4462  003D1A  C1F1  F029         	movff	efgtoa@u+1,___fldiv@b+1
  4463  003D1E  C1F2  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  4464  003D22  C1F3  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  4465  003D26  0E00               	movlw	0
  4466  003D28  6E2C               	movwf	___fldiv@a^0,c
  4467  003D2A  0E00               	movlw	0
  4468  003D2C  6E2D               	movwf	(___fldiv@a+1)^0,c
  4469  003D2E  0E20               	movlw	32
  4470  003D30  6E2E               	movwf	(___fldiv@a+2)^0,c
  4471  003D32  0E41               	movlw	65
  4472  003D34  6E2F               	movwf	(___fldiv@a+3)^0,c
  4473  003D36  ECE7  F02C         	call	___fldiv	;wreg free
  4474  003D3A  C028  F1F0         	movff	?___fldiv,efgtoa@u
  4475  003D3E  C029  F1F1         	movff	?___fldiv+1,efgtoa@u+1
  4476  003D42  C02A  F1F2         	movff	?___fldiv+2,efgtoa@u+2
  4477  003D46  C02B  F1F3         	movff	?___fldiv+3,efgtoa@u+3
  4478  003D4A                     
  4479                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  4480  003D4A  0101               	movlb	1	; () banked
  4481  003D4C  07CC               	decf	efgtoa@ne& (0+255),f,b
  4482  003D4E  A0D8               	btfss	status,0,c
  4483  003D50  07CD               	decf	(efgtoa@ne+1)& (0+255),f,b
  4484  003D52                     
  4485                           ; BSR set to: 1
  4486                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 490:         ++i;
  4487  003D52  4BE6               	infsnz	efgtoa@i& (0+255),f,b
  4488  003D54  2BE7               	incf	(efgtoa@i+1)& (0+255),f,b
  4489  003D56                     l4954:
  4490                           
  4491                           ; BSR set to: 1
  4492                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4493  003D56  51CE               	movf	efgtoa@m& (0+255),w,b
  4494  003D58  5DE6               	subwf	efgtoa@i& (0+255),w,b
  4495  003D5A  51E7               	movf	(efgtoa@i+1)& (0+255),w,b
  4496  003D5C  0A80               	xorlw	128
  4497  003D5E  0100               	movlb	0	; () banked
  4498  003D60  6FCE               	movwf	??_efgtoa& (0+255),b
  4499  003D62  0101               	movlb	1	; () banked
  4500  003D64  51CF               	movf	(efgtoa@m+1)& (0+255),w,b
  4501  003D66  0A80               	xorlw	128
  4502  003D68  0100               	movlb	0	; () banked
  4503  003D6A  59CE               	subwfb	??_efgtoa& (0+255),w,b
  4504  003D6C  B0D8               	btfsc	status,0,c
  4505  003D6E  EFBB  F01E         	goto	u5931
  4506  003D72  EFBD  F01E         	goto	u5930
  4507  003D76                     u5931:
  4508  003D76  EFCC  F01E         	goto	l4958
  4509  003D7A                     u5930:
  4510  003D7A                     
  4511                           ; BSR set to: 0
  4512  003D7A  0101               	movlb	1	; () banked
  4513  003D7C  BFEF               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4514  003D7E  EFCA  F01E         	goto	u5941
  4515  003D82  51EF               	movf	(efgtoa@n+1)& (0+255),w,b
  4516  003D84  E109               	bnz	u5940
  4517  003D86  0E4B               	movlw	75
  4518  003D88  5DEE               	subwf	efgtoa@n& (0+255),w,b
  4519  003D8A  A0D8               	btfss	status,0,c
  4520  003D8C  EFCA  F01E         	goto	u5941
  4521  003D90  EFCC  F01E         	goto	u5940
  4522  003D94                     u5941:
  4523  003D94  EFBC  F01D         	goto	l4906
  4524  003D98                     u5940:
  4525  003D98                     l4958:
  4526                           
  4527                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  4528  003D98  0101               	movlb	1	; () banked
  4529  003D9A  51CA               	movf	efgtoa@pp& (0+255),w,b
  4530  003D9C  11CB               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4531  003D9E  A4D8               	btfss	status,2,c
  4532  003DA0  EFD4  F01E         	goto	u5951
  4533  003DA4  EFD6  F01E         	goto	u5950
  4534  003DA8                     u5951:
  4535  003DA8  EFE9  F01E         	goto	l4966
  4536  003DAC                     u5950:
  4537  003DAC                     
  4538                           ; BSR set to: 1
  4539  003DAC  0100               	movlb	0	; () banked
  4540  003DAE  A9FD               	btfss	_flags& (0+255),4,b
  4541  003DB0  EFDC  F01E         	goto	u5961
  4542  003DB4  EFDE  F01E         	goto	u5960
  4543  003DB8                     u5961:
  4544  003DB8  EFE9  F01E         	goto	l4966
  4545  003DBC                     u5960:
  4546  003DBC                     
  4547                           ; BSR set to: 0
  4548                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  4549  003DBC  0E12               	movlw	low _dbuf
  4550  003DBE  0101               	movlb	1	; () banked
  4551  003DC0  25EE               	addwf	efgtoa@n& (0+255),w,b
  4552  003DC2  6ED9               	movwf	fsr2l,c
  4553  003DC4  0E02               	movlw	high _dbuf
  4554  003DC6  21EF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4555  003DC8  6EDA               	movwf	fsr2h,c
  4556  003DCA  0E2E               	movlw	46
  4557  003DCC  6EDF               	movwf	indf2,c
  4558  003DCE                     
  4559                           ; BSR set to: 1
  4560  003DCE  4BEE               	infsnz	efgtoa@n& (0+255),f,b
  4561  003DD0  2BEF               	incf	(efgtoa@n+1)& (0+255),f,b
  4562  003DD2                     l4966:
  4563                           
  4564                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  4565  003DD2  0E12               	movlw	low _dbuf
  4566  003DD4  0101               	movlb	1	; () banked
  4567  003DD6  25EE               	addwf	efgtoa@n& (0+255),w,b
  4568  003DD8  6ED9               	movwf	fsr2l,c
  4569  003DDA  0E02               	movlw	high _dbuf
  4570  003DDC  21EF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4571  003DDE  6EDA               	movwf	fsr2h,c
  4572  003DE0  0E00               	movlw	0
  4573  003DE2  6EDF               	movwf	indf2,c
  4574  003DE4                     
  4575                           ; BSR set to: 1
  4576                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  4577  003DE4  0E65               	movlw	101
  4578  003DE6  19DC               	xorwf	efgtoa@nmode& (0+255),w,b
  4579  003DE8  A4D8               	btfss	status,2,c
  4580  003DEA  EFF9  F01E         	goto	u5971
  4581  003DEE  EFFB  F01E         	goto	u5970
  4582  003DF2                     u5971:
  4583  003DF2  EF38  F01A         	goto	l4768
  4584  003DF6                     u5970:
  4585  003DF6                     
  4586                           ; BSR set to: 1
  4587                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  4588  003DF6  0E00               	movlw	0
  4589  003DF8  6FE7               	movwf	(efgtoa@i+1)& (0+255),b
  4590  003DFA  0E4F               	movlw	79
  4591  003DFC  6FE6               	movwf	efgtoa@i& (0+255),b
  4592  003DFE                     
  4593                           ; BSR set to: 1
  4594                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  4595  003DFE  0E12               	movlw	low _dbuf
  4596  003E00  25E6               	addwf	efgtoa@i& (0+255),w,b
  4597  003E02  6ED9               	movwf	fsr2l,c
  4598  003E04  0E02               	movlw	high _dbuf
  4599  003E06  21E7               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4600  003E08  6EDA               	movwf	fsr2h,c
  4601  003E0A  0E00               	movlw	0
  4602  003E0C  6EDF               	movwf	indf2,c
  4603  003E0E                     
  4604                           ; BSR set to: 1
  4605                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  4606  003E0E  0E00               	movlw	0
  4607  003E10  6FD7               	movwf	(efgtoa@sign+1)& (0+255),b
  4608  003E12  0E00               	movlw	0
  4609  003E14  6FD6               	movwf	efgtoa@sign& (0+255),b
  4610  003E16                     
  4611                           ; BSR set to: 1
  4612                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  4613  003E16  BFED               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4614  003E18  EF12  F01F         	goto	u5980
  4615  003E1C  EF10  F01F         	goto	u5981
  4616  003E20                     u5981:
  4617  003E20  EF1A  F01F         	goto	l4982
  4618  003E24                     u5980:
  4619  003E24                     
  4620                           ; BSR set to: 1
  4621                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  4622  003E24  0E00               	movlw	0
  4623  003E26  6FD7               	movwf	(efgtoa@sign+1)& (0+255),b
  4624  003E28  0E01               	movlw	1
  4625  003E2A  6FD6               	movwf	efgtoa@sign& (0+255),b
  4626  003E2C                     
  4627                           ; BSR set to: 1
  4628                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4629  003E2C  6DEC               	negf	efgtoa@e& (0+255),b
  4630  003E2E  1FED               	comf	(efgtoa@e+1)& (0+255),f,b
  4631  003E30  B0D8               	btfsc	status,0,c
  4632  003E32  2BED               	incf	(efgtoa@e+1)& (0+255),f,b
  4633  003E34                     l4982:
  4634                           
  4635                           ; BSR set to: 1
  4636                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4637  003E34  0E00               	movlw	0
  4638  003E36  6FD9               	movwf	(efgtoa@p+1)& (0+255),b
  4639  003E38  0E02               	movlw	2
  4640  003E3A  6FD8               	movwf	efgtoa@p& (0+255),b
  4641                           
  4642                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4643  003E3C  EF4B  F01F         	goto	l4994
  4644  003E40                     l4984:
  4645                           
  4646                           ; BSR set to: 1
  4647                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4648  003E40  07E6               	decf	efgtoa@i& (0+255),f,b
  4649  003E42  A0D8               	btfss	status,0,c
  4650  003E44  07E7               	decf	(efgtoa@i+1)& (0+255),f,b
  4651  003E46                     
  4652                           ; BSR set to: 1
  4653                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4654  003E46  0E12               	movlw	low _dbuf
  4655  003E48  25E6               	addwf	efgtoa@i& (0+255),w,b
  4656  003E4A  6ED9               	movwf	fsr2l,c
  4657  003E4C  0E02               	movlw	high _dbuf
  4658  003E4E  21E7               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4659  003E50  6EDA               	movwf	fsr2h,c
  4660  003E52  C1EC  F001         	movff	efgtoa@e,___awmod@dividend
  4661  003E56  C1ED  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4662  003E5A  0E00               	movlw	0
  4663  003E5C  6E04               	movwf	(___awmod@divisor+1)^0,c
  4664  003E5E  0E0A               	movlw	10
  4665  003E60  6E03               	movwf	___awmod@divisor^0,c
  4666  003E62  EC6A  F03A         	call	___awmod	;wreg free
  4667  003E66  5001               	movf	?___awmod^0,w,c
  4668  003E68  0F30               	addlw	48
  4669  003E6A  6EDF               	movwf	indf2,c
  4670  003E6C                     
  4671                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4672  003E6C  C1EC  F001         	movff	efgtoa@e,___awdiv@dividend
  4673  003E70  C1ED  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4674  003E74  0E00               	movlw	0
  4675  003E76  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4676  003E78  0E0A               	movlw	10
  4677  003E7A  6E03               	movwf	___awdiv@divisor^0,c
  4678  003E7C  EC08  F03A         	call	___awdiv	;wreg free
  4679  003E80  C001  F1EC         	movff	?___awdiv,efgtoa@e
  4680  003E84  C002  F1ED         	movff	?___awdiv+1,efgtoa@e+1
  4681  003E88                     
  4682                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4683  003E88  0101               	movlb	1	; () banked
  4684  003E8A  07D8               	decf	efgtoa@p& (0+255),f,b
  4685  003E8C  A0D8               	btfss	status,0,c
  4686  003E8E  07D9               	decf	(efgtoa@p+1)& (0+255),f,b
  4687  003E90                     
  4688                           ; BSR set to: 1
  4689                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4690  003E90  07DA               	decf	efgtoa@w& (0+255),f,b
  4691  003E92  A0D8               	btfss	status,0,c
  4692  003E94  07DB               	decf	(efgtoa@w+1)& (0+255),f,b
  4693  003E96                     l4994:
  4694                           
  4695                           ; BSR set to: 1
  4696                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4697  003E96  51EC               	movf	efgtoa@e& (0+255),w,b
  4698  003E98  11ED               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4699  003E9A  A4D8               	btfss	status,2,c
  4700  003E9C  EF52  F01F         	goto	u5991
  4701  003EA0  EF54  F01F         	goto	u5990
  4702  003EA4                     u5991:
  4703  003EA4  EF20  F01F         	goto	l4984
  4704  003EA8                     u5990:
  4705  003EA8                     
  4706                           ; BSR set to: 1
  4707  003EA8  BFD9               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4708  003EAA  EF61  F01F         	goto	u6000
  4709  003EAE  51D9               	movf	(efgtoa@p+1)& (0+255),w,b
  4710  003EB0  E106               	bnz	u6001
  4711  003EB2  05D8               	decf	efgtoa@p& (0+255),w,b
  4712  003EB4  B0D8               	btfsc	status,0,c
  4713  003EB6  EF5F  F01F         	goto	u6001
  4714  003EBA  EF61  F01F         	goto	u6000
  4715  003EBE                     u6001:
  4716  003EBE  EF20  F01F         	goto	l4984
  4717  003EC2                     u6000:
  4718  003EC2                     
  4719                           ; BSR set to: 1
  4720                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 514:         --i;
  4721  003EC2  07E6               	decf	efgtoa@i& (0+255),f,b
  4722  003EC4  A0D8               	btfss	status,0,c
  4723  003EC6  07E7               	decf	(efgtoa@i+1)& (0+255),f,b
  4724  003EC8                     
  4725                           ; BSR set to: 1
  4726                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4727  003EC8  51D6               	movf	efgtoa@sign& (0+255),w,b
  4728  003ECA  11D7               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4729  003ECC  A4D8               	btfss	status,2,c
  4730  003ECE  EF6B  F01F         	goto	u6011
  4731  003ED2  EF6D  F01F         	goto	u6010
  4732  003ED6                     u6011:
  4733  003ED6  EF73  F01F         	goto	l5004
  4734  003EDA                     u6010:
  4735  003EDA                     
  4736                           ; BSR set to: 1
  4737  003EDA  0E00               	movlw	0
  4738  003EDC  6FC3               	movwf	(_efgtoa$946+1)& (0+255),b
  4739  003EDE  0E2B               	movlw	43
  4740  003EE0  6FC2               	movwf	_efgtoa$946& (0+255),b
  4741  003EE2  EF77  F01F         	goto	l5006
  4742  003EE6                     l5004:
  4743                           
  4744                           ; BSR set to: 1
  4745  003EE6  0E00               	movlw	0
  4746  003EE8  6FC3               	movwf	(_efgtoa$946+1)& (0+255),b
  4747  003EEA  0E2D               	movlw	45
  4748  003EEC  6FC2               	movwf	_efgtoa$946& (0+255),b
  4749  003EEE                     l5006:
  4750                           
  4751                           ; BSR set to: 1
  4752  003EEE  0E12               	movlw	low _dbuf
  4753  003EF0  25E6               	addwf	efgtoa@i& (0+255),w,b
  4754  003EF2  6ED9               	movwf	fsr2l,c
  4755  003EF4  0E02               	movlw	high _dbuf
  4756  003EF6  21E7               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4757  003EF8  6EDA               	movwf	fsr2h,c
  4758  003EFA  C1C2  FFDF         	movff	_efgtoa$946,indf2
  4759  003EFE                     
  4760                           ; BSR set to: 1
  4761                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 516:         --w;
  4762  003EFE  07DA               	decf	efgtoa@w& (0+255),f,b
  4763  003F00  A0D8               	btfss	status,0,c
  4764  003F02  07DB               	decf	(efgtoa@w+1)& (0+255),f,b
  4765  003F04                     
  4766                           ; BSR set to: 1
  4767                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4768  003F04  07E6               	decf	efgtoa@i& (0+255),f,b
  4769  003F06  A0D8               	btfss	status,0,c
  4770  003F08  07E7               	decf	(efgtoa@i+1)& (0+255),f,b
  4771  003F0A                     
  4772                           ; BSR set to: 1
  4773  003F0A  0EBF               	movlw	191
  4774  003F0C  0100               	movlb	0	; () banked
  4775  003F0E  6FCE               	movwf	??_efgtoa& (0+255),b
  4776  003F10  0EFF               	movlw	255
  4777  003F12  6FCF               	movwf	(??_efgtoa+1)& (0+255),b
  4778  003F14  51CD               	movf	efgtoa@c& (0+255),w,b
  4779  003F16  6FD0               	movwf	(??_efgtoa+2)& (0+255),b
  4780  003F18  6BD1               	clrf	(??_efgtoa+3)& (0+255),b
  4781  003F1A  51CE               	movf	??_efgtoa& (0+255),w,b
  4782  003F1C  27D0               	addwf	(??_efgtoa+2)& (0+255),f,b
  4783  003F1E  51CF               	movf	(??_efgtoa+1)& (0+255),w,b
  4784  003F20  23D1               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4785  003F22  51D1               	movf	(??_efgtoa+3)& (0+255),w,b
  4786  003F24  E10A               	bnz	u6020
  4787  003F26  0E1A               	movlw	26
  4788  003F28  5DD0               	subwf	(??_efgtoa+2)& (0+255),w,b
  4789  003F2A  A0D8               	btfss	status,0,c
  4790  003F2C  EF9A  F01F         	goto	u6021
  4791  003F30  EF9D  F01F         	goto	u6020
  4792  003F34                     u6021:
  4793  003F34  0E01               	movlw	1
  4794  003F36  EF9E  F01F         	goto	u6030
  4795  003F3A                     u6020:
  4796  003F3A  0E00               	movlw	0
  4797  003F3C                     u6030:
  4798  003F3C  0101               	movlb	1	; () banked
  4799  003F3E  6FC6               	movwf	_efgtoa$948& (0+255),b
  4800  003F40  6BC7               	clrf	(_efgtoa$948+1)& (0+255),b
  4801  003F42                     
  4802                           ; BSR set to: 1
  4803  003F42  51C6               	movf	_efgtoa$948& (0+255),w,b
  4804  003F44  11C7               	iorwf	(_efgtoa$948+1)& (0+255),w,b
  4805  003F46  A4D8               	btfss	status,2,c
  4806  003F48  EFA8  F01F         	goto	u6041
  4807  003F4C  EFAA  F01F         	goto	u6040
  4808  003F50                     u6041:
  4809  003F50  EFB0  F01F         	goto	l5020
  4810  003F54                     u6040:
  4811  003F54                     
  4812                           ; BSR set to: 1
  4813  003F54  0E00               	movlw	0
  4814  003F56  6FC5               	movwf	(_efgtoa$947+1)& (0+255),b
  4815  003F58  0E65               	movlw	101
  4816  003F5A  6FC4               	movwf	_efgtoa$947& (0+255),b
  4817  003F5C  EFB4  F01F         	goto	l5022
  4818  003F60                     l5020:
  4819                           
  4820                           ; BSR set to: 1
  4821  003F60  0E00               	movlw	0
  4822  003F62  6FC5               	movwf	(_efgtoa$947+1)& (0+255),b
  4823  003F64  0E45               	movlw	69
  4824  003F66  6FC4               	movwf	_efgtoa$947& (0+255),b
  4825  003F68                     l5022:
  4826                           
  4827                           ; BSR set to: 1
  4828  003F68  0E12               	movlw	low _dbuf
  4829  003F6A  25E6               	addwf	efgtoa@i& (0+255),w,b
  4830  003F6C  6ED9               	movwf	fsr2l,c
  4831  003F6E  0E02               	movlw	high _dbuf
  4832  003F70  21E7               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4833  003F72  6EDA               	movwf	fsr2h,c
  4834  003F74  C1C4  FFDF         	movff	_efgtoa$947,indf2
  4835  003F78                     
  4836                           ; BSR set to: 1
  4837                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 519:         --w;
  4838  003F78  07DA               	decf	efgtoa@w& (0+255),f,b
  4839  003F7A  A0D8               	btfss	status,0,c
  4840  003F7C  07DB               	decf	(efgtoa@w+1)& (0+255),f,b
  4841  003F7E                     
  4842                           ; BSR set to: 1
  4843                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4844  003F7E  0E12               	movlw	low _dbuf
  4845  003F80  25EE               	addwf	efgtoa@n& (0+255),w,b
  4846  003F82  6E01               	movwf	strcpy@dest^0,c
  4847  003F84  0E02               	movlw	high _dbuf
  4848  003F86  21EF               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4849  003F88  6E02               	movwf	(strcpy@dest+1)^0,c
  4850  003F8A  0E12               	movlw	low _dbuf
  4851  003F8C  25E6               	addwf	efgtoa@i& (0+255),w,b
  4852  003F8E  6E03               	movwf	strcpy@src^0,c
  4853  003F90  0E02               	movlw	high _dbuf
  4854  003F92  21E7               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4855  003F94  6E04               	movwf	(strcpy@src+1)^0,c
  4856  003F96  EC46  F03C         	call	_strcpy	;wreg free
  4857  003F9A  EF38  F01A         	goto	l4768
  4858  003F9E                     l941:
  4859  003F9E  0012               	return		;funcret
  4860  003FA0                     __end_of_efgtoa:
  4861                           	callstack 0
  4862                           
  4863 ;; *************** function _tolower *****************
  4864 ;; Defined at:
  4865 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\tolower.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;  c               2    6[COMRAM] int 
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;		None
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  2    6[COMRAM] int 
  4872 ;; Registers used:
  4873 ;;		wreg, status,2, status,0
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4879 ;;      Params:         2       0       0       0       0       0       0       0       0
  4880 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4881 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4882 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4883 ;;Total ram usage:        8 bytes
  4884 ;; Hardware stack levels used:    1
  4885 ;; Hardware stack levels required when called:    1
  4886 ;; This function calls:
  4887 ;;		_isupper
  4888 ;; This function is called by:
  4889 ;;		_efgtoa
  4890 ;;		_vfpfcnvrt
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           	psect	text6
  4895  0077CE                     __ptext6:
  4896                           	callstack 0
  4897  0077CE                     _tolower:
  4898                           	callstack 26
  4899  0077CE  0EBF               	movlw	191
  4900  0077D0  6E09               	movwf	??_tolower^0,c
  4901  0077D2  0EFF               	movlw	255
  4902  0077D4  6E0A               	movwf	(??_tolower+1)^0,c
  4903  0077D6  C007  F00B         	movff	tolower@c,??_tolower+2
  4904  0077DA  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4905  0077DE  5009               	movf	??_tolower^0,w,c
  4906  0077E0  260B               	addwf	(??_tolower+2)^0,f,c
  4907  0077E2  500A               	movf	(??_tolower+1)^0,w,c
  4908  0077E4  220C               	addwfc	(??_tolower+3)^0,f,c
  4909  0077E6  500C               	movf	(??_tolower+3)^0,w,c
  4910  0077E8  E10A               	bnz	u5170
  4911  0077EA  0E1A               	movlw	26
  4912  0077EC  5C0B               	subwf	(??_tolower+2)^0,w,c
  4913  0077EE  A0D8               	btfss	status,0,c
  4914  0077F0  EFFC  F03B         	goto	u5171
  4915  0077F4  EFFF  F03B         	goto	u5170
  4916  0077F8                     u5171:
  4917  0077F8  0E01               	movlw	1
  4918  0077FA  EF00  F03C         	goto	u5180
  4919  0077FE                     u5170:
  4920  0077FE  0E00               	movlw	0
  4921  007800                     u5180:
  4922  007800  6E0D               	movwf	_tolower$1240^0,c
  4923  007802  6A0E               	clrf	(_tolower$1240+1)^0,c
  4924  007804  500D               	movf	_tolower$1240^0,w,c
  4925  007806  100E               	iorwf	(_tolower$1240+1)^0,w,c
  4926  007808  B4D8               	btfsc	status,2,c
  4927  00780A  EF09  F03C         	goto	u5191
  4928  00780E  EF0B  F03C         	goto	u5190
  4929  007812                     u5191:
  4930  007812  EF12  F03C         	goto	l1410
  4931  007816                     u5190:
  4932  007816  0E20               	movlw	32
  4933  007818  1007               	iorwf	tolower@c^0,w,c
  4934  00781A  6E07               	movwf	?_tolower^0,c
  4935  00781C  5008               	movf	(tolower@c+1)^0,w,c
  4936  00781E  6E08               	movwf	(?_tolower+1)^0,c
  4937  007820  EF16  F03C         	goto	l1415
  4938  007824                     l1410:
  4939  007824  C007  F007         	movff	tolower@c,?_tolower
  4940  007828  C008  F008         	movff	tolower@c+1,?_tolower+1
  4941  00782C                     l1415:
  4942  00782C  0012               	return		;funcret
  4943  00782E                     __end_of_tolower:
  4944                           	callstack 0
  4945                           
  4946 ;; *************** function _isupper *****************
  4947 ;; Defined at:
  4948 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;  c               2    0[COMRAM] int 
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;		None
  4953 ;; Return value:  Size  Location     Type
  4954 ;;                  2    0[COMRAM] int 
  4955 ;; Registers used:
  4956 ;;		wreg, status,2, status,0
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4962 ;;      Params:         2       0       0       0       0       0       0       0       0
  4963 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4964 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4965 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4966 ;;Total ram usage:        6 bytes
  4967 ;; Hardware stack levels used:    1
  4968 ;; This function calls:
  4969 ;;		Nothing
  4970 ;; This function is called by:
  4971 ;;		_efgtoa
  4972 ;;		_vfpfcnvrt
  4973 ;;		_tolower
  4974 ;; This function uses a non-reentrant model
  4975 ;;
  4976                           
  4977                           	psect	text7
  4978  007B32                     __ptext7:
  4979                           	callstack 0
  4980  007B32                     _isupper:
  4981                           	callstack 26
  4982  007B32  0EBF               	movlw	191
  4983  007B34  6E03               	movwf	??_isupper^0,c
  4984  007B36  0EFF               	movlw	255
  4985  007B38  6E04               	movwf	(??_isupper+1)^0,c
  4986  007B3A  C001  F005         	movff	isupper@c,??_isupper+2
  4987  007B3E  C002  F006         	movff	isupper@c+1,??_isupper+3
  4988  007B42  5003               	movf	??_isupper^0,w,c
  4989  007B44  2605               	addwf	(??_isupper+2)^0,f,c
  4990  007B46  5004               	movf	(??_isupper+1)^0,w,c
  4991  007B48  2206               	addwfc	(??_isupper+3)^0,f,c
  4992  007B4A  5006               	movf	(??_isupper+3)^0,w,c
  4993  007B4C  E10A               	bnz	u4180
  4994  007B4E  0E1A               	movlw	26
  4995  007B50  5C05               	subwf	(??_isupper+2)^0,w,c
  4996  007B52  A0D8               	btfss	status,0,c
  4997  007B54  EFAE  F03D         	goto	u4181
  4998  007B58  EFB1  F03D         	goto	u4180
  4999  007B5C                     u4181:
  5000  007B5C  0E01               	movlw	1
  5001  007B5E  EFB2  F03D         	goto	u4190
  5002  007B62                     u4180:
  5003  007B62  0E00               	movlw	0
  5004  007B64                     u4190:
  5005  007B64  6E01               	movwf	?_isupper^0,c
  5006  007B66  6A02               	clrf	(?_isupper+1)^0,c
  5007  007B68  0012               	return		;funcret
  5008  007B6A                     __end_of_isupper:
  5009                           	callstack 0
  5010                           
  5011 ;; *************** function _strcpy *****************
  5012 ;; Defined at:
  5013 ;;		line 3 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strcpy.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;  dest            2    0[COMRAM] PTR unsigned char 
  5016 ;;		 -> dbuf(80), 
  5017 ;;  src             2    2[COMRAM] PTR const unsigned char 
  5018 ;;		 -> STR_16(4), STR_15(4), STR_12(4), STR_11(4), 
  5019 ;;		 -> dbuf(80), 
  5020 ;; Auto vars:     Size  Location     Type
  5021 ;;  d               2    8[COMRAM] PTR unsigned char 
  5022 ;;		 -> dbuf(80), 
  5023 ;;  s               2    6[COMRAM] PTR const unsigned char 
  5024 ;;		 -> STR_16(4), STR_15(4), STR_12(4), STR_11(4), 
  5025 ;;		 -> dbuf(80), 
  5026 ;; Return value:  Size  Location     Type
  5027 ;;                  2    0[COMRAM] PTR unsigned char 
  5028 ;; Registers used:
  5029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5030 ;; Tracked objects:
  5031 ;;		On entry : 0/0
  5032 ;;		On exit  : 0/0
  5033 ;;		Unchanged: 0/0
  5034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5035 ;;      Params:         4       0       0       0       0       0       0       0       0
  5036 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5037 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5038 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5039 ;;Total ram usage:       10 bytes
  5040 ;; Hardware stack levels used:    1
  5041 ;; This function calls:
  5042 ;;		Nothing
  5043 ;; This function is called by:
  5044 ;;		_efgtoa
  5045 ;; This function uses a non-reentrant model
  5046 ;;
  5047                           
  5048                           	psect	text8
  5049  00788C                     __ptext8:
  5050                           	callstack 0
  5051  00788C                     _strcpy:
  5052                           	callstack 26
  5053  00788C  C003  F007         	movff	strcpy@src,strcpy@s
  5054  007890  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  5055  007894  C001  F009         	movff	strcpy@dest,strcpy@d
  5056  007898  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  5057  00789C                     l4590:
  5058  00789C  5007               	movf	strcpy@s^0,w,c
  5059  00789E  6E05               	movwf	??_strcpy^0,c
  5060  0078A0  5008               	movf	(strcpy@s+1)^0,w,c
  5061  0078A2  6E06               	movwf	(??_strcpy+1)^0,c
  5062  0078A4  4A07               	infsnz	strcpy@s^0,f,c
  5063  0078A6  2A08               	incf	(strcpy@s+1)^0,f,c
  5064  0078A8  C005  FFF6         	movff	??_strcpy,tblptrl
  5065  0078AC  C006  FFF7         	movff	??_strcpy+1,tblptrh
  5066  0078B0  6AF8               	clrf	tblptru,c
  5067  0078B2  C009  FFD9         	movff	strcpy@d,fsr2l
  5068  0078B6  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  5069  0078BA  4A09               	infsnz	strcpy@d^0,f,c
  5070  0078BC  2A0A               	incf	(strcpy@d+1)^0,f,c
  5071  0078BE  0E07               	movlw	(high __ramtop+-1)
  5072  0078C0  64F7               	cpfsgt	tblptrh,c
  5073  0078C2  D003               	bra	u5157
  5074  0078C4  0008               	tblrd		*
  5075  0078C6  50F5               	movf	tablat,w,c
  5076  0078C8  D005               	bra	u5150
  5077  0078CA                     u5157:
  5078  0078CA  CFF6 FFE1          	movff	tblptrl,fsr1l
  5079  0078CE  CFF7 FFE2          	movff	tblptrh,fsr1h
  5080  0078D2  50E7               	movf	indf1,w,c
  5081  0078D4                     u5150:
  5082  0078D4  6EDF               	movwf	indf2,c
  5083  0078D6  50DF               	movf	indf2,w,c
  5084  0078D8  A4D8               	btfss	status,2,c
  5085  0078DA  EF71  F03C         	goto	u5161
  5086  0078DE  EF73  F03C         	goto	u5160
  5087  0078E2                     u5161:
  5088  0078E2  EF4E  F03C         	goto	l4590
  5089  0078E6                     u5160:
  5090  0078E6  0012               	return		;funcret
  5091  0078E8                     __end_of_strcpy:
  5092                           	callstack 0
  5093                           
  5094 ;; *************** function _floorf *****************
  5095 ;; Defined at:
  5096 ;;		line 3 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\floorf.c"
  5097 ;; Parameters:    Size  Location     Type
  5098 ;;  x               4   64[COMRAM] float 
  5099 ;; Auto vars:     Size  Location     Type
  5100 ;;  u               4   80[COMRAM] struct .
  5101 ;;  m               4   74[COMRAM] unsigned long 
  5102 ;;  e               2   78[COMRAM] int 
  5103 ;; Return value:  Size  Location     Type
  5104 ;;                  4   64[COMRAM] float 
  5105 ;; Registers used:
  5106 ;;		wreg, status,2, status,0
  5107 ;; Tracked objects:
  5108 ;;		On entry : 0/0
  5109 ;;		On exit  : 0/0
  5110 ;;		Unchanged: 0/0
  5111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5112 ;;      Params:         4       0       0       0       0       0       0       0       0
  5113 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5114 ;;      Temps:          6       0       0       0       0       0       0       0       0
  5115 ;;      Totals:        20       0       0       0       0       0       0       0       0
  5116 ;;Total ram usage:       20 bytes
  5117 ;; Hardware stack levels used:    1
  5118 ;; This function calls:
  5119 ;;		Nothing
  5120 ;; This function is called by:
  5121 ;;		_efgtoa
  5122 ;; This function uses a non-reentrant model
  5123 ;;
  5124                           
  5125                           	psect	text9
  5126  006280                     __ptext9:
  5127                           	callstack 0
  5128  006280                     _floorf:
  5129                           	callstack 26
  5130  006280  C204  F051         	movff	floorf@F527,floorf@u
  5131  006284  C205  F052         	movff	floorf@F527+1,floorf@u+1
  5132  006288  C206  F053         	movff	floorf@F527+2,floorf@u+2
  5133  00628C  C207  F054         	movff	floorf@F527+3,floorf@u+3
  5134  006290  C041  F051         	movff	floorf@x,floorf@u
  5135  006294  C042  F052         	movff	floorf@x+1,floorf@u+1
  5136  006298  C043  F053         	movff	floorf@x+2,floorf@u+2
  5137  00629C  C044  F054         	movff	floorf@x+3,floorf@u+3
  5138  0062A0  0E81               	movlw	129
  5139  0062A2  6E45               	movwf	??_floorf^0,c
  5140  0062A4  0EFF               	movlw	255
  5141  0062A6  6E46               	movwf	(??_floorf+1)^0,c
  5142  0062A8  C051  F047         	movff	floorf@u,??_floorf+2
  5143  0062AC  C052  F048         	movff	floorf@u+1,??_floorf+3
  5144  0062B0  C053  F049         	movff	floorf@u+2,??_floorf+4
  5145  0062B4  C054  F04A         	movff	floorf@u+3,??_floorf+5
  5146  0062B8  0E18               	movlw	24
  5147  0062BA  EF64  F031         	goto	u5200
  5148  0062BE                     u5205:
  5149  0062BE  90D8               	bcf	status,0,c
  5150  0062C0  324A               	rrcf	(??_floorf+5)^0,f,c
  5151  0062C2  3249               	rrcf	(??_floorf+4)^0,f,c
  5152  0062C4  3248               	rrcf	(??_floorf+3)^0,f,c
  5153  0062C6  3247               	rrcf	(??_floorf+2)^0,f,c
  5154  0062C8                     u5200:
  5155  0062C8  2EE8               	decfsz	wreg,f,c
  5156  0062CA  EF5F  F031         	goto	u5205
  5157  0062CE  5047               	movf	(??_floorf+2)^0,w,c
  5158  0062D0  2445               	addwf	??_floorf^0,w,c
  5159  0062D2  6E4F               	movwf	floorf@e^0,c
  5160  0062D4  0E00               	movlw	0
  5161  0062D6  2046               	addwfc	(??_floorf+1)^0,w,c
  5162  0062D8  6E50               	movwf	(floorf@e+1)^0,c
  5163  0062DA  BE50               	btfsc	(floorf@e+1)^0,7,c
  5164  0062DC  EF79  F031         	goto	u5211
  5165  0062E0  5050               	movf	(floorf@e+1)^0,w,c
  5166  0062E2  E109               	bnz	u5210
  5167  0062E4  0E17               	movlw	23
  5168  0062E6  5C4F               	subwf	floorf@e^0,w,c
  5169  0062E8  A0D8               	btfss	status,0,c
  5170  0062EA  EF79  F031         	goto	u5211
  5171  0062EE  EF7B  F031         	goto	u5210
  5172  0062F2                     u5211:
  5173  0062F2  EF85  F031         	goto	l4608
  5174  0062F6                     u5210:
  5175  0062F6                     l4606:
  5176  0062F6  C041  F041         	movff	floorf@x,?_floorf
  5177  0062FA  C042  F042         	movff	floorf@x+1,?_floorf+1
  5178  0062FE  C043  F043         	movff	floorf@x+2,?_floorf+2
  5179  006302  C044  F044         	movff	floorf@x+3,?_floorf+3
  5180  006306  EF48  F032         	goto	l1105
  5181  00630A                     l4608:
  5182  00630A  BE50               	btfsc	(floorf@e+1)^0,7,c
  5183  00630C  EF8A  F031         	goto	u5221
  5184  006310  EF8C  F031         	goto	u5220
  5185  006314                     u5221:
  5186  006314  EFFC  F031         	goto	l4618
  5187  006318                     u5220:
  5188  006318  C04F  F045         	movff	floorf@e,??_floorf
  5189  00631C  0EFF               	movlw	255
  5190  00631E  6E46               	movwf	(??_floorf+1)^0,c
  5191  006320  0EFF               	movlw	255
  5192  006322  6E47               	movwf	(??_floorf+2)^0,c
  5193  006324  0E7F               	movlw	127
  5194  006326  6E48               	movwf	(??_floorf+3)^0,c
  5195  006328  0E00               	movlw	0
  5196  00632A  6E49               	movwf	(??_floorf+4)^0,c
  5197  00632C                     u5235:
  5198  00632C  6645               	tstfsz	??_floorf^0,c
  5199  00632E  EF9B  F031         	goto	u5236
  5200  006332  EFA3  F031         	goto	u5237
  5201  006336                     u5236:
  5202  006336  3449               	rlcf	(??_floorf+4)^0,w,c
  5203  006338  3249               	rrcf	(??_floorf+4)^0,f,c
  5204  00633A  3248               	rrcf	(??_floorf+3)^0,f,c
  5205  00633C  3247               	rrcf	(??_floorf+2)^0,f,c
  5206  00633E  3246               	rrcf	(??_floorf+1)^0,f,c
  5207  006340  2E45               	decfsz	??_floorf^0,f,c
  5208  006342  EF96  F031         	goto	u5235
  5209  006346                     u5237:
  5210  006346  C046  F04B         	movff	??_floorf+1,floorf@m
  5211  00634A  C047  F04C         	movff	??_floorf+2,floorf@m+1
  5212  00634E  C048  F04D         	movff	??_floorf+3,floorf@m+2
  5213  006352  C049  F04E         	movff	??_floorf+4,floorf@m+3
  5214  006356  504B               	movf	floorf@m^0,w,c
  5215  006358  1451               	andwf	floorf@u^0,w,c
  5216  00635A  6E45               	movwf	??_floorf^0,c
  5217  00635C  504C               	movf	(floorf@m+1)^0,w,c
  5218  00635E  1452               	andwf	(floorf@u+1)^0,w,c
  5219  006360  6E46               	movwf	(??_floorf+1)^0,c
  5220  006362  504D               	movf	(floorf@m+2)^0,w,c
  5221  006364  1453               	andwf	(floorf@u+2)^0,w,c
  5222  006366  6E47               	movwf	(??_floorf+2)^0,c
  5223  006368  504E               	movf	(floorf@m+3)^0,w,c
  5224  00636A  1454               	andwf	(floorf@u+3)^0,w,c
  5225  00636C  6E48               	movwf	(??_floorf+3)^0,c
  5226  00636E  5045               	movf	??_floorf^0,w,c
  5227  006370  1046               	iorwf	(??_floorf+1)^0,w,c
  5228  006372  1047               	iorwf	(??_floorf+2)^0,w,c
  5229  006374  1048               	iorwf	(??_floorf+3)^0,w,c
  5230  006376  A4D8               	btfss	status,2,c
  5231  006378  EFC0  F031         	goto	u5241
  5232  00637C  EFC2  F031         	goto	u5240
  5233  006380                     u5241:
  5234  006380  EFC4  F031         	goto	l4614
  5235  006384                     u5240:
  5236  006384  EF7B  F031         	goto	l4606
  5237  006388                     l4614:
  5238  006388  C051  F045         	movff	floorf@u,??_floorf
  5239  00638C  C052  F046         	movff	floorf@u+1,??_floorf+1
  5240  006390  C053  F047         	movff	floorf@u+2,??_floorf+2
  5241  006394  C054  F048         	movff	floorf@u+3,??_floorf+3
  5242  006398  0E20               	movlw	32
  5243  00639A  EFD4  F031         	goto	u5250
  5244  00639E                     u5255:
  5245  00639E  90D8               	bcf	status,0,c
  5246  0063A0  3248               	rrcf	(??_floorf+3)^0,f,c
  5247  0063A2  3247               	rrcf	(??_floorf+2)^0,f,c
  5248  0063A4  3246               	rrcf	(??_floorf+1)^0,f,c
  5249  0063A6  3245               	rrcf	??_floorf^0,f,c
  5250  0063A8                     u5250:
  5251  0063A8  2EE8               	decfsz	wreg,f,c
  5252  0063AA  EFCF  F031         	goto	u5255
  5253  0063AE  5045               	movf	??_floorf^0,w,c
  5254  0063B0  1046               	iorwf	(??_floorf+1)^0,w,c
  5255  0063B2  1047               	iorwf	(??_floorf+2)^0,w,c
  5256  0063B4  1048               	iorwf	(??_floorf+3)^0,w,c
  5257  0063B6  B4D8               	btfsc	status,2,c
  5258  0063B8  EFE0  F031         	goto	u5261
  5259  0063BC  EFE2  F031         	goto	u5260
  5260  0063C0                     u5261:
  5261  0063C0  EFEA  F031         	goto	l1108
  5262  0063C4                     u5260:
  5263  0063C4  504B               	movf	floorf@m^0,w,c
  5264  0063C6  2651               	addwf	floorf@u^0,f,c
  5265  0063C8  504C               	movf	(floorf@m+1)^0,w,c
  5266  0063CA  2252               	addwfc	(floorf@u+1)^0,f,c
  5267  0063CC  504D               	movf	(floorf@m+2)^0,w,c
  5268  0063CE  2253               	addwfc	(floorf@u+2)^0,f,c
  5269  0063D0  504E               	movf	(floorf@m+3)^0,w,c
  5270  0063D2  2254               	addwfc	(floorf@u+3)^0,f,c
  5271  0063D4                     l1108:
  5272  0063D4  1C4B               	comf	floorf@m^0,w,c
  5273  0063D6  6E45               	movwf	??_floorf^0,c
  5274  0063D8  1C4C               	comf	(floorf@m+1)^0,w,c
  5275  0063DA  6E46               	movwf	(??_floorf+1)^0,c
  5276  0063DC  1C4D               	comf	(floorf@m+2)^0,w,c
  5277  0063DE  6E47               	movwf	(??_floorf+2)^0,c
  5278  0063E0  1C4E               	comf	(floorf@m+3)^0,w,c
  5279  0063E2  6E48               	movwf	(??_floorf+3)^0,c
  5280  0063E4  5045               	movf	??_floorf^0,w,c
  5281  0063E6  1651               	andwf	floorf@u^0,f,c
  5282  0063E8  5046               	movf	(??_floorf+1)^0,w,c
  5283  0063EA  1652               	andwf	(floorf@u+1)^0,f,c
  5284  0063EC  5047               	movf	(??_floorf+2)^0,w,c
  5285  0063EE  1653               	andwf	(floorf@u+2)^0,f,c
  5286  0063F0  5048               	movf	(??_floorf+3)^0,w,c
  5287  0063F2  1654               	andwf	(floorf@u+3)^0,f,c
  5288  0063F4  EF40  F032         	goto	l4626
  5289  0063F8                     l4618:
  5290  0063F8  C051  F045         	movff	floorf@u,??_floorf
  5291  0063FC  C052  F046         	movff	floorf@u+1,??_floorf+1
  5292  006400  C053  F047         	movff	floorf@u+2,??_floorf+2
  5293  006404  C054  F048         	movff	floorf@u+3,??_floorf+3
  5294  006408  0E20               	movlw	32
  5295  00640A  EF0C  F032         	goto	u5270
  5296  00640E                     u5275:
  5297  00640E  90D8               	bcf	status,0,c
  5298  006410  3248               	rrcf	(??_floorf+3)^0,f,c
  5299  006412  3247               	rrcf	(??_floorf+2)^0,f,c
  5300  006414  3246               	rrcf	(??_floorf+1)^0,f,c
  5301  006416  3245               	rrcf	??_floorf^0,f,c
  5302  006418                     u5270:
  5303  006418  2EE8               	decfsz	wreg,f,c
  5304  00641A  EF07  F032         	goto	u5275
  5305  00641E  5045               	movf	??_floorf^0,w,c
  5306  006420  1046               	iorwf	(??_floorf+1)^0,w,c
  5307  006422  1047               	iorwf	(??_floorf+2)^0,w,c
  5308  006424  1048               	iorwf	(??_floorf+3)^0,w,c
  5309  006426  A4D8               	btfss	status,2,c
  5310  006428  EF18  F032         	goto	u5281
  5311  00642C  EF1A  F032         	goto	u5280
  5312  006430                     u5281:
  5313  006430  EF24  F032         	goto	l4622
  5314  006434                     u5280:
  5315  006434  0E00               	movlw	0
  5316  006436  6E51               	movwf	floorf@u^0,c
  5317  006438  0E00               	movlw	0
  5318  00643A  6E52               	movwf	(floorf@u+1)^0,c
  5319  00643C  0E00               	movlw	0
  5320  00643E  6E53               	movwf	(floorf@u+2)^0,c
  5321  006440  0E00               	movlw	0
  5322  006442  6E54               	movwf	(floorf@u+3)^0,c
  5323  006444  EF40  F032         	goto	l4626
  5324  006448                     l4622:
  5325  006448  90D8               	bcf	status,0,c
  5326  00644A  3451               	rlcf	floorf@u^0,w,c
  5327  00644C  6E45               	movwf	??_floorf^0,c
  5328  00644E  3452               	rlcf	(floorf@u+1)^0,w,c
  5329  006450  6E46               	movwf	(??_floorf+1)^0,c
  5330  006452  3453               	rlcf	(floorf@u+2)^0,w,c
  5331  006454  6E47               	movwf	(??_floorf+2)^0,c
  5332  006456  3454               	rlcf	(floorf@u+3)^0,w,c
  5333  006458  6E48               	movwf	(??_floorf+3)^0,c
  5334  00645A  5045               	movf	??_floorf^0,w,c
  5335  00645C  1046               	iorwf	(??_floorf+1)^0,w,c
  5336  00645E  1047               	iorwf	(??_floorf+2)^0,w,c
  5337  006460  1048               	iorwf	(??_floorf+3)^0,w,c
  5338  006462  B4D8               	btfsc	status,2,c
  5339  006464  EF36  F032         	goto	u5291
  5340  006468  EF38  F032         	goto	u5290
  5341  00646C                     u5291:
  5342  00646C  EF40  F032         	goto	l4626
  5343  006470                     u5290:
  5344  006470  0E00               	movlw	0
  5345  006472  6E51               	movwf	floorf@u^0,c
  5346  006474  0E00               	movlw	0
  5347  006476  6E52               	movwf	(floorf@u+1)^0,c
  5348  006478  0E80               	movlw	128
  5349  00647A  6E53               	movwf	(floorf@u+2)^0,c
  5350  00647C  0EBF               	movlw	191
  5351  00647E  6E54               	movwf	(floorf@u+3)^0,c
  5352  006480                     l4626:
  5353  006480  C051  F041         	movff	floorf@u,?_floorf
  5354  006484  C052  F042         	movff	floorf@u+1,?_floorf+1
  5355  006488  C053  F043         	movff	floorf@u+2,?_floorf+2
  5356  00648C  C054  F044         	movff	floorf@u+3,?_floorf+3
  5357  006490                     l1105:
  5358  006490  0012               	return		;funcret
  5359  006492                     __end_of_floorf:
  5360                           	callstack 0
  5361                           
  5362 ;; *************** function ___fpclassifyf *****************
  5363 ;; Defined at:
  5364 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\__fpclassifyf.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;  x               4    0[COMRAM] float 
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;  u               4   10[COMRAM] struct .
  5369 ;;  e               2    8[COMRAM] int 
  5370 ;; Return value:  Size  Location     Type
  5371 ;;                  2    0[COMRAM] int 
  5372 ;; Registers used:
  5373 ;;		wreg, status,2, status,0
  5374 ;; Tracked objects:
  5375 ;;		On entry : 0/0
  5376 ;;		On exit  : 0/0
  5377 ;;		Unchanged: 0/0
  5378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5379 ;;      Params:         4       0       0       0       0       0       0       0       0
  5380 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5381 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5382 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5383 ;;Total ram usage:       14 bytes
  5384 ;; Hardware stack levels used:    1
  5385 ;; This function calls:
  5386 ;;		Nothing
  5387 ;; This function is called by:
  5388 ;;		_efgtoa
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           
  5392                           	psect	text10
  5393  006FD0                     __ptext10:
  5394                           	callstack 0
  5395  006FD0                     ___fpclassifyf:
  5396                           	callstack 26
  5397  006FD0  C208  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5398  006FD4  C209  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5399  006FD8  C20A  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5400  006FDC  C20B  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5401  006FE0  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5402  006FE4  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5403  006FE8  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5404  006FEC  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5405  006FF0  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5406  006FF4  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5407  006FF8  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5408  006FFC  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5409  007000  0E18               	movlw	24
  5410  007002  EF08  F038         	goto	u5080
  5411  007006                     u5085:
  5412  007006  90D8               	bcf	status,0,c
  5413  007008  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5414  00700A  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5415  00700C  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5416  00700E  3205               	rrcf	??___fpclassifyf^0,f,c
  5417  007010                     u5080:
  5418  007010  2EE8               	decfsz	wreg,f,c
  5419  007012  EF03  F038         	goto	u5085
  5420  007016  5005               	movf	??___fpclassifyf^0,w,c
  5421  007018  6E09               	movwf	___fpclassifyf@e^0,c
  5422  00701A  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5423  00701C  5009               	movf	___fpclassifyf@e^0,w,c
  5424  00701E  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5425  007020  A4D8               	btfss	status,2,c
  5426  007022  EF15  F038         	goto	u5091
  5427  007026  EF17  F038         	goto	u5090
  5428  00702A                     u5091:
  5429  00702A  EF37  F038         	goto	l4578
  5430  00702E                     u5090:
  5431  00702E  90D8               	bcf	status,0,c
  5432  007030  340B               	rlcf	___fpclassifyf@u^0,w,c
  5433  007032  6E05               	movwf	??___fpclassifyf^0,c
  5434  007034  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5435  007036  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5436  007038  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5437  00703A  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5438  00703C  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5439  00703E  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5440  007040  5005               	movf	??___fpclassifyf^0,w,c
  5441  007042  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5442  007044  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5443  007046  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5444  007048  A4D8               	btfss	status,2,c
  5445  00704A  EF29  F038         	goto	u5101
  5446  00704E  EF2B  F038         	goto	u5100
  5447  007052                     u5101:
  5448  007052  EF31  F038         	goto	l4574
  5449  007056                     u5100:
  5450  007056  0E00               	movlw	0
  5451  007058  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5452  00705A  0E02               	movlw	2
  5453  00705C  6E01               	movwf	?___fpclassifyf^0,c
  5454  00705E  EF66  F038         	goto	l1060
  5455  007062                     l4574:
  5456  007062  0E00               	movlw	0
  5457  007064  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5458  007066  0E03               	movlw	3
  5459  007068  6E01               	movwf	?___fpclassifyf^0,c
  5460  00706A  EF66  F038         	goto	l1060
  5461  00706E                     l4578:
  5462  00706E  2809               	incf	___fpclassifyf@e^0,w,c
  5463  007070  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5464  007072  A4D8               	btfss	status,2,c
  5465  007074  EF3E  F038         	goto	u5111
  5466  007078  EF40  F038         	goto	u5110
  5467  00707C                     u5111:
  5468  00707C  EF62  F038         	goto	l4584
  5469  007080                     u5110:
  5470  007080  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5471  007084  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5472  007088  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5473  00708C  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5474  007090  0E09               	movlw	9
  5475  007092                     u5125:
  5476  007092  90D8               	bcf	status,0,c
  5477  007094  3605               	rlcf	??___fpclassifyf^0,f,c
  5478  007096  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5479  007098  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5480  00709A  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5481  00709C  2EE8               	decfsz	wreg,f,c
  5482  00709E  EF49  F038         	goto	u5125
  5483  0070A2  5005               	movf	??___fpclassifyf^0,w,c
  5484  0070A4  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5485  0070A6  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5486  0070A8  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5487  0070AA  B4D8               	btfsc	status,2,c
  5488  0070AC  EF5A  F038         	goto	u5131
  5489  0070B0  EF5D  F038         	goto	u5130
  5490  0070B4                     u5131:
  5491  0070B4  0E01               	movlw	1
  5492  0070B6  EF5E  F038         	goto	u5140
  5493  0070BA                     u5130:
  5494  0070BA  0E00               	movlw	0
  5495  0070BC                     u5140:
  5496  0070BC  6E01               	movwf	?___fpclassifyf^0,c
  5497  0070BE  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5498  0070C0  EF66  F038         	goto	l1060
  5499  0070C4                     l4584:
  5500  0070C4  0E00               	movlw	0
  5501  0070C6  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5502  0070C8  0E04               	movlw	4
  5503  0070CA  6E01               	movwf	?___fpclassifyf^0,c
  5504  0070CC                     l1060:
  5505  0070CC  0012               	return		;funcret
  5506  0070CE                     __end_of___fpclassifyf:
  5507                           	callstack 0
  5508                           
  5509 ;; *************** function ___fleq *****************
  5510 ;; Defined at:
  5511 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fleq.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;  ff1             4    0[COMRAM] int 
  5514 ;;  ff2             4    4[COMRAM] int 
  5515 ;; Auto vars:     Size  Location     Type
  5516 ;;		None
  5517 ;; Return value:  Size  Location     Type
  5518 ;;		None               void
  5519 ;; Registers used:
  5520 ;;		wreg, status,2, status,0
  5521 ;; Tracked objects:
  5522 ;;		On entry : 0/0
  5523 ;;		On exit  : 0/0
  5524 ;;		Unchanged: 0/0
  5525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5526 ;;      Params:         8       0       0       0       0       0       0       0       0
  5527 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5528 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5529 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5530 ;;Total ram usage:       12 bytes
  5531 ;; Hardware stack levels used:    1
  5532 ;; This function calls:
  5533 ;;		Nothing
  5534 ;; This function is called by:
  5535 ;;		_efgtoa
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           	psect	text11
  5540  007584                     __ptext11:
  5541                           	callstack 0
  5542  007584                     ___fleq:
  5543                           	callstack 26
  5544  007584  0E00               	movlw	0
  5545  007586  1401               	andwf	___fleq@ff1^0,w,c
  5546  007588  6E09               	movwf	??___fleq^0,c
  5547  00758A  0E00               	movlw	0
  5548  00758C  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5549  00758E  6E0A               	movwf	(??___fleq+1)^0,c
  5550  007590  0E80               	movlw	128
  5551  007592  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5552  007594  6E0B               	movwf	(??___fleq+2)^0,c
  5553  007596  0E7F               	movlw	127
  5554  007598  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5555  00759A  6E0C               	movwf	(??___fleq+3)^0,c
  5556  00759C  5009               	movf	??___fleq^0,w,c
  5557  00759E  100A               	iorwf	(??___fleq+1)^0,w,c
  5558  0075A0  100B               	iorwf	(??___fleq+2)^0,w,c
  5559  0075A2  100C               	iorwf	(??___fleq+3)^0,w,c
  5560  0075A4  A4D8               	btfss	status,2,c
  5561  0075A6  EFD7  F03A         	goto	u4871
  5562  0075AA  EFD9  F03A         	goto	u4870
  5563  0075AE                     u4871:
  5564  0075AE  EFE1  F03A         	goto	l4454
  5565  0075B2                     u4870:
  5566  0075B2  0E00               	movlw	0
  5567  0075B4  6E01               	movwf	___fleq@ff1^0,c
  5568  0075B6  0E00               	movlw	0
  5569  0075B8  6E02               	movwf	(___fleq@ff1+1)^0,c
  5570  0075BA  0E00               	movlw	0
  5571  0075BC  6E03               	movwf	(___fleq@ff1+2)^0,c
  5572  0075BE  0E00               	movlw	0
  5573  0075C0  6E04               	movwf	(___fleq@ff1+3)^0,c
  5574  0075C2                     l4454:
  5575  0075C2  0E00               	movlw	0
  5576  0075C4  1405               	andwf	___fleq@ff2^0,w,c
  5577  0075C6  6E09               	movwf	??___fleq^0,c
  5578  0075C8  0E00               	movlw	0
  5579  0075CA  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5580  0075CC  6E0A               	movwf	(??___fleq+1)^0,c
  5581  0075CE  0E80               	movlw	128
  5582  0075D0  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5583  0075D2  6E0B               	movwf	(??___fleq+2)^0,c
  5584  0075D4  0E7F               	movlw	127
  5585  0075D6  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5586  0075D8  6E0C               	movwf	(??___fleq+3)^0,c
  5587  0075DA  5009               	movf	??___fleq^0,w,c
  5588  0075DC  100A               	iorwf	(??___fleq+1)^0,w,c
  5589  0075DE  100B               	iorwf	(??___fleq+2)^0,w,c
  5590  0075E0  100C               	iorwf	(??___fleq+3)^0,w,c
  5591  0075E2  A4D8               	btfss	status,2,c
  5592  0075E4  EFF6  F03A         	goto	u4881
  5593  0075E8  EFF8  F03A         	goto	u4880
  5594  0075EC                     u4881:
  5595  0075EC  EF00  F03B         	goto	l4458
  5596  0075F0                     u4880:
  5597  0075F0  0E00               	movlw	0
  5598  0075F2  6E05               	movwf	___fleq@ff2^0,c
  5599  0075F4  0E00               	movlw	0
  5600  0075F6  6E06               	movwf	(___fleq@ff2+1)^0,c
  5601  0075F8  0E00               	movlw	0
  5602  0075FA  6E07               	movwf	(___fleq@ff2+2)^0,c
  5603  0075FC  0E00               	movlw	0
  5604  0075FE  6E08               	movwf	(___fleq@ff2+3)^0,c
  5605  007600                     l4458:
  5606  007600  5005               	movf	___fleq@ff2^0,w,c
  5607  007602  1801               	xorwf	___fleq@ff1^0,w,c
  5608  007604  E10F               	bnz	u4890
  5609  007606  5006               	movf	(___fleq@ff2+1)^0,w,c
  5610  007608  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5611  00760A  E10C               	bnz	u4890
  5612  00760C  5007               	movf	(___fleq@ff2+2)^0,w,c
  5613  00760E  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5614  007610  E109               	bnz	u4890
  5615  007612  5008               	movf	(___fleq@ff2+3)^0,w,c
  5616  007614  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5617  007616  B4D8               	btfsc	status,2,c
  5618  007618  EF10  F03B         	goto	u4891
  5619  00761C  EF12  F03B         	goto	u4890
  5620  007620                     u4891:
  5621  007620  EF15  F03B         	goto	l4462
  5622  007624                     u4890:
  5623  007624  90D8               	bcf	status,0,c
  5624  007626  EF16  F03B         	goto	l400
  5625  00762A                     l4462:
  5626  00762A  80D8               	bsf	status,0,c
  5627  00762C                     l400:
  5628  00762C  0012               	return		;funcret
  5629  00762E                     __end_of___fleq:
  5630                           	callstack 0
  5631                           
  5632 ;; *************** function ___awmod *****************
  5633 ;; Defined at:
  5634 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;  dividend        2    0[COMRAM] int 
  5637 ;;  divisor         2    2[COMRAM] int 
  5638 ;; Auto vars:     Size  Location     Type
  5639 ;;  sign            1    5[COMRAM] unsigned char 
  5640 ;;  counter         1    4[COMRAM] unsigned char 
  5641 ;; Return value:  Size  Location     Type
  5642 ;;                  2    0[COMRAM] int 
  5643 ;; Registers used:
  5644 ;;		wreg, status,2, status,0
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5650 ;;      Params:         4       0       0       0       0       0       0       0       0
  5651 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5652 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5653 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5654 ;;Total ram usage:        6 bytes
  5655 ;; Hardware stack levels used:    1
  5656 ;; This function calls:
  5657 ;;		Nothing
  5658 ;; This function is called by:
  5659 ;;		_efgtoa
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           	psect	text12
  5664  0074D4                     __ptext12:
  5665                           	callstack 0
  5666  0074D4                     ___awmod:
  5667                           	callstack 26
  5668  0074D4  0E00               	movlw	0
  5669  0074D6  6E06               	movwf	___awmod@sign^0,c
  5670  0074D8  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  5671  0074DA  EF73  F03A         	goto	u4810
  5672  0074DE  EF71  F03A         	goto	u4811
  5673  0074E2                     u4811:
  5674  0074E2  EF79  F03A         	goto	l4422
  5675  0074E6                     u4810:
  5676  0074E6  6C01               	negf	___awmod@dividend^0,c
  5677  0074E8  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5678  0074EA  B0D8               	btfsc	status,0,c
  5679  0074EC  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5680  0074EE  0E01               	movlw	1
  5681  0074F0  6E06               	movwf	___awmod@sign^0,c
  5682  0074F2                     l4422:
  5683  0074F2  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  5684  0074F4  EF80  F03A         	goto	u4820
  5685  0074F8  EF7E  F03A         	goto	u4821
  5686  0074FC                     u4821:
  5687  0074FC  EF84  F03A         	goto	l4426
  5688  007500                     u4820:
  5689  007500  6C03               	negf	___awmod@divisor^0,c
  5690  007502  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5691  007504  B0D8               	btfsc	status,0,c
  5692  007506  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5693  007508                     l4426:
  5694  007508  5003               	movf	___awmod@divisor^0,w,c
  5695  00750A  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5696  00750C  B4D8               	btfsc	status,2,c
  5697  00750E  EF8B  F03A         	goto	u4831
  5698  007512  EF8D  F03A         	goto	u4830
  5699  007516                     u4831:
  5700  007516  EFB1  F03A         	goto	l4442
  5701  00751A                     u4830:
  5702  00751A  0E01               	movlw	1
  5703  00751C  6E05               	movwf	___awmod@counter^0,c
  5704  00751E  EF95  F03A         	goto	l4432
  5705  007522                     l4430:
  5706  007522  90D8               	bcf	status,0,c
  5707  007524  3603               	rlcf	___awmod@divisor^0,f,c
  5708  007526  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5709  007528  2A05               	incf	___awmod@counter^0,f,c
  5710  00752A                     l4432:
  5711  00752A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5712  00752C  EF9A  F03A         	goto	u4841
  5713  007530  EF9C  F03A         	goto	u4840
  5714  007534                     u4841:
  5715  007534  EF91  F03A         	goto	l4430
  5716  007538                     u4840:
  5717  007538                     l4434:
  5718  007538  5003               	movf	___awmod@divisor^0,w,c
  5719  00753A  5C01               	subwf	___awmod@dividend^0,w,c
  5720  00753C  5004               	movf	(___awmod@divisor+1)^0,w,c
  5721  00753E  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5722  007540  A0D8               	btfss	status,0,c
  5723  007542  EFA5  F03A         	goto	u4851
  5724  007546  EFA7  F03A         	goto	u4850
  5725  00754A                     u4851:
  5726  00754A  EFAB  F03A         	goto	l4438
  5727  00754E                     u4850:
  5728  00754E  5003               	movf	___awmod@divisor^0,w,c
  5729  007550  5E01               	subwf	___awmod@dividend^0,f,c
  5730  007552  5004               	movf	(___awmod@divisor+1)^0,w,c
  5731  007554  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5732  007556                     l4438:
  5733  007556  90D8               	bcf	status,0,c
  5734  007558  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5735  00755A  3203               	rrcf	___awmod@divisor^0,f,c
  5736  00755C  2E05               	decfsz	___awmod@counter^0,f,c
  5737  00755E  EF9C  F03A         	goto	l4434
  5738  007562                     l4442:
  5739  007562  5006               	movf	___awmod@sign^0,w,c
  5740  007564  B4D8               	btfsc	status,2,c
  5741  007566  EFB7  F03A         	goto	u4861
  5742  00756A  EFB9  F03A         	goto	u4860
  5743  00756E                     u4861:
  5744  00756E  EFBD  F03A         	goto	l4446
  5745  007572                     u4860:
  5746  007572  6C01               	negf	___awmod@dividend^0,c
  5747  007574  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5748  007576  B0D8               	btfsc	status,0,c
  5749  007578  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5750  00757A                     l4446:
  5751  00757A  C001  F001         	movff	___awmod@dividend,?___awmod
  5752  00757E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5753  007582  0012               	return		;funcret
  5754  007584                     __end_of___awmod:
  5755                           	callstack 0
  5756                           
  5757 ;; *************** function ___awdiv *****************
  5758 ;; Defined at:
  5759 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awdiv.c"
  5760 ;; Parameters:    Size  Location     Type
  5761 ;;  dividend        2    0[COMRAM] int 
  5762 ;;  divisor         2    2[COMRAM] int 
  5763 ;; Auto vars:     Size  Location     Type
  5764 ;;  quotient        2    6[COMRAM] int 
  5765 ;;  sign            1    5[COMRAM] unsigned char 
  5766 ;;  counter         1    4[COMRAM] unsigned char 
  5767 ;; Return value:  Size  Location     Type
  5768 ;;                  2    0[COMRAM] int 
  5769 ;; Registers used:
  5770 ;;		wreg, status,2, status,0
  5771 ;; Tracked objects:
  5772 ;;		On entry : 0/0
  5773 ;;		On exit  : 0/0
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5776 ;;      Params:         4       0       0       0       0       0       0       0       0
  5777 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5778 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5779 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5780 ;;Total ram usage:        8 bytes
  5781 ;; Hardware stack levels used:    1
  5782 ;; This function calls:
  5783 ;;		Nothing
  5784 ;; This function is called by:
  5785 ;;		_efgtoa
  5786 ;; This function uses a non-reentrant model
  5787 ;;
  5788                           
  5789                           	psect	text13
  5790  007410                     __ptext13:
  5791                           	callstack 0
  5792  007410                     ___awdiv:
  5793                           	callstack 26
  5794  007410  0E00               	movlw	0
  5795  007412  6E06               	movwf	___awdiv@sign^0,c
  5796  007414  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  5797  007416  EF11  F03A         	goto	u4750
  5798  00741A  EF0F  F03A         	goto	u4751
  5799  00741E                     u4751:
  5800  00741E  EF17  F03A         	goto	l4378
  5801  007422                     u4750:
  5802  007422  6C03               	negf	___awdiv@divisor^0,c
  5803  007424  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5804  007426  B0D8               	btfsc	status,0,c
  5805  007428  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5806  00742A  0E01               	movlw	1
  5807  00742C  6E06               	movwf	___awdiv@sign^0,c
  5808  00742E                     l4378:
  5809  00742E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  5810  007430  EF1E  F03A         	goto	u4760
  5811  007434  EF1C  F03A         	goto	u4761
  5812  007438                     u4761:
  5813  007438  EF24  F03A         	goto	l4384
  5814  00743C                     u4760:
  5815  00743C  6C01               	negf	___awdiv@dividend^0,c
  5816  00743E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5817  007440  B0D8               	btfsc	status,0,c
  5818  007442  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5819  007444  0E01               	movlw	1
  5820  007446  1A06               	xorwf	___awdiv@sign^0,f,c
  5821  007448                     l4384:
  5822  007448  0E00               	movlw	0
  5823  00744A  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5824  00744C  0E00               	movlw	0
  5825  00744E  6E07               	movwf	___awdiv@quotient^0,c
  5826  007450  5003               	movf	___awdiv@divisor^0,w,c
  5827  007452  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5828  007454  B4D8               	btfsc	status,2,c
  5829  007456  EF2F  F03A         	goto	u4771
  5830  00745A  EF31  F03A         	goto	u4770
  5831  00745E                     u4771:
  5832  00745E  EF59  F03A         	goto	l4406
  5833  007462                     u4770:
  5834  007462  0E01               	movlw	1
  5835  007464  6E05               	movwf	___awdiv@counter^0,c
  5836  007466  EF39  F03A         	goto	l4392
  5837  00746A                     l4390:
  5838  00746A  90D8               	bcf	status,0,c
  5839  00746C  3603               	rlcf	___awdiv@divisor^0,f,c
  5840  00746E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5841  007470  2A05               	incf	___awdiv@counter^0,f,c
  5842  007472                     l4392:
  5843  007472  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5844  007474  EF3E  F03A         	goto	u4781
  5845  007478  EF40  F03A         	goto	u4780
  5846  00747C                     u4781:
  5847  00747C  EF35  F03A         	goto	l4390
  5848  007480                     u4780:
  5849  007480                     l4394:
  5850  007480  90D8               	bcf	status,0,c
  5851  007482  3607               	rlcf	___awdiv@quotient^0,f,c
  5852  007484  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5853  007486  5003               	movf	___awdiv@divisor^0,w,c
  5854  007488  5C01               	subwf	___awdiv@dividend^0,w,c
  5855  00748A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5856  00748C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5857  00748E  A0D8               	btfss	status,0,c
  5858  007490  EF4C  F03A         	goto	u4791
  5859  007494  EF4E  F03A         	goto	u4790
  5860  007498                     u4791:
  5861  007498  EF53  F03A         	goto	l4402
  5862  00749C                     u4790:
  5863  00749C  5003               	movf	___awdiv@divisor^0,w,c
  5864  00749E  5E01               	subwf	___awdiv@dividend^0,f,c
  5865  0074A0  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5866  0074A2  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5867  0074A4  8007               	bsf	___awdiv@quotient^0,0,c
  5868  0074A6                     l4402:
  5869  0074A6  90D8               	bcf	status,0,c
  5870  0074A8  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5871  0074AA  3203               	rrcf	___awdiv@divisor^0,f,c
  5872  0074AC  2E05               	decfsz	___awdiv@counter^0,f,c
  5873  0074AE  EF40  F03A         	goto	l4394
  5874  0074B2                     l4406:
  5875  0074B2  5006               	movf	___awdiv@sign^0,w,c
  5876  0074B4  B4D8               	btfsc	status,2,c
  5877  0074B6  EF5F  F03A         	goto	u4801
  5878  0074BA  EF61  F03A         	goto	u4800
  5879  0074BE                     u4801:
  5880  0074BE  EF65  F03A         	goto	l4410
  5881  0074C2                     u4800:
  5882  0074C2  6C07               	negf	___awdiv@quotient^0,c
  5883  0074C4  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5884  0074C6  B0D8               	btfsc	status,0,c
  5885  0074C8  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5886  0074CA                     l4410:
  5887  0074CA  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5888  0074CE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5889  0074D2  0012               	return		;funcret
  5890  0074D4                     __end_of___awdiv:
  5891                           	callstack 0
  5892                           
  5893 ;; *************** function _dtoa *****************
  5894 ;; Defined at:
  5895 ;;		line 287 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  5896 ;; Parameters:    Size  Location     Type
  5897 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5898 ;;		 -> sprintf@f(6), 
  5899 ;;  d               8   29[COMRAM] long long 
  5900 ;; Auto vars:     Size  Location     Type
  5901 ;;  n               8   53[COMRAM] long long 
  5902 ;;  i               2   61[COMRAM] int 
  5903 ;;  s               2   51[COMRAM] int 
  5904 ;;  w               2   49[COMRAM] int 
  5905 ;;  p               2   47[COMRAM] int 
  5906 ;; Return value:  Size  Location     Type
  5907 ;;                  2   27[COMRAM] int 
  5908 ;; Registers used:
  5909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5910 ;; Tracked objects:
  5911 ;;		On entry : 0/0
  5912 ;;		On exit  : 0/0
  5913 ;;		Unchanged: 0/0
  5914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5915 ;;      Params:        10       0       0       0       0       0       0       0       0
  5916 ;;      Locals:        18       0       0       0       0       0       0       0       0
  5917 ;;      Temps:          8       0       0       0       0       0       0       0       0
  5918 ;;      Totals:        36       0       0       0       0       0       0       0       0
  5919 ;;Total ram usage:       36 bytes
  5920 ;; Hardware stack levels used:    1
  5921 ;; Hardware stack levels required when called:    4
  5922 ;; This function calls:
  5923 ;;		___aodiv
  5924 ;;		___aomod
  5925 ;;		_abs
  5926 ;;		_pad
  5927 ;; This function is called by:
  5928 ;;		_vfpfcnvrt
  5929 ;; This function uses a non-reentrant model
  5930 ;;
  5931                           
  5932                           	psect	text14
  5933  005D68                     __ptext14:
  5934                           	callstack 0
  5935  005D68                     _dtoa:
  5936                           	callstack 23
  5937  005D68                     
  5938                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  5939  005D68  C01E  F036         	movff	dtoa@d,dtoa@n
  5940  005D6C  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  5941  005D70  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  5942  005D74  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  5943  005D78  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  5944  005D7C  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  5945  005D80  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  5946  005D84  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  5947  005D88                     
  5948                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5949  005D88  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  5950  005D8A  EFC9  F02E         	goto	u5361
  5951  005D8E  EFCC  F02E         	goto	u5360
  5952  005D92                     u5361:
  5953  005D92  0E01               	movlw	1
  5954  005D94  EFCD  F02E         	goto	u5370
  5955  005D98                     u5360:
  5956  005D98  0E00               	movlw	0
  5957  005D9A                     u5370:
  5958  005D9A  6E34               	movwf	dtoa@s^0,c
  5959  005D9C  6A35               	clrf	(dtoa@s+1)^0,c
  5960                           
  5961                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5962  005D9E  5034               	movf	dtoa@s^0,w,c
  5963  005DA0  1035               	iorwf	(dtoa@s+1)^0,w,c
  5964  005DA2  B4D8               	btfsc	status,2,c
  5965  005DA4  EFD6  F02E         	goto	u5381
  5966  005DA8  EFD8  F02E         	goto	u5380
  5967  005DAC                     u5381:
  5968  005DAC  EFE8  F02E         	goto	l4668
  5969  005DB0                     u5380:
  5970  005DB0                     
  5971                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5972  005DB0  1E3D               	comf	(dtoa@n+7)^0,f,c
  5973  005DB2  1E3C               	comf	(dtoa@n+6)^0,f,c
  5974  005DB4  1E3B               	comf	(dtoa@n+5)^0,f,c
  5975  005DB6  1E3A               	comf	(dtoa@n+4)^0,f,c
  5976  005DB8  1E39               	comf	(dtoa@n+3)^0,f,c
  5977  005DBA  1E38               	comf	(dtoa@n+2)^0,f,c
  5978  005DBC  1E37               	comf	(dtoa@n+1)^0,f,c
  5979  005DBE  6C36               	negf	dtoa@n^0,c
  5980  005DC0  0E00               	movlw	0
  5981  005DC2  2237               	addwfc	(dtoa@n+1)^0,f,c
  5982  005DC4  2238               	addwfc	(dtoa@n+2)^0,f,c
  5983  005DC6  2239               	addwfc	(dtoa@n+3)^0,f,c
  5984  005DC8  223A               	addwfc	(dtoa@n+4)^0,f,c
  5985  005DCA  223B               	addwfc	(dtoa@n+5)^0,f,c
  5986  005DCC  223C               	addwfc	(dtoa@n+6)^0,f,c
  5987  005DCE  223D               	addwfc	(dtoa@n+7)^0,f,c
  5988  005DD0                     l4668:
  5989                           
  5990                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5991  005DD0  0100               	movlb	0	; () banked
  5992  005DD2  BFFC               	btfsc	(_prec+1)& (0+255),7,b
  5993  005DD4  EFEE  F02E         	goto	u5391
  5994  005DD8  EFF0  F02E         	goto	u5390
  5995  005DDC                     u5391:
  5996  005DDC  EFF1  F02E         	goto	l4672
  5997  005DE0                     u5390:
  5998  005DE0                     
  5999                           ; BSR set to: 0
  6000                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  6001  005DE0  93FD               	bcf	_flags& (0+255),1,b
  6002  005DE2                     l4672:
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  6006  005DE2  BFFC               	btfsc	(_prec+1)& (0+255),7,b
  6007  005DE4  EFFE  F02E         	goto	u5400
  6008  005DE8  51FC               	movf	(_prec+1)& (0+255),w,b
  6009  005DEA  E106               	bnz	u5401
  6010  005DEC  05FB               	decf	_prec& (0+255),w,b
  6011  005DEE  B0D8               	btfsc	status,0,c
  6012  005DF0  EFFC  F02E         	goto	u5401
  6013  005DF4  EFFE  F02E         	goto	u5400
  6014  005DF8                     u5401:
  6015  005DF8  EF04  F02F         	goto	l903
  6016  005DFC                     u5400:
  6017  005DFC                     
  6018                           ; BSR set to: 0
  6019  005DFC  0E00               	movlw	0
  6020  005DFE  6E31               	movwf	(dtoa@p+1)^0,c
  6021  005E00  0E01               	movlw	1
  6022  005E02  6E30               	movwf	dtoa@p^0,c
  6023  005E04  EF08  F02F         	goto	l905
  6024  005E08                     l903:
  6025                           
  6026                           ; BSR set to: 0
  6027  005E08  C0FB  F030         	movff	_prec,dtoa@p
  6028  005E0C  C0FC  F031         	movff	_prec+1,dtoa@p+1
  6029  005E10                     l905:
  6030                           
  6031                           ; BSR set to: 0
  6032                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  6033  005E10  C1FE  F032         	movff	_width,dtoa@w
  6034  005E14  C1FF  F033         	movff	_width+1,dtoa@w+1
  6035  005E18                     
  6036                           ; BSR set to: 0
  6037                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  6038  005E18  5034               	movf	dtoa@s^0,w,c
  6039  005E1A  1035               	iorwf	(dtoa@s+1)^0,w,c
  6040  005E1C  A4D8               	btfss	status,2,c
  6041  005E1E  EF13  F02F         	goto	u5411
  6042  005E22  EF15  F02F         	goto	u5410
  6043  005E26                     u5411:
  6044  005E26  EF1C  F02F         	goto	l4680
  6045  005E2A                     u5410:
  6046  005E2A                     
  6047                           ; BSR set to: 0
  6048  005E2A  A5FD               	btfss	_flags& (0+255),2,b
  6049  005E2C  EF1A  F02F         	goto	u5421
  6050  005E30  EF1C  F02F         	goto	u5420
  6051  005E34                     u5421:
  6052  005E34  EF1F  F02F         	goto	l4682
  6053  005E38                     u5420:
  6054  005E38                     l4680:
  6055                           
  6056                           ; BSR set to: 0
  6057                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  6058  005E38  0632               	decf	dtoa@w^0,f,c
  6059  005E3A  A0D8               	btfss	status,0,c
  6060  005E3C  0633               	decf	(dtoa@w+1)^0,f,c
  6061  005E3E                     l4682:
  6062                           
  6063                           ; BSR set to: 0
  6064                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  6065  005E3E  0E00               	movlw	0
  6066  005E40  6E3F               	movwf	(dtoa@i+1)^0,c
  6067  005E42  0E4F               	movlw	79
  6068  005E44  6E3E               	movwf	dtoa@i^0,c
  6069  005E46                     
  6070                           ; BSR set to: 0
  6071                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  6072  005E46  0E00               	movlw	0
  6073  005E48  0102               	movlb	2	; () banked
  6074  005E4A  6F61               	movwf	(_dbuf+79)& (0+255),b
  6075                           
  6076                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6077  005E4C  EFA4  F02F         	goto	l4696
  6078  005E50                     l4686:
  6079                           
  6080                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  6081  005E50  063E               	decf	dtoa@i^0,f,c
  6082  005E52  A0D8               	btfss	status,0,c
  6083  005E54  063F               	decf	(dtoa@i+1)^0,f,c
  6084  005E56                     
  6085                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6086  005E56  0E12               	movlw	low _dbuf
  6087  005E58  243E               	addwf	dtoa@i^0,w,c
  6088  005E5A  6ED9               	movwf	fsr2l,c
  6089  005E5C  0E02               	movlw	high _dbuf
  6090  005E5E  203F               	addwfc	(dtoa@i+1)^0,w,c
  6091  005E60  6EDA               	movwf	fsr2h,c
  6092  005E62  C036  F001         	movff	dtoa@n,___aomod@dividend
  6093  005E66  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  6094  005E6A  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  6095  005E6E  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  6096  005E72  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  6097  005E76  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  6098  005E7A  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  6099  005E7E  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  6100  005E82  0E0A               	movlw	10
  6101  005E84  6E09               	movwf	___aomod@divisor^0,c
  6102  005E86  0E00               	movlw	0
  6103  005E88  6E0A               	movwf	(___aomod@divisor+1)^0,c
  6104  005E8A  0E00               	movlw	0
  6105  005E8C  6E0B               	movwf	(___aomod@divisor+2)^0,c
  6106  005E8E  0E00               	movlw	0
  6107  005E90  6E0C               	movwf	(___aomod@divisor+3)^0,c
  6108  005E92  0E00               	movlw	0
  6109  005E94  6E0D               	movwf	(___aomod@divisor+4)^0,c
  6110  005E96  0E00               	movlw	0
  6111  005E98  6E0E               	movwf	(___aomod@divisor+5)^0,c
  6112  005E9A  0E00               	movlw	0
  6113  005E9C  6E0F               	movwf	(___aomod@divisor+6)^0,c
  6114  005E9E  0E00               	movlw	0
  6115  005EA0  6E10               	movwf	(___aomod@divisor+7)^0,c
  6116  005EA2  ECA4  F035         	call	___aomod	;wreg free
  6117  005EA6  C001  F026         	movff	?___aomod,??_dtoa
  6118  005EAA  C002  F027         	movff	?___aomod+1,??_dtoa+1
  6119  005EAE  C003  F028         	movff	?___aomod+2,??_dtoa+2
  6120  005EB2  C004  F029         	movff	?___aomod+3,??_dtoa+3
  6121  005EB6  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  6122  005EBA  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  6123  005EBE  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  6124  005EC2  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  6125  005EC6  C026  F013         	movff	??_dtoa,abs@a
  6126  005ECA  C028  F014         	movff	??_dtoa+2,abs@a+1
  6127  005ECE  EC59  F03D         	call	_abs	;wreg free
  6128  005ED2  5013               	movf	?_abs^0,w,c
  6129  005ED4  0F30               	addlw	48
  6130  005ED6  6EDF               	movwf	indf2,c
  6131  005ED8                     
  6132                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  6133  005ED8  0630               	decf	dtoa@p^0,f,c
  6134  005EDA  A0D8               	btfss	status,0,c
  6135  005EDC  0631               	decf	(dtoa@p+1)^0,f,c
  6136  005EDE                     
  6137                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  6138  005EDE  0632               	decf	dtoa@w^0,f,c
  6139  005EE0  A0D8               	btfss	status,0,c
  6140  005EE2  0633               	decf	(dtoa@w+1)^0,f,c
  6141  005EE4                     
  6142                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  6143  005EE4  C036  F001         	movff	dtoa@n,___aodiv@dividend
  6144  005EE8  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  6145  005EEC  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  6146  005EF0  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  6147  005EF4  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  6148  005EF8  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  6149  005EFC  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  6150  005F00  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  6151  005F04  0E0A               	movlw	10
  6152  005F06  6E09               	movwf	___aodiv@divisor^0,c
  6153  005F08  0E00               	movlw	0
  6154  005F0A  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  6155  005F0C  0E00               	movlw	0
  6156  005F0E  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  6157  005F10  0E00               	movlw	0
  6158  005F12  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  6159  005F14  0E00               	movlw	0
  6160  005F16  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  6161  005F18  0E00               	movlw	0
  6162  005F1A  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  6163  005F1C  0E00               	movlw	0
  6164  005F1E  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  6165  005F20  0E00               	movlw	0
  6166  005F22  6E10               	movwf	(___aodiv@divisor+7)^0,c
  6167  005F24  ECE0  F034         	call	___aodiv	;wreg free
  6168  005F28  C001  F036         	movff	?___aodiv,dtoa@n
  6169  005F2C  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  6170  005F30  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  6171  005F34  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  6172  005F38  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  6173  005F3C  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  6174  005F40  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  6175  005F44  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  6176  005F48                     l4696:
  6177                           
  6178                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6179  005F48  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  6180  005F4A  EFAF  F02F         	goto	u5431
  6181  005F4E  503F               	movf	(dtoa@i+1)^0,w,c
  6182  005F50  E108               	bnz	u5430
  6183  005F52  043E               	decf	dtoa@i^0,w,c
  6184  005F54  A0D8               	btfss	status,0,c
  6185  005F56  EFAF  F02F         	goto	u5431
  6186  005F5A  EFB1  F02F         	goto	u5430
  6187  005F5E                     u5431:
  6188  005F5E  EFE2  F02F         	goto	l4706
  6189  005F62                     u5430:
  6190  005F62  5036               	movf	dtoa@n^0,w,c
  6191  005F64  1037               	iorwf	(dtoa@n+1)^0,w,c
  6192  005F66  1038               	iorwf	(dtoa@n+2)^0,w,c
  6193  005F68  1039               	iorwf	(dtoa@n+3)^0,w,c
  6194  005F6A  103A               	iorwf	(dtoa@n+4)^0,w,c
  6195  005F6C  103B               	iorwf	(dtoa@n+5)^0,w,c
  6196  005F6E  103C               	iorwf	(dtoa@n+6)^0,w,c
  6197  005F70  103D               	iorwf	(dtoa@n+7)^0,w,c
  6198  005F72  A4D8               	btfss	status,2,c
  6199  005F74  EFBE  F02F         	goto	u5441
  6200  005F78  EFC0  F02F         	goto	u5440
  6201  005F7C                     u5441:
  6202  005F7C  EF28  F02F         	goto	l4686
  6203  005F80                     u5440:
  6204  005F80  BE31               	btfsc	(dtoa@p+1)^0,7,c
  6205  005F82  EFCD  F02F         	goto	u5450
  6206  005F86  5031               	movf	(dtoa@p+1)^0,w,c
  6207  005F88  E106               	bnz	u5451
  6208  005F8A  0430               	decf	dtoa@p^0,w,c
  6209  005F8C  B0D8               	btfsc	status,0,c
  6210  005F8E  EFCB  F02F         	goto	u5451
  6211  005F92  EFCD  F02F         	goto	u5450
  6212  005F96                     u5451:
  6213  005F96  EF28  F02F         	goto	l4686
  6214  005F9A                     u5450:
  6215  005F9A  BE33               	btfsc	(dtoa@w+1)^0,7,c
  6216  005F9C  EFD8  F02F         	goto	u5461
  6217  005FA0  5033               	movf	(dtoa@w+1)^0,w,c
  6218  005FA2  E108               	bnz	u5460
  6219  005FA4  0432               	decf	dtoa@w^0,w,c
  6220  005FA6  A0D8               	btfss	status,0,c
  6221  005FA8  EFD8  F02F         	goto	u5461
  6222  005FAC  EFDA  F02F         	goto	u5460
  6223  005FB0                     u5461:
  6224  005FB0  EFE2  F02F         	goto	l4706
  6225  005FB4                     u5460:
  6226  005FB4  0100               	movlb	0	; () banked
  6227  005FB6  B3FD               	btfsc	_flags& (0+255),1,b
  6228  005FB8  EFE0  F02F         	goto	u5471
  6229  005FBC  EFE2  F02F         	goto	u5470
  6230  005FC0                     u5471:
  6231  005FC0  EF28  F02F         	goto	l4686
  6232  005FC4                     u5470:
  6233  005FC4                     l4706:
  6234                           
  6235                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  6236  005FC4  5034               	movf	dtoa@s^0,w,c
  6237  005FC6  1035               	iorwf	(dtoa@s+1)^0,w,c
  6238  005FC8  A4D8               	btfss	status,2,c
  6239  005FCA  EFE9  F02F         	goto	u5481
  6240  005FCE  EFEB  F02F         	goto	u5480
  6241  005FD2                     u5481:
  6242  005FD2  EFF3  F02F         	goto	l4710
  6243  005FD6                     u5480:
  6244  005FD6  0100               	movlb	0	; () banked
  6245  005FD8  A5FD               	btfss	_flags& (0+255),2,b
  6246  005FDA  EFF1  F02F         	goto	u5491
  6247  005FDE  EFF3  F02F         	goto	u5490
  6248  005FE2                     u5491:
  6249  005FE2  EF11  F030         	goto	l4720
  6250  005FE6                     u5490:
  6251  005FE6                     l4710:
  6252                           
  6253                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  6254  005FE6  063E               	decf	dtoa@i^0,f,c
  6255  005FE8  A0D8               	btfss	status,0,c
  6256  005FEA  063F               	decf	(dtoa@i+1)^0,f,c
  6257  005FEC                     
  6258                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  6259  005FEC  5034               	movf	dtoa@s^0,w,c
  6260  005FEE  1035               	iorwf	(dtoa@s+1)^0,w,c
  6261  005FF0  A4D8               	btfss	status,2,c
  6262  005FF2  EFFD  F02F         	goto	u5501
  6263  005FF6  EFFF  F02F         	goto	u5500
  6264  005FFA                     u5501:
  6265  005FFA  EF05  F030         	goto	l4716
  6266  005FFE                     u5500:
  6267  005FFE  0E00               	movlw	0
  6268  006000  6E2F               	movwf	(_dtoa$913+1)^0,c
  6269  006002  0E2B               	movlw	43
  6270  006004  6E2E               	movwf	_dtoa$913^0,c
  6271  006006  EF09  F030         	goto	l4718
  6272  00600A                     l4716:
  6273  00600A  0E00               	movlw	0
  6274  00600C  6E2F               	movwf	(_dtoa$913+1)^0,c
  6275  00600E  0E2D               	movlw	45
  6276  006010  6E2E               	movwf	_dtoa$913^0,c
  6277  006012                     l4718:
  6278  006012  0E12               	movlw	low _dbuf
  6279  006014  243E               	addwf	dtoa@i^0,w,c
  6280  006016  6ED9               	movwf	fsr2l,c
  6281  006018  0E02               	movlw	high _dbuf
  6282  00601A  203F               	addwfc	(dtoa@i+1)^0,w,c
  6283  00601C  6EDA               	movwf	fsr2h,c
  6284  00601E  C02E  FFDF         	movff	_dtoa$913,indf2
  6285  006022                     l4720:
  6286                           
  6287                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6288  006022  C01C  F011         	movff	dtoa@fp,pad@fp
  6289  006026  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6290  00602A  0E12               	movlw	low _dbuf
  6291  00602C  243E               	addwf	dtoa@i^0,w,c
  6292  00602E  6E13               	movwf	pad@buf^0,c
  6293  006030  0E02               	movlw	high _dbuf
  6294  006032  203F               	addwfc	(dtoa@i+1)^0,w,c
  6295  006034  6E14               	movwf	(pad@buf+1)^0,c
  6296  006036  C032  F015         	movff	dtoa@w,pad@p
  6297  00603A  C033  F016         	movff	dtoa@w+1,pad@p+1
  6298  00603E  ECA5  F039         	call	_pad	;wreg free
  6299  006042  C011  F01C         	movff	?_pad,?_dtoa
  6300  006046  C012  F01D         	movff	?_pad+1,?_dtoa+1
  6301  00604A  0012               	return		;funcret
  6302  00604C                     __end_of_dtoa:
  6303                           	callstack 0
  6304                           
  6305 ;; *************** function _pad *****************
  6306 ;; Defined at:
  6307 ;;		line 72 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  6308 ;; Parameters:    Size  Location     Type
  6309 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6310 ;;		 -> sprintf@f(6), 
  6311 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6312 ;;		 -> dbuf(80), 
  6313 ;;  p               2   20[COMRAM] int 
  6314 ;; Auto vars:     Size  Location     Type
  6315 ;;  w               2   25[COMRAM] int 
  6316 ;;  i               2   23[COMRAM] int 
  6317 ;; Return value:  Size  Location     Type
  6318 ;;                  2   16[COMRAM] int 
  6319 ;; Registers used:
  6320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6321 ;; Tracked objects:
  6322 ;;		On entry : 0/0
  6323 ;;		On exit  : 0/0
  6324 ;;		Unchanged: 0/0
  6325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6326 ;;      Params:         6       0       0       0       0       0       0       0       0
  6327 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6328 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6329 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6330 ;;Total ram usage:       11 bytes
  6331 ;; Hardware stack levels used:    1
  6332 ;; Hardware stack levels required when called:    3
  6333 ;; This function calls:
  6334 ;;		_fputc
  6335 ;;		_fputs
  6336 ;;		_strlen
  6337 ;; This function is called by:
  6338 ;;		_dtoa
  6339 ;;		_efgtoa
  6340 ;; This function uses a non-reentrant model
  6341 ;;
  6342                           
  6343                           	psect	text15
  6344  00734A                     __ptext15:
  6345                           	callstack 0
  6346  00734A                     _pad:
  6347                           	callstack 23
  6348  00734A                     
  6349                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6350  00734A  0100               	movlb	0	; () banked
  6351  00734C  A1FD               	btfss	_flags& (0+255),0,b
  6352  00734E  EFAB  F039         	goto	u5031
  6353  007352  EFAD  F039         	goto	u5030
  6354  007356                     u5031:
  6355  007356  EFB7  F039         	goto	l4544
  6356  00735A                     u5030:
  6357  00735A                     
  6358                           ; BSR set to: 0
  6359                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6360  00735A  C013  F00A         	movff	pad@buf,fputs@s
  6361  00735E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6362  007362  C011  F00C         	movff	pad@fp,fputs@fp
  6363  007366  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6364  00736A  EC37  F03D         	call	_fputs	;wreg free
  6365  00736E                     l4544:
  6366                           
  6367                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6368  00736E  BE16               	btfsc	(pad@p+1)^0,7,c
  6369  007370  EFBC  F039         	goto	u5041
  6370  007374  EFBE  F039         	goto	u5040
  6371  007378                     u5041:
  6372  007378  EFC4  F039         	goto	l4548
  6373  00737C                     u5040:
  6374  00737C  C015  F01A         	movff	pad@p,pad@w
  6375  007380  C016  F01B         	movff	pad@p+1,pad@w+1
  6376  007384  EFC8  F039         	goto	l892
  6377  007388                     l4548:
  6378  007388  0E00               	movlw	0
  6379  00738A  6E1B               	movwf	(pad@w+1)^0,c
  6380  00738C  0E00               	movlw	0
  6381  00738E  6E1A               	movwf	pad@w^0,c
  6382  007390                     l892:
  6383                           
  6384                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6385  007390  0E00               	movlw	0
  6386  007392  6E19               	movwf	(pad@i+1)^0,c
  6387  007394  0E00               	movlw	0
  6388  007396  6E18               	movwf	pad@i^0,c
  6389                           
  6390                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6391  007398  EFDA  F039         	goto	l4554
  6392  00739C                     l4550:
  6393                           
  6394                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6395  00739C  0E00               	movlw	0
  6396  00739E  6E02               	movwf	(fputc@c+1)^0,c
  6397  0073A0  0E20               	movlw	32
  6398  0073A2  6E01               	movwf	fputc@c^0,c
  6399  0073A4  C011  F003         	movff	pad@fp,fputc@fp
  6400  0073A8  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6401  0073AC  EC40  F039         	call	_fputc	;wreg free
  6402  0073B0                     
  6403                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6404  0073B0  4A18               	infsnz	pad@i^0,f,c
  6405  0073B2  2A19               	incf	(pad@i+1)^0,f,c
  6406  0073B4                     l4554:
  6407                           
  6408                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6409  0073B4  501A               	movf	pad@w^0,w,c
  6410  0073B6  5C18               	subwf	pad@i^0,w,c
  6411  0073B8  5019               	movf	(pad@i+1)^0,w,c
  6412  0073BA  0A80               	xorlw	128
  6413  0073BC  6E17               	movwf	??_pad^0,c
  6414  0073BE  501B               	movf	(pad@w+1)^0,w,c
  6415  0073C0  0A80               	xorlw	128
  6416  0073C2  5817               	subwfb	??_pad^0,w,c
  6417  0073C4  A0D8               	btfss	status,0,c
  6418  0073C6  EFE7  F039         	goto	u5051
  6419  0073CA  EFE9  F039         	goto	u5050
  6420  0073CE                     u5051:
  6421  0073CE  EFCE  F039         	goto	l4550
  6422  0073D2                     u5050:
  6423  0073D2                     
  6424                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6425  0073D2  0100               	movlb	0	; () banked
  6426  0073D4  B1FD               	btfsc	_flags& (0+255),0,b
  6427  0073D6  EFEF  F039         	goto	u5061
  6428  0073DA  EFF1  F039         	goto	u5060
  6429  0073DE                     u5061:
  6430  0073DE  EFFB  F039         	goto	l4558
  6431  0073E2                     u5060:
  6432  0073E2                     
  6433                           ; BSR set to: 0
  6434                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6435  0073E2  C013  F00A         	movff	pad@buf,fputs@s
  6436  0073E6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6437  0073EA  C011  F00C         	movff	pad@fp,fputs@fp
  6438  0073EE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6439  0073F2  EC37  F03D         	call	_fputs	;wreg free
  6440  0073F6                     l4558:
  6441                           
  6442                           ;D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6443  0073F6  C013  F001         	movff	pad@buf,strlen@s
  6444  0073FA  C014  F002         	movff	pad@buf+1,strlen@s+1
  6445  0073FE  ECED  F03D         	call	_strlen	;wreg free
  6446  007402  501A               	movf	pad@w^0,w,c
  6447  007404  2401               	addwf	?_strlen^0,w,c
  6448  007406  6E11               	movwf	?_pad^0,c
  6449  007408  501B               	movf	(pad@w+1)^0,w,c
  6450  00740A  2002               	addwfc	(?_strlen+1)^0,w,c
  6451  00740C  6E12               	movwf	(?_pad+1)^0,c
  6452  00740E  0012               	return		;funcret
  6453  007410                     __end_of_pad:
  6454                           	callstack 0
  6455                           
  6456 ;; *************** function _strlen *****************
  6457 ;; Defined at:
  6458 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6461 ;;		 -> dbuf(80), 
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6464 ;;		 -> dbuf(80), 
  6465 ;; Return value:  Size  Location     Type
  6466 ;;                  2    0[COMRAM] unsigned int 
  6467 ;; Registers used:
  6468 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6469 ;; Tracked objects:
  6470 ;;		On entry : 0/0
  6471 ;;		On exit  : 0/0
  6472 ;;		Unchanged: 0/0
  6473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6474 ;;      Params:         2       0       0       0       0       0       0       0       0
  6475 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6476 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6477 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6478 ;;Total ram usage:        4 bytes
  6479 ;; Hardware stack levels used:    1
  6480 ;; This function calls:
  6481 ;;		Nothing
  6482 ;; This function is called by:
  6483 ;;		_pad
  6484 ;; This function uses a non-reentrant model
  6485 ;;
  6486                           
  6487                           	psect	text16
  6488  007BDA                     __ptext16:
  6489                           	callstack 0
  6490  007BDA                     _strlen:
  6491                           	callstack 25
  6492  007BDA  C001  F003         	movff	strlen@s,strlen@a
  6493  007BDE  C002  F004         	movff	strlen@s+1,strlen@a+1
  6494  007BE2  EFF5  F03D         	goto	l4000
  6495  007BE6                     l3998:
  6496  007BE6  4A01               	infsnz	strlen@s^0,f,c
  6497  007BE8  2A02               	incf	(strlen@s+1)^0,f,c
  6498  007BEA                     l4000:
  6499  007BEA  C001  FFD9         	movff	strlen@s,fsr2l
  6500  007BEE  C002  FFDA         	movff	strlen@s+1,fsr2h
  6501  007BF2  50DF               	movf	indf2,w,c
  6502  007BF4  A4D8               	btfss	status,2,c
  6503  007BF6  EFFF  F03D         	goto	u4171
  6504  007BFA  EF01  F03E         	goto	u4170
  6505  007BFE                     u4171:
  6506  007BFE  EFF3  F03D         	goto	l3998
  6507  007C02                     u4170:
  6508  007C02  5003               	movf	strlen@a^0,w,c
  6509  007C04  5C01               	subwf	strlen@s^0,w,c
  6510  007C06  6E01               	movwf	?_strlen^0,c
  6511  007C08  5004               	movf	(strlen@a+1)^0,w,c
  6512  007C0A  5802               	subwfb	(strlen@s+1)^0,w,c
  6513  007C0C  6E02               	movwf	(?_strlen+1)^0,c
  6514  007C0E  0012               	return		;funcret
  6515  007C10                     __end_of_strlen:
  6516                           	callstack 0
  6517                           
  6518 ;; *************** function _fputs *****************
  6519 ;; Defined at:
  6520 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  6521 ;; Parameters:    Size  Location     Type
  6522 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6523 ;;		 -> dbuf(80), 
  6524 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6525 ;;		 -> sprintf@f(6), 
  6526 ;; Auto vars:     Size  Location     Type
  6527 ;;  i               2   14[COMRAM] int 
  6528 ;;  c               1   13[COMRAM] unsigned char 
  6529 ;; Return value:  Size  Location     Type
  6530 ;;                  2    9[COMRAM] int 
  6531 ;; Registers used:
  6532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6533 ;; Tracked objects:
  6534 ;;		On entry : 0/0
  6535 ;;		On exit  : 0/0
  6536 ;;		Unchanged: 0/0
  6537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6538 ;;      Params:         4       0       0       0       0       0       0       0       0
  6539 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6540 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6541 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6542 ;;Total ram usage:        7 bytes
  6543 ;; Hardware stack levels used:    1
  6544 ;; Hardware stack levels required when called:    2
  6545 ;; This function calls:
  6546 ;;		_fputc
  6547 ;; This function is called by:
  6548 ;;		_pad
  6549 ;; This function uses a non-reentrant model
  6550 ;;
  6551                           
  6552                           	psect	text17
  6553  007A6E                     __ptext17:
  6554                           	callstack 0
  6555  007A6E                     _fputs:
  6556                           	callstack 23
  6557  007A6E  0E00               	movlw	0
  6558  007A70  6E10               	movwf	(fputs@i+1)^0,c
  6559  007A72  0E00               	movlw	0
  6560  007A74  6E0F               	movwf	fputs@i^0,c
  6561  007A76  EF48  F03D         	goto	l3994
  6562  007A7A                     l3990:
  6563  007A7A  C00E  F001         	movff	fputs@c,fputc@c
  6564  007A7E  6A02               	clrf	(fputc@c+1)^0,c
  6565  007A80  C00C  F003         	movff	fputs@fp,fputc@fp
  6566  007A84  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6567  007A88  EC40  F039         	call	_fputc	;wreg free
  6568  007A8C  4A0F               	infsnz	fputs@i^0,f,c
  6569  007A8E  2A10               	incf	(fputs@i+1)^0,f,c
  6570  007A90                     l3994:
  6571  007A90  500F               	movf	fputs@i^0,w,c
  6572  007A92  240A               	addwf	fputs@s^0,w,c
  6573  007A94  6ED9               	movwf	fsr2l,c
  6574  007A96  5010               	movf	(fputs@i+1)^0,w,c
  6575  007A98  200B               	addwfc	(fputs@s+1)^0,w,c
  6576  007A9A  6EDA               	movwf	fsr2h,c
  6577  007A9C  50DF               	movf	indf2,w,c
  6578  007A9E  6E0E               	movwf	fputs@c^0,c
  6579  007AA0  500E               	movf	fputs@c^0,w,c
  6580  007AA2  A4D8               	btfss	status,2,c
  6581  007AA4  EF56  F03D         	goto	u4161
  6582  007AA8  EF58  F03D         	goto	u4160
  6583  007AAC                     u4161:
  6584  007AAC  EF3D  F03D         	goto	l3990
  6585  007AB0                     u4160:
  6586  007AB0  0012               	return		;funcret
  6587  007AB2                     __end_of_fputs:
  6588                           	callstack 0
  6589                           
  6590 ;; *************** function _fputc *****************
  6591 ;; Defined at:
  6592 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  6593 ;; Parameters:    Size  Location     Type
  6594 ;;  c               2    0[COMRAM] int 
  6595 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6596 ;;		 -> sprintf@f(6), 
  6597 ;; Auto vars:     Size  Location     Type
  6598 ;;		None
  6599 ;; Return value:  Size  Location     Type
  6600 ;;                  2    0[COMRAM] int 
  6601 ;; Registers used:
  6602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6603 ;; Tracked objects:
  6604 ;;		On entry : 0/0
  6605 ;;		On exit  : 0/0
  6606 ;;		Unchanged: 0/0
  6607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6608 ;;      Params:         4       0       0       0       0       0       0       0       0
  6609 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6610 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6611 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6612 ;;Total ram usage:        9 bytes
  6613 ;; Hardware stack levels used:    1
  6614 ;; Hardware stack levels required when called:    1
  6615 ;; This function calls:
  6616 ;;		_putch
  6617 ;; This function is called by:
  6618 ;;		_pad
  6619 ;;		_vfpfcnvrt
  6620 ;;		_fputs
  6621 ;; This function uses a non-reentrant model
  6622 ;;
  6623                           
  6624                           	psect	text18
  6625  007280                     __ptext18:
  6626                           	callstack 0
  6627  007280                     _fputc:
  6628                           	callstack 26
  6629  007280  5003               	movf	fputc@fp^0,w,c
  6630  007282  1004               	iorwf	(fputc@fp+1)^0,w,c
  6631  007284  B4D8               	btfsc	status,2,c
  6632  007286  EF47  F039         	goto	u3731
  6633  00728A  EF49  F039         	goto	u3730
  6634  00728E                     u3731:
  6635  00728E  EF52  F039         	goto	l3776
  6636  007292                     u3730:
  6637  007292  5003               	movf	fputc@fp^0,w,c
  6638  007294  1004               	iorwf	(fputc@fp+1)^0,w,c
  6639  007296  A4D8               	btfss	status,2,c
  6640  007298  EF50  F039         	goto	u3741
  6641  00729C  EF52  F039         	goto	u3740
  6642  0072A0                     u3741:
  6643  0072A0  EF57  F039         	goto	l3778
  6644  0072A4                     u3740:
  6645  0072A4                     l3776:
  6646  0072A4  5001               	movf	fputc@c^0,w,c
  6647  0072A6  EC99  F03E         	call	_putch
  6648  0072AA  EFA4  F039         	goto	l1144
  6649  0072AE                     l3778:
  6650  0072AE  EE20 F004          	lfsr	2,4
  6651  0072B2  5003               	movf	fputc@fp^0,w,c
  6652  0072B4  26D9               	addwf	fsr2l,f,c
  6653  0072B6  5004               	movf	(fputc@fp+1)^0,w,c
  6654  0072B8  22DA               	addwfc	fsr2h,f,c
  6655  0072BA  50DE               	movf	postinc2,w,c
  6656  0072BC  10DE               	iorwf	postinc2,w,c
  6657  0072BE  B4D8               	btfsc	status,2,c
  6658  0072C0  EF64  F039         	goto	u3751
  6659  0072C4  EF66  F039         	goto	u3750
  6660  0072C8                     u3751:
  6661  0072C8  EF81  F039         	goto	l3782
  6662  0072CC                     u3750:
  6663  0072CC  EE20 F004          	lfsr	2,4
  6664  0072D0  5003               	movf	fputc@fp^0,w,c
  6665  0072D2  26D9               	addwf	fsr2l,f,c
  6666  0072D4  5004               	movf	(fputc@fp+1)^0,w,c
  6667  0072D6  22DA               	addwfc	fsr2h,f,c
  6668  0072D8  EE10 F002          	lfsr	1,2
  6669  0072DC  5003               	movf	fputc@fp^0,w,c
  6670  0072DE  26E1               	addwf	fsr1l,f,c
  6671  0072E0  5004               	movf	(fputc@fp+1)^0,w,c
  6672  0072E2  22E2               	addwfc	fsr1h,f,c
  6673  0072E4  50DE               	movf	postinc2,w,c
  6674  0072E6  5CE6               	subwf	postinc1,w,c
  6675  0072E8  50E6               	movf	postinc1,w,c
  6676  0072EA  0A80               	xorlw	128
  6677  0072EC  6E09               	movwf	(??_fputc+4)^0,c
  6678  0072EE  50DE               	movf	postinc2,w,c
  6679  0072F0  0A80               	xorlw	128
  6680  0072F2  5809               	subwfb	(??_fputc+4)^0,w,c
  6681  0072F4  B0D8               	btfsc	status,0,c
  6682  0072F6  EF7F  F039         	goto	u3761
  6683  0072FA  EF81  F039         	goto	u3760
  6684  0072FE                     u3761:
  6685  0072FE  EFA4  F039         	goto	l1144
  6686  007302                     u3760:
  6687  007302                     l3782:
  6688  007302  EE20 F002          	lfsr	2,2
  6689  007306  5003               	movf	fputc@fp^0,w,c
  6690  007308  26D9               	addwf	fsr2l,f,c
  6691  00730A  5004               	movf	(fputc@fp+1)^0,w,c
  6692  00730C  22DA               	addwfc	fsr2h,f,c
  6693  00730E  CFDE F005          	movff	postinc2,??_fputc
  6694  007312  CFDD F006          	movff	postdec2,??_fputc+1
  6695  007316  C003  FFD9         	movff	fputc@fp,fsr2l
  6696  00731A  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6697  00731E  CFDE F007          	movff	postinc2,??_fputc+2
  6698  007322  CFDD F008          	movff	postdec2,??_fputc+3
  6699  007326  5005               	movf	??_fputc^0,w,c
  6700  007328  2407               	addwf	(??_fputc+2)^0,w,c
  6701  00732A  6ED9               	movwf	fsr2l,c
  6702  00732C  5006               	movf	(??_fputc+1)^0,w,c
  6703  00732E  2008               	addwfc	(??_fputc+3)^0,w,c
  6704  007330  6EDA               	movwf	fsr2h,c
  6705  007332  C001  FFDF         	movff	fputc@c,indf2
  6706  007336  EE20 F002          	lfsr	2,2
  6707  00733A  5003               	movf	fputc@fp^0,w,c
  6708  00733C  26D9               	addwf	fsr2l,f,c
  6709  00733E  5004               	movf	(fputc@fp+1)^0,w,c
  6710  007340  22DA               	addwfc	fsr2h,f,c
  6711  007342  2ADE               	incf	postinc2,f,c
  6712  007344  0E00               	movlw	0
  6713  007346  22DD               	addwfc	postdec2,f,c
  6714  007348                     l1144:
  6715  007348  0012               	return		;funcret
  6716  00734A                     __end_of_fputc:
  6717                           	callstack 0
  6718                           
  6719 ;; *************** function _putch *****************
  6720 ;; Defined at:
  6721 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  6722 ;; Parameters:    Size  Location     Type
  6723 ;;  c               1    wreg     unsigned char 
  6724 ;; Auto vars:     Size  Location     Type
  6725 ;;  c               1    0[COMRAM] unsigned char 
  6726 ;; Return value:  Size  Location     Type
  6727 ;;                  1    wreg      void 
  6728 ;; Registers used:
  6729 ;;		wreg
  6730 ;; Tracked objects:
  6731 ;;		On entry : 0/0
  6732 ;;		On exit  : 0/0
  6733 ;;		Unchanged: 0/0
  6734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6735 ;;      Params:         0       0       0       0       0       0       0       0       0
  6736 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6737 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6738 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6739 ;;Total ram usage:        0 bytes
  6740 ;; Hardware stack levels used:    1
  6741 ;; This function calls:
  6742 ;;		Nothing
  6743 ;; This function is called by:
  6744 ;;		_fputc
  6745 ;; This function uses a non-reentrant model
  6746 ;;
  6747                           
  6748                           	psect	text19
  6749  007D32                     __ptext19:
  6750                           	callstack 0
  6751  007D32                     _putch:
  6752                           	callstack 26
  6753  007D32  0012               	return		;funcret
  6754  007D34                     __end_of_putch:
  6755                           	callstack 0
  6756                           
  6757 ;; *************** function _abs *****************
  6758 ;; Defined at:
  6759 ;;		line 1 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  6760 ;; Parameters:    Size  Location     Type
  6761 ;;  a               2   18[COMRAM] int 
  6762 ;; Auto vars:     Size  Location     Type
  6763 ;;		None
  6764 ;; Return value:  Size  Location     Type
  6765 ;;                  2   18[COMRAM] int 
  6766 ;; Registers used:
  6767 ;;		wreg, status,2, status,0
  6768 ;; Tracked objects:
  6769 ;;		On entry : 0/0
  6770 ;;		On exit  : 0/0
  6771 ;;		Unchanged: 0/0
  6772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6773 ;;      Params:         2       0       0       0       0       0       0       0       0
  6774 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6775 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6776 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6777 ;;Total ram usage:        4 bytes
  6778 ;; Hardware stack levels used:    1
  6779 ;; This function calls:
  6780 ;;		Nothing
  6781 ;; This function is called by:
  6782 ;;		_dtoa
  6783 ;; This function uses a non-reentrant model
  6784 ;;
  6785                           
  6786                           	psect	text20
  6787  007AB2                     __ptext20:
  6788                           	callstack 0
  6789  007AB2                     _abs:
  6790                           	callstack 26
  6791  007AB2  BE14               	btfsc	(abs@a+1)^0,7,c
  6792  007AB4  EF66  F03D         	goto	u5070
  6793  007AB8  5014               	movf	(abs@a+1)^0,w,c
  6794  007ABA  E106               	bnz	u5071
  6795  007ABC  0413               	decf	abs@a^0,w,c
  6796  007ABE  B0D8               	btfsc	status,0,c
  6797  007AC0  EF64  F03D         	goto	u5071
  6798  007AC4  EF66  F03D         	goto	u5070
  6799  007AC8                     u5071:
  6800  007AC8  EF74  F03D         	goto	l1065
  6801  007ACC                     u5070:
  6802  007ACC  C013  F015         	movff	abs@a,??_abs
  6803  007AD0  C014  F016         	movff	abs@a+1,??_abs+1
  6804  007AD4  1E15               	comf	??_abs^0,f,c
  6805  007AD6  1E16               	comf	(??_abs+1)^0,f,c
  6806  007AD8  4A15               	infsnz	??_abs^0,f,c
  6807  007ADA  2A16               	incf	(??_abs+1)^0,f,c
  6808  007ADC  C015  F013         	movff	??_abs,?_abs
  6809  007AE0  C016  F014         	movff	??_abs+1,?_abs+1
  6810  007AE4  EF78  F03D         	goto	l1068
  6811  007AE8                     l1065:
  6812  007AE8  C013  F013         	movff	abs@a,?_abs
  6813  007AEC  C014  F014         	movff	abs@a+1,?_abs+1
  6814  007AF0                     l1068:
  6815  007AF0  0012               	return		;funcret
  6816  007AF2                     __end_of_abs:
  6817                           	callstack 0
  6818                           
  6819 ;; *************** function ___aomod *****************
  6820 ;; Defined at:
  6821 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  6822 ;; Parameters:    Size  Location     Type
  6823 ;;  dividend        8    0[COMRAM] long long 
  6824 ;;  divisor         8    8[COMRAM] long long 
  6825 ;; Auto vars:     Size  Location     Type
  6826 ;;  sign            1   17[COMRAM] unsigned char 
  6827 ;;  counter         1   16[COMRAM] unsigned char 
  6828 ;; Return value:  Size  Location     Type
  6829 ;;                  8    0[COMRAM] long long 
  6830 ;; Registers used:
  6831 ;;		wreg, status,2, status,0
  6832 ;; Tracked objects:
  6833 ;;		On entry : 0/0
  6834 ;;		On exit  : 0/0
  6835 ;;		Unchanged: 0/0
  6836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6837 ;;      Params:        16       0       0       0       0       0       0       0       0
  6838 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6839 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6840 ;;      Totals:        18       0       0       0       0       0       0       0       0
  6841 ;;Total ram usage:       18 bytes
  6842 ;; Hardware stack levels used:    1
  6843 ;; This function calls:
  6844 ;;		Nothing
  6845 ;; This function is called by:
  6846 ;;		_dtoa
  6847 ;; This function uses a non-reentrant model
  6848 ;;
  6849                           
  6850                           	psect	text21
  6851  006B48                     __ptext21:
  6852                           	callstack 0
  6853  006B48                     ___aomod:
  6854                           	callstack 26
  6855  006B48  0E00               	movlw	0
  6856  006B4A  6E12               	movwf	___aomod@sign^0,c
  6857  006B4C  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6858  006B4E  EFAD  F035         	goto	u4270
  6859  006B52  EFAB  F035         	goto	u4271
  6860  006B56                     u4271:
  6861  006B56  EFBF  F035         	goto	l4068
  6862  006B5A                     u4270:
  6863  006B5A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6864  006B5C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6865  006B5E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6866  006B60  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6867  006B62  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6868  006B64  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6869  006B66  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6870  006B68  6C01               	negf	___aomod@dividend^0,c
  6871  006B6A  0E00               	movlw	0
  6872  006B6C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6873  006B6E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6874  006B70  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6875  006B72  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6876  006B74  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6877  006B76  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6878  006B78  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6879  006B7A  0E01               	movlw	1
  6880  006B7C  6E12               	movwf	___aomod@sign^0,c
  6881  006B7E                     l4068:
  6882  006B7E  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6883  006B80  EFC6  F035         	goto	u4280
  6884  006B84  EFC4  F035         	goto	u4281
  6885  006B88                     u4281:
  6886  006B88  EFD6  F035         	goto	l4072
  6887  006B8C                     u4280:
  6888  006B8C  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6889  006B8E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6890  006B90  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6891  006B92  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6892  006B94  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6893  006B96  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6894  006B98  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6895  006B9A  6C09               	negf	___aomod@divisor^0,c
  6896  006B9C  0E00               	movlw	0
  6897  006B9E  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6898  006BA0  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6899  006BA2  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6900  006BA4  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6901  006BA6  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6902  006BA8  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6903  006BAA  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6904  006BAC                     l4072:
  6905  006BAC  5009               	movf	___aomod@divisor^0,w,c
  6906  006BAE  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6907  006BB0  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6908  006BB2  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6909  006BB4  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6910  006BB6  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6911  006BB8  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6912  006BBA  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6913  006BBC  B4D8               	btfsc	status,2,c
  6914  006BBE  EFE3  F035         	goto	u4291
  6915  006BC2  EFE5  F035         	goto	u4290
  6916  006BC6                     u4291:
  6917  006BC6  EF2D  F036         	goto	l4088
  6918  006BCA                     u4290:
  6919  006BCA  0E01               	movlw	1
  6920  006BCC  6E11               	movwf	___aomod@counter^0,c
  6921  006BCE  EFF3  F035         	goto	l4078
  6922  006BD2                     l4076:
  6923  006BD2  90D8               	bcf	status,0,c
  6924  006BD4  3609               	rlcf	___aomod@divisor^0,f,c
  6925  006BD6  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6926  006BD8  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6927  006BDA  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6928  006BDC  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6929  006BDE  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6930  006BE0  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6931  006BE2  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6932  006BE4  2A11               	incf	___aomod@counter^0,f,c
  6933  006BE6                     l4078:
  6934  006BE6  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6935  006BE8  EFF8  F035         	goto	u4301
  6936  006BEC  EFFA  F035         	goto	u4300
  6937  006BF0                     u4301:
  6938  006BF0  EFE9  F035         	goto	l4076
  6939  006BF4                     u4300:
  6940  006BF4                     l4080:
  6941  006BF4  5009               	movf	___aomod@divisor^0,w,c
  6942  006BF6  5C01               	subwf	___aomod@dividend^0,w,c
  6943  006BF8  500A               	movf	(___aomod@divisor+1)^0,w,c
  6944  006BFA  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6945  006BFC  500B               	movf	(___aomod@divisor+2)^0,w,c
  6946  006BFE  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6947  006C00  500C               	movf	(___aomod@divisor+3)^0,w,c
  6948  006C02  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6949  006C04  500D               	movf	(___aomod@divisor+4)^0,w,c
  6950  006C06  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6951  006C08  500E               	movf	(___aomod@divisor+5)^0,w,c
  6952  006C0A  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6953  006C0C  500F               	movf	(___aomod@divisor+6)^0,w,c
  6954  006C0E  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6955  006C10  5010               	movf	(___aomod@divisor+7)^0,w,c
  6956  006C12  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6957  006C14  A0D8               	btfss	status,0,c
  6958  006C16  EF0F  F036         	goto	u4311
  6959  006C1A  EF11  F036         	goto	u4310
  6960  006C1E                     u4311:
  6961  006C1E  EF21  F036         	goto	l4084
  6962  006C22                     u4310:
  6963  006C22  5009               	movf	___aomod@divisor^0,w,c
  6964  006C24  5E01               	subwf	___aomod@dividend^0,f,c
  6965  006C26  500A               	movf	(___aomod@divisor+1)^0,w,c
  6966  006C28  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6967  006C2A  500B               	movf	(___aomod@divisor+2)^0,w,c
  6968  006C2C  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6969  006C2E  500C               	movf	(___aomod@divisor+3)^0,w,c
  6970  006C30  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6971  006C32  500D               	movf	(___aomod@divisor+4)^0,w,c
  6972  006C34  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6973  006C36  500E               	movf	(___aomod@divisor+5)^0,w,c
  6974  006C38  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6975  006C3A  500F               	movf	(___aomod@divisor+6)^0,w,c
  6976  006C3C  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6977  006C3E  5010               	movf	(___aomod@divisor+7)^0,w,c
  6978  006C40  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6979  006C42                     l4084:
  6980  006C42  90D8               	bcf	status,0,c
  6981  006C44  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6982  006C46  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6983  006C48  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6984  006C4A  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6985  006C4C  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6986  006C4E  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6987  006C50  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6988  006C52  3209               	rrcf	___aomod@divisor^0,f,c
  6989  006C54  2E11               	decfsz	___aomod@counter^0,f,c
  6990  006C56  EFFA  F035         	goto	l4080
  6991  006C5A                     l4088:
  6992  006C5A  5012               	movf	___aomod@sign^0,w,c
  6993  006C5C  B4D8               	btfsc	status,2,c
  6994  006C5E  EF33  F036         	goto	u4321
  6995  006C62  EF35  F036         	goto	u4320
  6996  006C66                     u4321:
  6997  006C66  EF45  F036         	goto	l4092
  6998  006C6A                     u4320:
  6999  006C6A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  7000  006C6C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  7001  006C6E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  7002  006C70  1E05               	comf	(___aomod@dividend+4)^0,f,c
  7003  006C72  1E04               	comf	(___aomod@dividend+3)^0,f,c
  7004  006C74  1E03               	comf	(___aomod@dividend+2)^0,f,c
  7005  006C76  1E02               	comf	(___aomod@dividend+1)^0,f,c
  7006  006C78  6C01               	negf	___aomod@dividend^0,c
  7007  006C7A  0E00               	movlw	0
  7008  006C7C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  7009  006C7E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  7010  006C80  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  7011  006C82  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  7012  006C84  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  7013  006C86  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  7014  006C88  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  7015  006C8A                     l4092:
  7016  006C8A  C001  F001         	movff	___aomod@dividend,?___aomod
  7017  006C8E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  7018  006C92  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  7019  006C96  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  7020  006C9A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  7021  006C9E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  7022  006CA2  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  7023  006CA6  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  7024  006CAA  0012               	return		;funcret
  7025  006CAC                     __end_of___aomod:
  7026                           	callstack 0
  7027                           
  7028 ;; *************** function ___aodiv *****************
  7029 ;; Defined at:
  7030 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  7031 ;; Parameters:    Size  Location     Type
  7032 ;;  dividend        8    0[COMRAM] long long 
  7033 ;;  divisor         8    8[COMRAM] long long 
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;  quotient        8   18[COMRAM] long long 
  7036 ;;  sign            1   17[COMRAM] unsigned char 
  7037 ;;  counter         1   16[COMRAM] unsigned char 
  7038 ;; Return value:  Size  Location     Type
  7039 ;;                  8    0[COMRAM] long long 
  7040 ;; Registers used:
  7041 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7042 ;; Tracked objects:
  7043 ;;		On entry : 0/0
  7044 ;;		On exit  : 0/0
  7045 ;;		Unchanged: 0/0
  7046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7047 ;;      Params:        16       0       0       0       0       0       0       0       0
  7048 ;;      Locals:        10       0       0       0       0       0       0       0       0
  7049 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7050 ;;      Totals:        26       0       0       0       0       0       0       0       0
  7051 ;;Total ram usage:       26 bytes
  7052 ;; Hardware stack levels used:    1
  7053 ;; This function calls:
  7054 ;;		Nothing
  7055 ;; This function is called by:
  7056 ;;		_dtoa
  7057 ;; This function uses a non-reentrant model
  7058 ;;
  7059                           
  7060                           	psect	text22
  7061  0069C0                     __ptext22:
  7062                           	callstack 0
  7063  0069C0                     ___aodiv:
  7064                           	callstack 26
  7065  0069C0  0E00               	movlw	0
  7066  0069C2  6E12               	movwf	___aodiv@sign^0,c
  7067  0069C4  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  7068  0069C6  EFE9  F034         	goto	u4200
  7069  0069CA  EFE7  F034         	goto	u4201
  7070  0069CE                     u4201:
  7071  0069CE  EFFB  F034         	goto	l4024
  7072  0069D2                     u4200:
  7073  0069D2  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  7074  0069D4  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  7075  0069D6  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  7076  0069D8  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  7077  0069DA  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  7078  0069DC  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  7079  0069DE  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  7080  0069E0  6C09               	negf	___aodiv@divisor^0,c
  7081  0069E2  0E00               	movlw	0
  7082  0069E4  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  7083  0069E6  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  7084  0069E8  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  7085  0069EA  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  7086  0069EC  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  7087  0069EE  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  7088  0069F0  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  7089  0069F2  0E01               	movlw	1
  7090  0069F4  6E12               	movwf	___aodiv@sign^0,c
  7091  0069F6                     l4024:
  7092  0069F6  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  7093  0069F8  EF02  F035         	goto	u4210
  7094  0069FC  EF00  F035         	goto	u4211
  7095  006A00                     u4211:
  7096  006A00  EF14  F035         	goto	l4030
  7097  006A04                     u4210:
  7098  006A04  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  7099  006A06  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  7100  006A08  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  7101  006A0A  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  7102  006A0C  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  7103  006A0E  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  7104  006A10  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  7105  006A12  6C01               	negf	___aodiv@dividend^0,c
  7106  006A14  0E00               	movlw	0
  7107  006A16  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  7108  006A18  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  7109  006A1A  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  7110  006A1C  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  7111  006A1E  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  7112  006A20  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  7113  006A22  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  7114  006A24  0E01               	movlw	1
  7115  006A26  1A12               	xorwf	___aodiv@sign^0,f,c
  7116  006A28                     l4030:
  7117  006A28  EE20  F013         	lfsr	2,___aodiv@quotient
  7118  006A2C  0E07               	movlw	7
  7119  006A2E                     u4221:
  7120  006A2E  6ADE               	clrf	postinc2,c
  7121  006A30  06E8               	decf	wreg,f,c
  7122  006A32  E2FD               	bc	u4221
  7123  006A34  5009               	movf	___aodiv@divisor^0,w,c
  7124  006A36  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  7125  006A38  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  7126  006A3A  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  7127  006A3C  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  7128  006A3E  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  7129  006A40  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  7130  006A42  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  7131  006A44  B4D8               	btfsc	status,2,c
  7132  006A46  EF27  F035         	goto	u4231
  7133  006A4A  EF29  F035         	goto	u4230
  7134  006A4E                     u4231:
  7135  006A4E  EF7B  F035         	goto	l4052
  7136  006A52                     u4230:
  7137  006A52  0E01               	movlw	1
  7138  006A54  6E11               	movwf	___aodiv@counter^0,c
  7139  006A56  EF37  F035         	goto	l4038
  7140  006A5A                     l4036:
  7141  006A5A  90D8               	bcf	status,0,c
  7142  006A5C  3609               	rlcf	___aodiv@divisor^0,f,c
  7143  006A5E  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  7144  006A60  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  7145  006A62  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  7146  006A64  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  7147  006A66  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  7148  006A68  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  7149  006A6A  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  7150  006A6C  2A11               	incf	___aodiv@counter^0,f,c
  7151  006A6E                     l4038:
  7152  006A6E  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  7153  006A70  EF3C  F035         	goto	u4241
  7154  006A74  EF3E  F035         	goto	u4240
  7155  006A78                     u4241:
  7156  006A78  EF2D  F035         	goto	l4036
  7157  006A7C                     u4240:
  7158  006A7C                     l4040:
  7159  006A7C  90D8               	bcf	status,0,c
  7160  006A7E  3613               	rlcf	___aodiv@quotient^0,f,c
  7161  006A80  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  7162  006A82  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  7163  006A84  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  7164  006A86  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  7165  006A88  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  7166  006A8A  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  7167  006A8C  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  7168  006A8E  5009               	movf	___aodiv@divisor^0,w,c
  7169  006A90  5C01               	subwf	___aodiv@dividend^0,w,c
  7170  006A92  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7171  006A94  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  7172  006A96  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7173  006A98  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  7174  006A9A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7175  006A9C  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  7176  006A9E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7177  006AA0  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  7178  006AA2  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7179  006AA4  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  7180  006AA6  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7181  006AA8  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  7182  006AAA  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7183  006AAC  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  7184  006AAE  A0D8               	btfss	status,0,c
  7185  006AB0  EF5C  F035         	goto	u4251
  7186  006AB4  EF5E  F035         	goto	u4250
  7187  006AB8                     u4251:
  7188  006AB8  EF6F  F035         	goto	l4048
  7189  006ABC                     u4250:
  7190  006ABC  5009               	movf	___aodiv@divisor^0,w,c
  7191  006ABE  5E01               	subwf	___aodiv@dividend^0,f,c
  7192  006AC0  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7193  006AC2  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  7194  006AC4  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7195  006AC6  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  7196  006AC8  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7197  006ACA  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  7198  006ACC  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7199  006ACE  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  7200  006AD0  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7201  006AD2  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  7202  006AD4  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7203  006AD6  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  7204  006AD8  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7205  006ADA  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  7206  006ADC  8013               	bsf	___aodiv@quotient^0,0,c
  7207  006ADE                     l4048:
  7208  006ADE  90D8               	bcf	status,0,c
  7209  006AE0  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  7210  006AE2  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  7211  006AE4  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  7212  006AE6  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  7213  006AE8  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  7214  006AEA  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  7215  006AEC  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  7216  006AEE  3209               	rrcf	___aodiv@divisor^0,f,c
  7217  006AF0  2E11               	decfsz	___aodiv@counter^0,f,c
  7218  006AF2  EF3E  F035         	goto	l4040
  7219  006AF6                     l4052:
  7220  006AF6  5012               	movf	___aodiv@sign^0,w,c
  7221  006AF8  B4D8               	btfsc	status,2,c
  7222  006AFA  EF81  F035         	goto	u4261
  7223  006AFE  EF83  F035         	goto	u4260
  7224  006B02                     u4261:
  7225  006B02  EF93  F035         	goto	l4056
  7226  006B06                     u4260:
  7227  006B06  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  7228  006B08  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  7229  006B0A  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  7230  006B0C  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  7231  006B0E  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  7232  006B10  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  7233  006B12  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  7234  006B14  6C13               	negf	___aodiv@quotient^0,c
  7235  006B16  0E00               	movlw	0
  7236  006B18  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  7237  006B1A  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  7238  006B1C  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  7239  006B1E  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  7240  006B20  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  7241  006B22  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  7242  006B24  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  7243  006B26                     l4056:
  7244  006B26  C013  F001         	movff	___aodiv@quotient,?___aodiv
  7245  006B2A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  7246  006B2E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  7247  006B32  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  7248  006B36  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  7249  006B3A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  7250  006B3E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  7251  006B42  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  7252  006B46  0012               	return		;funcret
  7253  006B48                     __end_of___aodiv:
  7254                           	callstack 0
  7255                           
  7256 ;; *************** function _atoi *****************
  7257 ;; Defined at:
  7258 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  7259 ;; Parameters:    Size  Location     Type
  7260 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7261 ;;		 -> STR_8(4), STR_3(5), 
  7262 ;; Auto vars:     Size  Location     Type
  7263 ;;  n               2   20[COMRAM] int 
  7264 ;;  neg             2   13[COMRAM] int 
  7265 ;; Return value:  Size  Location     Type
  7266 ;;                  2    7[COMRAM] int 
  7267 ;; Registers used:
  7268 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7269 ;; Tracked objects:
  7270 ;;		On entry : 0/0
  7271 ;;		On exit  : 0/0
  7272 ;;		Unchanged: 0/0
  7273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7274 ;;      Params:         2       0       0       0       0       0       0       0       0
  7275 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7276 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7277 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7278 ;;Total ram usage:       15 bytes
  7279 ;; Hardware stack levels used:    1
  7280 ;; Hardware stack levels required when called:    1
  7281 ;; This function calls:
  7282 ;;		___wmul
  7283 ;;		_isdigit
  7284 ;;		_isspace
  7285 ;; This function is called by:
  7286 ;;		_vfpfcnvrt
  7287 ;; This function uses a non-reentrant model
  7288 ;;
  7289                           
  7290                           	psect	text23
  7291  006830                     __ptext23:
  7292                           	callstack 0
  7293  006830                     _atoi:
  7294                           	callstack 26
  7295  006830  0E00               	movlw	0
  7296  006832  6E16               	movwf	(atoi@n+1)^0,c
  7297  006834  0E00               	movlw	0
  7298  006836  6E15               	movwf	atoi@n^0,c
  7299  006838  0E00               	movlw	0
  7300  00683A  6E0F               	movwf	(atoi@neg+1)^0,c
  7301  00683C  0E00               	movlw	0
  7302  00683E  6E0E               	movwf	atoi@neg^0,c
  7303  006840  EF24  F034         	goto	l5036
  7304  006844                     l5034:
  7305  006844  4A08               	infsnz	atoi@s^0,f,c
  7306  006846  2A09               	incf	(atoi@s+1)^0,f,c
  7307  006848                     l5036:
  7308  006848  0E01               	movlw	1
  7309  00684A  6E14               	movwf	_atoi$1004^0,c
  7310  00684C  C008  FFF6         	movff	atoi@s,tblptrl
  7311  006850  C009  FFF7         	movff	atoi@s+1,tblptrh
  7312  006854                     	if	0	;tblptru may be non-zero
  7313  006854                     	endif
  7314  006854                     	if	0	;tblptru may be non-zero
  7315  006854                     	endif
  7316  006854  0008               	tblrd		*
  7317  006856  50F5               	movf	tablat,w,c
  7318  006858  0A20               	xorlw	32
  7319  00685A  B4D8               	btfsc	status,2,c
  7320  00685C  EF32  F034         	goto	u6051
  7321  006860  EF34  F034         	goto	u6050
  7322  006864                     u6051:
  7323  006864  EF51  F034         	goto	l5044
  7324  006868                     u6050:
  7325  006868  0EF7               	movlw	247
  7326  00686A  6E0A               	movwf	??_atoi^0,c
  7327  00686C  0EFF               	movlw	255
  7328  00686E  6E0B               	movwf	(??_atoi+1)^0,c
  7329  006870  C008  FFF6         	movff	atoi@s,tblptrl
  7330  006874  C009  FFF7         	movff	atoi@s+1,tblptrh
  7331  006878                     	if	0	;tblptru may be non-zero
  7332  006878                     	endif
  7333  006878                     	if	0	;tblptru may be non-zero
  7334  006878                     	endif
  7335  006878  0008               	tblrd		*
  7336  00687A  50F5               	movf	tablat,w,c
  7337  00687C  6E0C               	movwf	(??_atoi+2)^0,c
  7338  00687E  6A0D               	clrf	(??_atoi+3)^0,c
  7339  006880  500A               	movf	??_atoi^0,w,c
  7340  006882  260C               	addwf	(??_atoi+2)^0,f,c
  7341  006884  500B               	movf	(??_atoi+1)^0,w,c
  7342  006886  220D               	addwfc	(??_atoi+3)^0,f,c
  7343  006888  500D               	movf	(??_atoi+3)^0,w,c
  7344  00688A  E109               	bnz	u6060
  7345  00688C  0E05               	movlw	5
  7346  00688E  5C0C               	subwf	(??_atoi+2)^0,w,c
  7347  006890  A0D8               	btfss	status,0,c
  7348  006892  EF4D  F034         	goto	u6061
  7349  006896  EF4F  F034         	goto	u6060
  7350  00689A                     u6061:
  7351  00689A  EF51  F034         	goto	l5044
  7352  00689E                     u6060:
  7353  00689E  0E00               	movlw	0
  7354  0068A0  6E14               	movwf	_atoi$1004^0,c
  7355  0068A2                     l5044:
  7356  0068A2  C014  F010         	movff	_atoi$1004,_atoi$1003
  7357  0068A6  6A11               	clrf	(_atoi$1003+1)^0,c
  7358  0068A8  5010               	movf	_atoi$1003^0,w,c
  7359  0068AA  1011               	iorwf	(_atoi$1003+1)^0,w,c
  7360  0068AC  A4D8               	btfss	status,2,c
  7361  0068AE  EF5B  F034         	goto	u6071
  7362  0068B2  EF5D  F034         	goto	u6070
  7363  0068B6                     u6071:
  7364  0068B6  EF22  F034         	goto	l5034
  7365  0068BA                     u6070:
  7366  0068BA  EF67  F034         	goto	l5054
  7367  0068BE                     l5050:
  7368  0068BE  0E00               	movlw	0
  7369  0068C0  6E0F               	movwf	(atoi@neg+1)^0,c
  7370  0068C2  0E01               	movlw	1
  7371  0068C4  6E0E               	movwf	atoi@neg^0,c
  7372  0068C6                     l5052:
  7373  0068C6  4A08               	infsnz	atoi@s^0,f,c
  7374  0068C8  2A09               	incf	(atoi@s+1)^0,f,c
  7375  0068CA  EF9C  F034         	goto	l5060
  7376  0068CE                     l5054:
  7377  0068CE  C008  FFF6         	movff	atoi@s,tblptrl
  7378  0068D2  C009  FFF7         	movff	atoi@s+1,tblptrh
  7379  0068D6                     	if	0	;tblptru may be non-zero
  7380  0068D6                     	endif
  7381  0068D6                     	if	0	;tblptru may be non-zero
  7382  0068D6                     	endif
  7383  0068D6  0008               	tblrd		*
  7384  0068D8  50F5               	movf	tablat,w,c
  7385  0068DA  6E0A               	movwf	??_atoi^0,c
  7386  0068DC  6A0B               	clrf	(??_atoi+1)^0,c
  7387                           
  7388                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7389                           ; Switch size 1, requested type "simple"
  7390                           ; Number of cases is 1, Range of values is 0 to 0
  7391                           ; switch strategies available:
  7392                           ; Name         Instructions Cycles
  7393                           ; simple_byte            4     3 (average)
  7394                           ;	Chosen strategy is simple_byte
  7395  0068DE  500B               	movf	(??_atoi+1)^0,w,c
  7396  0068E0  0A00               	xorlw	0	; case 0
  7397  0068E2  B4D8               	btfsc	status,2,c
  7398  0068E4  EF76  F034         	goto	l6124
  7399  0068E8  EF9C  F034         	goto	l5060
  7400  0068EC                     l6124:
  7401                           
  7402                           ; Switch size 1, requested type "simple"
  7403                           ; Number of cases is 2, Range of values is 43 to 45
  7404                           ; switch strategies available:
  7405                           ; Name         Instructions Cycles
  7406                           ; simple_byte            7     4 (average)
  7407                           ;	Chosen strategy is simple_byte
  7408  0068EC  500A               	movf	??_atoi^0,w,c
  7409  0068EE  0A2B               	xorlw	43	; case 43
  7410  0068F0  B4D8               	btfsc	status,2,c
  7411  0068F2  EF63  F034         	goto	l5052
  7412  0068F6  0A06               	xorlw	6	; case 45
  7413  0068F8  B4D8               	btfsc	status,2,c
  7414  0068FA  EF5F  F034         	goto	l5050
  7415  0068FE  EF9C  F034         	goto	l5060
  7416  006902                     l5056:
  7417  006902  C015  F001         	movff	atoi@n,___wmul@multiplier
  7418  006906  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7419  00690A  0E00               	movlw	0
  7420  00690C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7421  00690E  0E0A               	movlw	10
  7422  006910  6E03               	movwf	___wmul@multiplicand^0,c
  7423  006912  EC39  F03E         	call	___wmul	;wreg free
  7424  006916  C008  FFF6         	movff	atoi@s,tblptrl
  7425  00691A  C009  FFF7         	movff	atoi@s+1,tblptrh
  7426  00691E                     	if	0	;tblptru may be non-zero
  7427  00691E                     	endif
  7428  00691E                     	if	0	;tblptru may be non-zero
  7429  00691E                     	endif
  7430  00691E  0008               	tblrd		*
  7431  006920  50F5               	movf	tablat,w,c
  7432  006922  5E01               	subwf	?___wmul^0,f,c
  7433  006924  0E00               	movlw	0
  7434  006926  5A02               	subwfb	(?___wmul+1)^0,f,c
  7435  006928  0E30               	movlw	48
  7436  00692A  2401               	addwf	?___wmul^0,w,c
  7437  00692C  6E15               	movwf	atoi@n^0,c
  7438  00692E  0E00               	movlw	0
  7439  006930  2002               	addwfc	(?___wmul+1)^0,w,c
  7440  006932  6E16               	movwf	(atoi@n+1)^0,c
  7441  006934  EF63  F034         	goto	l5052
  7442  006938                     l5060:
  7443  006938  0ED0               	movlw	208
  7444  00693A  6E0A               	movwf	??_atoi^0,c
  7445  00693C  0EFF               	movlw	255
  7446  00693E  6E0B               	movwf	(??_atoi+1)^0,c
  7447  006940  C008  FFF6         	movff	atoi@s,tblptrl
  7448  006944  C009  FFF7         	movff	atoi@s+1,tblptrh
  7449  006948                     	if	0	;tblptru may be non-zero
  7450  006948                     	endif
  7451  006948                     	if	0	;tblptru may be non-zero
  7452  006948                     	endif
  7453  006948  0008               	tblrd		*
  7454  00694A  50F5               	movf	tablat,w,c
  7455  00694C  6E0C               	movwf	(??_atoi+2)^0,c
  7456  00694E  6A0D               	clrf	(??_atoi+3)^0,c
  7457  006950  500A               	movf	??_atoi^0,w,c
  7458  006952  260C               	addwf	(??_atoi+2)^0,f,c
  7459  006954  500B               	movf	(??_atoi+1)^0,w,c
  7460  006956  220D               	addwfc	(??_atoi+3)^0,f,c
  7461  006958  500D               	movf	(??_atoi+3)^0,w,c
  7462  00695A  E10A               	bnz	u6080
  7463  00695C  0E0A               	movlw	10
  7464  00695E  5C0C               	subwf	(??_atoi+2)^0,w,c
  7465  006960  A0D8               	btfss	status,0,c
  7466  006962  EFB5  F034         	goto	u6081
  7467  006966  EFB8  F034         	goto	u6080
  7468  00696A                     u6081:
  7469  00696A  0E01               	movlw	1
  7470  00696C  EFB9  F034         	goto	u6090
  7471  006970                     u6080:
  7472  006970  0E00               	movlw	0
  7473  006972                     u6090:
  7474  006972  6E12               	movwf	_atoi$1005^0,c
  7475  006974  6A13               	clrf	(_atoi$1005+1)^0,c
  7476  006976  5012               	movf	_atoi$1005^0,w,c
  7477  006978  1013               	iorwf	(_atoi$1005+1)^0,w,c
  7478  00697A  A4D8               	btfss	status,2,c
  7479  00697C  EFC2  F034         	goto	u6101
  7480  006980  EFC4  F034         	goto	u6100
  7481  006984                     u6101:
  7482  006984  EF81  F034         	goto	l5056
  7483  006988                     u6100:
  7484  006988  500E               	movf	atoi@neg^0,w,c
  7485  00698A  100F               	iorwf	(atoi@neg+1)^0,w,c
  7486  00698C  A4D8               	btfss	status,2,c
  7487  00698E  EFCB  F034         	goto	u6111
  7488  006992  EFCD  F034         	goto	u6110
  7489  006996                     u6111:
  7490  006996  EFDB  F034         	goto	l1096
  7491  00699A                     u6110:
  7492  00699A  C015  F00A         	movff	atoi@n,??_atoi
  7493  00699E  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7494  0069A2  1E0A               	comf	??_atoi^0,f,c
  7495  0069A4  1E0B               	comf	(??_atoi+1)^0,f,c
  7496  0069A6  4A0A               	infsnz	??_atoi^0,f,c
  7497  0069A8  2A0B               	incf	(??_atoi+1)^0,f,c
  7498  0069AA  C00A  F008         	movff	??_atoi,?_atoi
  7499  0069AE  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7500  0069B2  EFDF  F034         	goto	l1099
  7501  0069B6                     l1096:
  7502  0069B6  C015  F008         	movff	atoi@n,?_atoi
  7503  0069BA  C016  F009         	movff	atoi@n+1,?_atoi+1
  7504  0069BE                     l1099:
  7505  0069BE  0012               	return		;funcret
  7506  0069C0                     __end_of_atoi:
  7507                           	callstack 0
  7508                           
  7509 ;; *************** function _isspace *****************
  7510 ;; Defined at:
  7511 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  7512 ;; Parameters:    Size  Location     Type
  7513 ;;  c               2    0[COMRAM] int 
  7514 ;; Auto vars:     Size  Location     Type
  7515 ;;		None
  7516 ;; Return value:  Size  Location     Type
  7517 ;;                  2    0[COMRAM] int 
  7518 ;; Registers used:
  7519 ;;		wreg, status,2, status,0
  7520 ;; Tracked objects:
  7521 ;;		On entry : 0/0
  7522 ;;		On exit  : 0/0
  7523 ;;		Unchanged: 0/0
  7524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7525 ;;      Params:         2       0       0       0       0       0       0       0       0
  7526 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7527 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7528 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7529 ;;Total ram usage:        7 bytes
  7530 ;; Hardware stack levels used:    1
  7531 ;; This function calls:
  7532 ;;		Nothing
  7533 ;; This function is called by:
  7534 ;;		_atoi
  7535 ;; This function uses a non-reentrant model
  7536 ;;
  7537                           
  7538                           	psect	text24
  7539  007942                     __ptext24:
  7540                           	callstack 0
  7541  007942                     _isspace:
  7542                           	callstack 26
  7543  007942  0E01               	movlw	1
  7544  007944  6E07               	movwf	_isspace$1034^0,c
  7545  007946  0E20               	movlw	32
  7546  007948  1801               	xorwf	isspace@c^0,w,c
  7547  00794A  1002               	iorwf	(isspace@c+1)^0,w,c
  7548  00794C  B4D8               	btfsc	status,2,c
  7549  00794E  EFAB  F03C         	goto	u5321
  7550  007952  EFAD  F03C         	goto	u5320
  7551  007956                     u5321:
  7552  007956  EFC6  F03C         	goto	l4642
  7553  00795A                     u5320:
  7554  00795A  0EF7               	movlw	247
  7555  00795C  6E03               	movwf	??_isspace^0,c
  7556  00795E  0EFF               	movlw	255
  7557  007960  6E04               	movwf	(??_isspace+1)^0,c
  7558  007962  C001  F005         	movff	isspace@c,??_isspace+2
  7559  007966  C002  F006         	movff	isspace@c+1,??_isspace+3
  7560  00796A  5003               	movf	??_isspace^0,w,c
  7561  00796C  2605               	addwf	(??_isspace+2)^0,f,c
  7562  00796E  5004               	movf	(??_isspace+1)^0,w,c
  7563  007970  2206               	addwfc	(??_isspace+3)^0,f,c
  7564  007972  5006               	movf	(??_isspace+3)^0,w,c
  7565  007974  E109               	bnz	u5330
  7566  007976  0E05               	movlw	5
  7567  007978  5C05               	subwf	(??_isspace+2)^0,w,c
  7568  00797A  A0D8               	btfss	status,0,c
  7569  00797C  EFC2  F03C         	goto	u5331
  7570  007980  EFC4  F03C         	goto	u5330
  7571  007984                     u5331:
  7572  007984  EFC6  F03C         	goto	l4642
  7573  007988                     u5330:
  7574  007988  0E00               	movlw	0
  7575  00798A  6E07               	movwf	_isspace$1034^0,c
  7576  00798C                     l4642:
  7577  00798C  C007  F001         	movff	_isspace$1034,?_isspace
  7578  007990  6A02               	clrf	(?_isspace+1)^0,c
  7579  007992  0012               	return		;funcret
  7580  007994                     __end_of_isspace:
  7581                           	callstack 0
  7582                           
  7583 ;; *************** function _isdigit *****************
  7584 ;; Defined at:
  7585 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  7586 ;; Parameters:    Size  Location     Type
  7587 ;;  c               2    0[COMRAM] int 
  7588 ;; Auto vars:     Size  Location     Type
  7589 ;;		None
  7590 ;; Return value:  Size  Location     Type
  7591 ;;                  2    0[COMRAM] int 
  7592 ;; Registers used:
  7593 ;;		wreg, status,2, status,0
  7594 ;; Tracked objects:
  7595 ;;		On entry : 0/0
  7596 ;;		On exit  : 0/0
  7597 ;;		Unchanged: 0/0
  7598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7599 ;;      Params:         2       0       0       0       0       0       0       0       0
  7600 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7601 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7602 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7603 ;;Total ram usage:        6 bytes
  7604 ;; Hardware stack levels used:    1
  7605 ;; This function calls:
  7606 ;;		Nothing
  7607 ;; This function is called by:
  7608 ;;		_vfpfcnvrt
  7609 ;;		_atoi
  7610 ;; This function uses a non-reentrant model
  7611 ;;
  7612                           
  7613                           	psect	text25
  7614  007B6A                     __ptext25:
  7615                           	callstack 0
  7616  007B6A                     _isdigit:
  7617                           	callstack 27
  7618  007B6A  0ED0               	movlw	208
  7619  007B6C  6E03               	movwf	??_isdigit^0,c
  7620  007B6E  0EFF               	movlw	255
  7621  007B70  6E04               	movwf	(??_isdigit+1)^0,c
  7622  007B72  C001  F005         	movff	isdigit@c,??_isdigit+2
  7623  007B76  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7624  007B7A  5003               	movf	??_isdigit^0,w,c
  7625  007B7C  2605               	addwf	(??_isdigit+2)^0,f,c
  7626  007B7E  5004               	movf	(??_isdigit+1)^0,w,c
  7627  007B80  2206               	addwfc	(??_isdigit+3)^0,f,c
  7628  007B82  5006               	movf	(??_isdigit+3)^0,w,c
  7629  007B84  E10A               	bnz	u5300
  7630  007B86  0E0A               	movlw	10
  7631  007B88  5C05               	subwf	(??_isdigit+2)^0,w,c
  7632  007B8A  A0D8               	btfss	status,0,c
  7633  007B8C  EFCA  F03D         	goto	u5301
  7634  007B90  EFCD  F03D         	goto	u5300
  7635  007B94                     u5301:
  7636  007B94  0E01               	movlw	1
  7637  007B96  EFCE  F03D         	goto	u5310
  7638  007B9A                     u5300:
  7639  007B9A  0E00               	movlw	0
  7640  007B9C                     u5310:
  7641  007B9C  6E01               	movwf	?_isdigit^0,c
  7642  007B9E  6A02               	clrf	(?_isdigit+1)^0,c
  7643  007BA0  0012               	return		;funcret
  7644  007BA2                     __end_of_isdigit:
  7645                           	callstack 0
  7646                           
  7647 ;; *************** function ___wmul *****************
  7648 ;; Defined at:
  7649 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  7650 ;; Parameters:    Size  Location     Type
  7651 ;;  multiplier      2    0[COMRAM] unsigned int 
  7652 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7653 ;; Auto vars:     Size  Location     Type
  7654 ;;  product         2    4[COMRAM] unsigned int 
  7655 ;; Return value:  Size  Location     Type
  7656 ;;                  2    0[COMRAM] unsigned int 
  7657 ;; Registers used:
  7658 ;;		wreg, status,2, status,0, prodl, prodh
  7659 ;; Tracked objects:
  7660 ;;		On entry : 0/0
  7661 ;;		On exit  : 0/0
  7662 ;;		Unchanged: 0/0
  7663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7664 ;;      Params:         4       0       0       0       0       0       0       0       0
  7665 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7666 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7667 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7668 ;;Total ram usage:        6 bytes
  7669 ;; Hardware stack levels used:    1
  7670 ;; This function calls:
  7671 ;;		Nothing
  7672 ;; This function is called by:
  7673 ;;		_atoi
  7674 ;; This function uses a non-reentrant model
  7675 ;;
  7676                           
  7677                           	psect	text26
  7678  007C72                     __ptext26:
  7679                           	callstack 0
  7680  007C72                     ___wmul:
  7681                           	callstack 26
  7682  007C72  5001               	movf	___wmul@multiplier^0,w,c
  7683  007C74  0203               	mulwf	___wmul@multiplicand^0,c
  7684  007C76  CFF3 F005          	movff	prodl,___wmul@product
  7685  007C7A  CFF4 F006          	movff	prodh,___wmul@product+1
  7686  007C7E  5001               	movf	___wmul@multiplier^0,w,c
  7687  007C80  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7688  007C82  50F3               	movf	243,w,c
  7689  007C84  2606               	addwf	(___wmul@product+1)^0,f,c
  7690  007C86  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7691  007C88  0203               	mulwf	___wmul@multiplicand^0,c
  7692  007C8A  50F3               	movf	243,w,c
  7693  007C8C  2606               	addwf	(___wmul@product+1)^0,f,c
  7694  007C8E  C005  F001         	movff	___wmul@product,?___wmul
  7695  007C92  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7696  007C96  0012               	return		;funcret
  7697  007C98                     __end_of___wmul:
  7698                           	callstack 0
  7699                           
  7700 ;; *************** function _read_mq *****************
  7701 ;; Defined at:
  7702 ;;		line 22 in file "MQ_6.c"
  7703 ;; Parameters:    Size  Location     Type
  7704 ;;		None
  7705 ;; Auto vars:     Size  Location     Type
  7706 ;;  rs              4    2[BANK0 ] float 
  7707 ;;  count           2    0[BANK0 ] int 
  7708 ;; Return value:  Size  Location     Type
  7709 ;;                  4   86[COMRAM] float 
  7710 ;; Registers used:
  7711 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7712 ;; Tracked objects:
  7713 ;;		On entry : 0/0
  7714 ;;		On exit  : 0/0
  7715 ;;		Unchanged: 0/0
  7716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7717 ;;      Params:         4       0       0       0       0       0       0       0       0
  7718 ;;      Locals:         0       6       0       0       0       0       0       0       0
  7719 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7720 ;;      Totals:         5       6       0       0       0       0       0       0       0
  7721 ;;Total ram usage:       11 bytes
  7722 ;; Hardware stack levels used:    1
  7723 ;; Hardware stack levels required when called:    2
  7724 ;; This function calls:
  7725 ;;		_ADC_Read
  7726 ;;		___fladd
  7727 ;;		___fldiv
  7728 ;;		_calculate_resistance
  7729 ;; This function is called by:
  7730 ;;		_main
  7731 ;; This function uses a non-reentrant model
  7732 ;;
  7733                           
  7734                           	psect	text27
  7735  0070CE                     __ptext27:
  7736                           	callstack 0
  7737  0070CE                     _read_mq:
  7738                           	callstack 28
  7739  0070CE                     
  7740                           ;MQ_6.c: 23:     int count;;MQ_6.c: 24:     float rs = 0;
  7741  0070CE  0E00               	movlw	0
  7742  0070D0  0100               	movlb	0	; () banked
  7743  0070D2  6F62               	movwf	read_mq@rs& (0+255),b
  7744  0070D4  0E00               	movlw	0
  7745  0070D6  6F63               	movwf	(read_mq@rs+1)& (0+255),b
  7746  0070D8  0E00               	movlw	0
  7747  0070DA  6F64               	movwf	(read_mq@rs+2)& (0+255),b
  7748  0070DC  0E00               	movlw	0
  7749  0070DE  6F65               	movwf	(read_mq@rs+3)& (0+255),b
  7750                           
  7751                           ;MQ_6.c: 25:     for (count = 0; count < 5; count++) {
  7752  0070E0  0E00               	movlw	0
  7753  0070E2  6F61               	movwf	(read_mq@count+1)& (0+255),b
  7754  0070E4  0E00               	movlw	0
  7755  0070E6  6F60               	movwf	read_mq@count& (0+255),b
  7756  0070E8                     l6006:
  7757                           
  7758                           ; BSR set to: 0
  7759                           ;MQ_6.c: 26:         rs += calculate_resistance(ADC_Read(0));
  7760  0070E8  C062  F047         	movff	read_mq@rs,___fladd@b
  7761  0070EC  C063  F048         	movff	read_mq@rs+1,___fladd@b+1
  7762  0070F0  C064  F049         	movff	read_mq@rs+2,___fladd@b+2
  7763  0070F4  C065  F04A         	movff	read_mq@rs+3,___fladd@b+3
  7764  0070F8  0E00               	movlw	0
  7765  0070FA  6E02               	movwf	(ADC_Read@channel+1)^0,c
  7766  0070FC  0E00               	movlw	0
  7767  0070FE  6E01               	movwf	ADC_Read@channel^0,c
  7768  007100  EC17  F03B         	call	_ADC_Read	;wreg free
  7769  007104  C001  F041         	movff	?_ADC_Read,calculate_resistance@adc_channel
  7770  007108  C002  F042         	movff	?_ADC_Read+1,calculate_resistance@adc_channel+1
  7771  00710C  EC65  F03B         	call	_calculate_resistance	;wreg free
  7772  007110  C041  F04B         	movff	?_calculate_resistance,___fladd@a
  7773  007114  C042  F04C         	movff	?_calculate_resistance+1,___fladd@a+1
  7774  007118  C043  F04D         	movff	?_calculate_resistance+2,___fladd@a+2
  7775  00711C  C044  F04E         	movff	?_calculate_resistance+3,___fladd@a+3
  7776  007120  EC13  F026         	call	___fladd	;wreg free
  7777  007124  C047  F062         	movff	?___fladd,read_mq@rs
  7778  007128  C048  F063         	movff	?___fladd+1,read_mq@rs+1
  7779  00712C  C049  F064         	movff	?___fladd+2,read_mq@rs+2
  7780  007130  C04A  F065         	movff	?___fladd+3,read_mq@rs+3
  7781  007134                     
  7782                           ;MQ_6.c: 27:         _delay((unsigned long)((50)*(8000000/4000.0)));
  7783  007134  0E82               	movlw	130
  7784  007136  6E5B               	movwf	??_read_mq^0,c
  7785  007138  0EDE               	movlw	222
  7786  00713A                     u7487:
  7787  00713A  2EE8               	decfsz	wreg,f,c
  7788  00713C  D7FE               	bra	u7487
  7789  00713E  2E5B               	decfsz	??_read_mq^0,f,c
  7790  007140  D7FC               	bra	u7487
  7791  007142                     
  7792                           ;MQ_6.c: 28:     }
  7793  007142  0100               	movlb	0	; () banked
  7794  007144  4B60               	infsnz	read_mq@count& (0+255),f,b
  7795  007146  2B61               	incf	(read_mq@count+1)& (0+255),f,b
  7796  007148                     
  7797                           ; BSR set to: 0
  7798  007148  BF61               	btfsc	(read_mq@count+1)& (0+255),7,b
  7799  00714A  EFB0  F038         	goto	u7421
  7800  00714E  5161               	movf	(read_mq@count+1)& (0+255),w,b
  7801  007150  E109               	bnz	u7420
  7802  007152  0E05               	movlw	5
  7803  007154  5D60               	subwf	read_mq@count& (0+255),w,b
  7804  007156  A0D8               	btfss	status,0,c
  7805  007158  EFB0  F038         	goto	u7421
  7806  00715C  EFB2  F038         	goto	u7420
  7807  007160                     u7421:
  7808  007160  EF74  F038         	goto	l6006
  7809  007164                     u7420:
  7810  007164                     
  7811                           ; BSR set to: 0
  7812                           ;MQ_6.c: 29:     rs = rs / 5;
  7813  007164  C062  F028         	movff	read_mq@rs,___fldiv@b
  7814  007168  C063  F029         	movff	read_mq@rs+1,___fldiv@b+1
  7815  00716C  C064  F02A         	movff	read_mq@rs+2,___fldiv@b+2
  7816  007170  C065  F02B         	movff	read_mq@rs+3,___fldiv@b+3
  7817  007174  0E00               	movlw	0
  7818  007176  6E2C               	movwf	___fldiv@a^0,c
  7819  007178  0E00               	movlw	0
  7820  00717A  6E2D               	movwf	(___fldiv@a+1)^0,c
  7821  00717C  0EA0               	movlw	160
  7822  00717E  6E2E               	movwf	(___fldiv@a+2)^0,c
  7823  007180  0E40               	movlw	64
  7824  007182  6E2F               	movwf	(___fldiv@a+3)^0,c
  7825  007184  ECE7  F02C         	call	___fldiv	;wreg free
  7826  007188  C028  F062         	movff	?___fldiv,read_mq@rs
  7827  00718C  C029  F063         	movff	?___fldiv+1,read_mq@rs+1
  7828  007190  C02A  F064         	movff	?___fldiv+2,read_mq@rs+2
  7829  007194  C02B  F065         	movff	?___fldiv+3,read_mq@rs+3
  7830  007198                     
  7831                           ;MQ_6.c: 30:     return rs;
  7832  007198  C062  F057         	movff	read_mq@rs,?_read_mq
  7833  00719C  C063  F058         	movff	read_mq@rs+1,?_read_mq+1
  7834  0071A0  C064  F059         	movff	read_mq@rs+2,?_read_mq+2
  7835  0071A4  C065  F05A         	movff	read_mq@rs+3,?_read_mq+3
  7836  0071A8  0012               	return		;funcret
  7837  0071AA                     __end_of_read_mq:
  7838                           	callstack 0
  7839                           
  7840 ;; *************** function _calculate_resistance *****************
  7841 ;; Defined at:
  7842 ;;		line 33 in file "MQ_6.c"
  7843 ;; Parameters:    Size  Location     Type
  7844 ;;  adc_channel     2   64[COMRAM] int 
  7845 ;; Auto vars:     Size  Location     Type
  7846 ;;		None
  7847 ;; Return value:  Size  Location     Type
  7848 ;;                  4   64[COMRAM] float 
  7849 ;; Registers used:
  7850 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7851 ;; Tracked objects:
  7852 ;;		On entry : 0/0
  7853 ;;		On exit  : 0/0
  7854 ;;		Unchanged: 0/0
  7855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7856 ;;      Params:         4       0       0       0       0       0       0       0       0
  7857 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7858 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7859 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7860 ;;Total ram usage:        6 bytes
  7861 ;; Hardware stack levels used:    1
  7862 ;; Hardware stack levels required when called:    1
  7863 ;; This function calls:
  7864 ;;		___fldiv
  7865 ;;		___flmul
  7866 ;;		___xxtofl
  7867 ;; This function is called by:
  7868 ;;		_read_mq
  7869 ;;		_SensorCalibration
  7870 ;; This function uses a non-reentrant model
  7871 ;;
  7872                           
  7873                           	psect	text28
  7874  0076CA                     __ptext28:
  7875                           	callstack 0
  7876  0076CA                     _calculate_resistance:
  7877                           	callstack 28
  7878  0076CA                     
  7879                           ;MQ_6.c: 34:     return ( ((float) (10) * (1023 - adc_channel) / adc_channel));
  7880  0076CA  0E00               	movlw	0
  7881  0076CC  6E13               	movwf	___flmul@a^0,c
  7882  0076CE  0E00               	movlw	0
  7883  0076D0  6E14               	movwf	(___flmul@a+1)^0,c
  7884  0076D2  0E20               	movlw	32
  7885  0076D4  6E15               	movwf	(___flmul@a+2)^0,c
  7886  0076D6  0E41               	movlw	65
  7887  0076D8  6E16               	movwf	(___flmul@a+3)^0,c
  7888  0076DA  0EFF               	movlw	255
  7889  0076DC  6E45               	movwf	??_calculate_resistance^0,c
  7890  0076DE  0E03               	movlw	3
  7891  0076E0  6E46               	movwf	(??_calculate_resistance+1)^0,c
  7892  0076E2  5041               	movf	calculate_resistance@adc_channel^0,w,c
  7893  0076E4  5E45               	subwf	??_calculate_resistance^0,f,c
  7894  0076E6  5042               	movf	(calculate_resistance@adc_channel+1)^0,w,c
  7895  0076E8  5A46               	subwfb	(??_calculate_resistance+1)^0,f,c
  7896  0076EA  C045  F001         	movff	??_calculate_resistance,___xxtofl@val
  7897  0076EE  C046  F002         	movff	??_calculate_resistance+1,___xxtofl@val+1
  7898  0076F2  0E00               	movlw	0
  7899  0076F4  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7900  0076F6  0EFF               	movlw	-1
  7901  0076F8  6E03               	movwf	(___xxtofl@val+2)^0,c
  7902  0076FA  6E04               	movwf	(___xxtofl@val+3)^0,c
  7903  0076FC  0E01               	movlw	1
  7904  0076FE  EC3E  F033         	call	___xxtofl
  7905  007702  C001  F00F         	movff	?___xxtofl,___flmul@b
  7906  007706  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  7907  00770A  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  7908  00770E  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  7909  007712  ECD2  F02A         	call	___flmul	;wreg free
  7910  007716  C00F  F028         	movff	?___flmul,___fldiv@b
  7911  00771A  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  7912  00771E  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  7913  007722  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  7914  007726  C041  F001         	movff	calculate_resistance@adc_channel,___xxtofl@val
  7915  00772A  C042  F002         	movff	calculate_resistance@adc_channel+1,___xxtofl@val+1
  7916  00772E  0E00               	movlw	0
  7917  007730  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7918  007732  0EFF               	movlw	-1
  7919  007734  6E03               	movwf	(___xxtofl@val+2)^0,c
  7920  007736  6E04               	movwf	(___xxtofl@val+3)^0,c
  7921  007738  0E01               	movlw	1
  7922  00773A  EC3E  F033         	call	___xxtofl
  7923  00773E  C001  F02C         	movff	?___xxtofl,___fldiv@a
  7924  007742  C002  F02D         	movff	?___xxtofl+1,___fldiv@a+1
  7925  007746  C003  F02E         	movff	?___xxtofl+2,___fldiv@a+2
  7926  00774A  C004  F02F         	movff	?___xxtofl+3,___fldiv@a+3
  7927  00774E  ECE7  F02C         	call	___fldiv	;wreg free
  7928  007752  C028  F041         	movff	?___fldiv,?_calculate_resistance
  7929  007756  C029  F042         	movff	?___fldiv+1,?_calculate_resistance+1
  7930  00775A  C02A  F043         	movff	?___fldiv+2,?_calculate_resistance+2
  7931  00775E  C02B  F044         	movff	?___fldiv+3,?_calculate_resistance+3
  7932  007762  0012               	return		;funcret
  7933  007764                     __end_of_calculate_resistance:
  7934                           	callstack 0
  7935                           
  7936 ;; *************** function _ADC_Read *****************
  7937 ;; Defined at:
  7938 ;;		line 13 in file "ADC.c"
  7939 ;; Parameters:    Size  Location     Type
  7940 ;;  channel         2    0[COMRAM] int 
  7941 ;; Auto vars:     Size  Location     Type
  7942 ;;  digital         2    6[COMRAM] int 
  7943 ;; Return value:  Size  Location     Type
  7944 ;;                  2    0[COMRAM] int 
  7945 ;; Registers used:
  7946 ;;		wreg, status,2, status,0
  7947 ;; Tracked objects:
  7948 ;;		On entry : 0/0
  7949 ;;		On exit  : 0/0
  7950 ;;		Unchanged: 0/0
  7951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7952 ;;      Params:         2       0       0       0       0       0       0       0       0
  7953 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7954 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7955 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7956 ;;Total ram usage:        8 bytes
  7957 ;; Hardware stack levels used:    1
  7958 ;; This function calls:
  7959 ;;		Nothing
  7960 ;; This function is called by:
  7961 ;;		_read_mq
  7962 ;;		_SensorCalibration
  7963 ;; This function uses a non-reentrant model
  7964 ;;
  7965                           
  7966                           	psect	text29
  7967  00762E                     __ptext29:
  7968                           	callstack 0
  7969  00762E                     _ADC_Read:
  7970                           	callstack 29
  7971  00762E                     
  7972                           ;ADC.c: 13: int ADC_Read(int channel);ADC.c: 14: {;ADC.c: 15:     int digital;;ADC.c: 16
      +                          :     ADCON0 =(ADCON0 & 0b11000011)|((channel<<2) & 0b00111100);
  7973  00762E  C001  F003         	movff	ADC_Read@channel,??_ADC_Read
  7974  007632  90D8               	bcf	status,0,c
  7975  007634  3603               	rlcf	??_ADC_Read^0,f,c
  7976  007636  90D8               	bcf	status,0,c
  7977  007638  3603               	rlcf	??_ADC_Read^0,f,c
  7978  00763A  0E3C               	movlw	60
  7979  00763C  1603               	andwf	??_ADC_Read^0,f,c
  7980  00763E  50C2               	movf	194,w,c	;volatile
  7981  007640  0BC3               	andlw	195
  7982  007642  1003               	iorwf	??_ADC_Read^0,w,c
  7983  007644  6EC2               	movwf	194,c	;volatile
  7984                           
  7985                           ;ADC.c: 18:     ADCON0 |= ((1<<ADON)|(1<<GO));
  7986  007646  B2C2               	btfsc	4034,1,c	;volatile
  7987  007648  EF28  F03B         	goto	u6671
  7988  00764C  EF2C  F03B         	goto	u6670
  7989  007650                     u6671:
  7990  007650  6A03               	clrf	??_ADC_Read^0,c
  7991  007652  2A03               	incf	??_ADC_Read^0,f,c
  7992  007654  EF2D  F03B         	goto	u6688
  7993  007658                     u6670:
  7994  007658  6A03               	clrf	??_ADC_Read^0,c
  7995  00765A                     u6688:
  7996  00765A  0E01               	movlw	1
  7997  00765C  6E04               	movwf	(??_ADC_Read+1)^0,c
  7998  00765E  2A03               	incf	??_ADC_Read^0,f,c
  7999  007660  EF34  F03B         	goto	u6694
  8000  007664                     u6695:
  8001  007664  90D8               	bcf	status,0,c
  8002  007666  3604               	rlcf	(??_ADC_Read+1)^0,f,c
  8003  007668                     u6694:
  8004  007668  2E03               	decfsz	??_ADC_Read^0,f,c
  8005  00766A  EF32  F03B         	goto	u6695
  8006  00766E  B0C2               	btfsc	4034,0,c	;volatile
  8007  007670  EF3C  F03B         	goto	u6701
  8008  007674  EF40  F03B         	goto	u6700
  8009  007678                     u6701:
  8010  007678  6A05               	clrf	(??_ADC_Read+2)^0,c
  8011  00767A  2A05               	incf	(??_ADC_Read+2)^0,f,c
  8012  00767C  EF41  F03B         	goto	u6718
  8013  007680                     u6700:
  8014  007680  6A05               	clrf	(??_ADC_Read+2)^0,c
  8015  007682                     u6718:
  8016  007682  0E01               	movlw	1
  8017  007684  6E06               	movwf	(??_ADC_Read+3)^0,c
  8018  007686  2A05               	incf	(??_ADC_Read+2)^0,f,c
  8019  007688  EF48  F03B         	goto	u6724
  8020  00768C                     u6725:
  8021  00768C  90D8               	bcf	status,0,c
  8022  00768E  3606               	rlcf	(??_ADC_Read+3)^0,f,c
  8023  007690                     u6724:
  8024  007690  2E05               	decfsz	(??_ADC_Read+2)^0,f,c
  8025  007692  EF46  F03B         	goto	u6725
  8026  007696  5006               	movf	(??_ADC_Read+3)^0,w,c
  8027  007698  1004               	iorwf	(??_ADC_Read+1)^0,w,c
  8028  00769A  12C2               	iorwf	194,f,c	;volatile
  8029  00769C                     l69:
  8030  00769C  B2C2               	btfsc	194,1,c	;volatile
  8031  00769E  EF53  F03B         	goto	u6731
  8032  0076A2  EF55  F03B         	goto	u6730
  8033  0076A6                     u6731:
  8034  0076A6  EF4E  F03B         	goto	l69
  8035  0076AA                     u6730:
  8036  0076AA                     
  8037                           ;ADC.c: 20:     digital = (ADRESH*256) | (ADRESL);
  8038  0076AA  50C3               	movf	195,w,c	;volatile
  8039  0076AC  CFC4 F003          	movff	4036,??_ADC_Read	;volatile
  8040  0076B0  6A04               	clrf	(??_ADC_Read+1)^0,c
  8041  0076B2  C003  F004         	movff	??_ADC_Read,??_ADC_Read+1
  8042  0076B6  6A03               	clrf	??_ADC_Read^0,c
  8043  0076B8  1003               	iorwf	??_ADC_Read^0,w,c
  8044  0076BA  6E07               	movwf	ADC_Read@digital^0,c
  8045  0076BC  5004               	movf	(??_ADC_Read+1)^0,w,c
  8046  0076BE  6E08               	movwf	(ADC_Read@digital+1)^0,c
  8047  0076C0                     
  8048                           ;ADC.c: 21:     return(digital);
  8049  0076C0  C007  F001         	movff	ADC_Read@digital,?_ADC_Read
  8050  0076C4  C008  F002         	movff	ADC_Read@digital+1,?_ADC_Read+1
  8051  0076C8  0012               	return		;funcret
  8052  0076CA                     __end_of_ADC_Read:
  8053                           	callstack 0
  8054                           
  8055 ;; *************** function _gas_plot_log_scale *****************
  8056 ;; Defined at:
  8057 ;;		line 37 in file "MQ_6.c"
  8058 ;; Parameters:    Size  Location     Type
  8059 ;;  rs_ro_ratio     4  103[BANK0 ] float 
  8060 ;;  curve           2  107[BANK0 ] PTR float 
  8061 ;;		 -> MQ6_curve(12), 
  8062 ;; Auto vars:     Size  Location     Type
  8063 ;;		None
  8064 ;; Return value:  Size  Location     Type
  8065 ;;                  2  103[BANK0 ] int 
  8066 ;; Registers used:
  8067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8068 ;; Tracked objects:
  8069 ;;		On entry : 0/0
  8070 ;;		On exit  : 0/0
  8071 ;;		Unchanged: 0/0
  8072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8073 ;;      Params:         0       6       0       0       0       0       0       0       0
  8074 ;;      Locals:         0      12       0       0       0       0       0       0       0
  8075 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8076 ;;      Totals:         0      18       0       0       0       0       0       0       0
  8077 ;;Total ram usage:       18 bytes
  8078 ;; Hardware stack levels used:    1
  8079 ;; Hardware stack levels required when called:    3
  8080 ;; This function calls:
  8081 ;;		___fladd
  8082 ;;		___fldiv
  8083 ;;		___flsub
  8084 ;;		___fltol
  8085 ;;		_logf
  8086 ;;		_powf
  8087 ;; This function is called by:
  8088 ;;		_main
  8089 ;; This function uses a non-reentrant model
  8090 ;;
  8091                           
  8092                           	psect	text30
  8093  006CAC                     __ptext30:
  8094                           	callstack 0
  8095  006CAC                     _gas_plot_log_scale:
  8096                           	callstack 27
  8097  006CAC                     
  8098                           ;MQ_6.c: 38:     return powf(10,(((logf(rs_ro_ratio) - curve[1]) / curve[2]) + curve[0])
      +                          );
  8099  006CAC  C0C7  F060         	movff	gas_plot_log_scale@rs_ro_ratio,logf@x
  8100  006CB0  C0C8  F061         	movff	gas_plot_log_scale@rs_ro_ratio+1,logf@x+1
  8101  006CB4  C0C9  F062         	movff	gas_plot_log_scale@rs_ro_ratio+2,logf@x+2
  8102  006CB8  C0CA  F063         	movff	gas_plot_log_scale@rs_ro_ratio+3,logf@x+3
  8103  006CBC  ECD0  F01F         	call	_logf	;wreg free
  8104  006CC0  C060  F0CD         	movff	?_logf,_gas_plot_log_scale$1450
  8105  006CC4  C061  F0CE         	movff	?_logf+1,_gas_plot_log_scale$1450+1
  8106  006CC8  C062  F0CF         	movff	?_logf+2,_gas_plot_log_scale$1450+2
  8107  006CCC  C063  F0D0         	movff	?_logf+3,_gas_plot_log_scale$1450+3
  8108  006CD0                     
  8109                           ;MQ_6.c: 38:     return powf(10,(((logf(rs_ro_ratio) - curve[1]) / curve[2]) + curve[0])
      +                          );
  8110  006CD0  0100               	movlb	0	; () banked
  8111  006CD2  EE20 F008          	lfsr	2,8
  8112  006CD6  51CB               	movf	gas_plot_log_scale@curve& (0+255),w,b
  8113  006CD8  26D9               	addwf	fsr2l,f,c
  8114  006CDA  51CC               	movf	(gas_plot_log_scale@curve+1)& (0+255),w,b
  8115  006CDC  22DA               	addwfc	fsr2h,f,c
  8116  006CDE  CFDE F02C          	movff	postinc2,___fldiv@a
  8117  006CE2  CFDE F02D          	movff	postinc2,___fldiv@a+1
  8118  006CE6  CFDE F02E          	movff	postinc2,___fldiv@a+2
  8119  006CEA  CFDE F02F          	movff	postinc2,___fldiv@a+3
  8120  006CEE  EE20 F004          	lfsr	2,4
  8121  006CF2  51CB               	movf	gas_plot_log_scale@curve& (0+255),w,b
  8122  006CF4  26D9               	addwf	fsr2l,f,c
  8123  006CF6  51CC               	movf	(gas_plot_log_scale@curve+1)& (0+255),w,b
  8124  006CF8  22DA               	addwfc	fsr2h,f,c
  8125  006CFA  CFDE F05B          	movff	postinc2,___flsub@a
  8126  006CFE  CFDE F05C          	movff	postinc2,___flsub@a+1
  8127  006D02  CFDE F05D          	movff	postinc2,___flsub@a+2
  8128  006D06  CFDE F05E          	movff	postinc2,___flsub@a+3
  8129  006D0A  C0CD  F057         	movff	_gas_plot_log_scale$1450,___flsub@b
  8130  006D0E  C0CE  F058         	movff	_gas_plot_log_scale$1450+1,___flsub@b+1
  8131  006D12  C0CF  F059         	movff	_gas_plot_log_scale$1450+2,___flsub@b+2
  8132  006D16  C0D0  F05A         	movff	_gas_plot_log_scale$1450+3,___flsub@b+3
  8133  006D1A  EC14  F03D         	call	___flsub	;wreg free
  8134  006D1E  C057  F028         	movff	?___flsub,___fldiv@b
  8135  006D22  C058  F029         	movff	?___flsub+1,___fldiv@b+1
  8136  006D26  C059  F02A         	movff	?___flsub+2,___fldiv@b+2
  8137  006D2A  C05A  F02B         	movff	?___flsub+3,___fldiv@b+3
  8138  006D2E  ECE7  F02C         	call	___fldiv	;wreg free
  8139  006D32  C028  F0D1         	movff	?___fldiv,_gas_plot_log_scale$1451
  8140  006D36  C029  F0D2         	movff	?___fldiv+1,_gas_plot_log_scale$1451+1
  8141  006D3A  C02A  F0D3         	movff	?___fldiv+2,_gas_plot_log_scale$1451+2
  8142  006D3E  C02B  F0D4         	movff	?___fldiv+3,_gas_plot_log_scale$1451+3
  8143  006D42                     
  8144                           ;MQ_6.c: 38:     return powf(10,(((logf(rs_ro_ratio) - curve[1]) / curve[2]) + curve[0])
      +                          );
  8145  006D42  C0CB  FFD9         	movff	gas_plot_log_scale@curve,fsr2l
  8146  006D46  C0CC  FFDA         	movff	gas_plot_log_scale@curve+1,fsr2h
  8147  006D4A  CFDE F04B          	movff	postinc2,___fladd@a
  8148  006D4E  CFDE F04C          	movff	postinc2,___fladd@a+1
  8149  006D52  CFDE F04D          	movff	postinc2,___fladd@a+2
  8150  006D56  CFDE F04E          	movff	postinc2,___fladd@a+3
  8151  006D5A  C0D1  F047         	movff	_gas_plot_log_scale$1451,___fladd@b
  8152  006D5E  C0D2  F048         	movff	_gas_plot_log_scale$1451+1,___fladd@b+1
  8153  006D62  C0D3  F049         	movff	_gas_plot_log_scale$1451+2,___fladd@b+2
  8154  006D66  C0D4  F04A         	movff	_gas_plot_log_scale$1451+3,___fladd@b+3
  8155  006D6A  EC13  F026         	call	___fladd	;wreg free
  8156  006D6E  C047  F0D5         	movff	?___fladd,_gas_plot_log_scale$1452
  8157  006D72  C048  F0D6         	movff	?___fladd+1,_gas_plot_log_scale$1452+1
  8158  006D76  C049  F0D7         	movff	?___fladd+2,_gas_plot_log_scale$1452+2
  8159  006D7A  C04A  F0D8         	movff	?___fladd+3,_gas_plot_log_scale$1452+3
  8160  006D7E                     
  8161                           ;MQ_6.c: 38:     return powf(10,(((logf(rs_ro_ratio) - curve[1]) / curve[2]) + curve[0])
      +                          );
  8162  006D7E  C0D5  F0B0         	movff	_gas_plot_log_scale$1452,powf@y
  8163  006D82  C0D6  F0B1         	movff	_gas_plot_log_scale$1452+1,powf@y+1
  8164  006D86  C0D7  F0B2         	movff	_gas_plot_log_scale$1452+2,powf@y+2
  8165  006D8A  C0D8  F0B3         	movff	_gas_plot_log_scale$1452+3,powf@y+3
  8166  006D8E  0E00               	movlw	0
  8167  006D90  0100               	movlb	0	; () banked
  8168  006D92  6FAC               	movwf	powf@x& (0+255),b
  8169  006D94  0E00               	movlw	0
  8170  006D96  6FAD               	movwf	(powf@x+1)& (0+255),b
  8171  006D98  0E20               	movlw	32
  8172  006D9A  6FAE               	movwf	(powf@x+2)& (0+255),b
  8173  006D9C  0E41               	movlw	65
  8174  006D9E  6FAF               	movwf	(powf@x+3)& (0+255),b
  8175  006DA0  EC79  F004         	call	_powf	;wreg free
  8176  006DA4  C0AC  F0BD         	movff	?_powf,___fltol@f1
  8177  006DA8  C0AD  F0BE         	movff	?_powf+1,___fltol@f1+1
  8178  006DAC  C0AE  F0BF         	movff	?_powf+2,___fltol@f1+2
  8179  006DB0  C0AF  F0C0         	movff	?_powf+3,___fltol@f1+3
  8180  006DB4  ECE1  F036         	call	___fltol	;wreg free
  8181  006DB8  C0BD  F0C7         	movff	?___fltol,?_gas_plot_log_scale
  8182  006DBC  C0BE  F0C8         	movff	?___fltol+1,?_gas_plot_log_scale+1
  8183  006DC0  0012               	return		;funcret
  8184  006DC2                     __end_of_gas_plot_log_scale:
  8185                           	callstack 0
  8186                           
  8187 ;; *************** function _powf *****************
  8188 ;; Defined at:
  8189 ;;		line 52 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\powf.c"
  8190 ;; Parameters:    Size  Location     Type
  8191 ;;  x               4   76[BANK0 ] float 
  8192 ;;  y               4   80[BANK0 ] float 
  8193 ;; Auto vars:     Size  Location     Type
  8194 ;;  s2              4  140[BANK1 ] float 
  8195 ;;  s_h             4  108[BANK1 ] float 
  8196 ;;  t_h             4  104[BANK1 ] float 
  8197 ;;  t_l             4   52[BANK1 ] float 
  8198 ;;  s_l             4   48[BANK1 ] float 
  8199 ;;  __xc8_float_    4  184[BANK1 ] struct .
  8200 ;;  z               4  180[BANK1 ] float 
  8201 ;;  t               4  176[BANK1 ] float 
  8202 ;;  j               4  172[BANK1 ] long 
  8203 ;;  ix              4  168[BANK1 ] long 
  8204 ;;  k               4  160[BANK1 ] long 
  8205 ;;  p_h             4  156[BANK1 ] float 
  8206 ;;  iy              4  152[BANK1 ] long 
  8207 ;;  is              4  144[BANK1 ] long 
  8208 ;;  sn              4  136[BANK1 ] float 
  8209 ;;  hy              4  132[BANK1 ] long 
  8210 ;;  t1              4  128[BANK1 ] float 
  8211 ;;  n               4  124[BANK1 ] long 
  8212 ;;  v               4  120[BANK1 ] float 
  8213 ;;  u               4  116[BANK1 ] float 
  8214 ;;  ax              4  112[BANK1 ] float 
  8215 ;;  p_l             4  100[BANK1 ] float 
  8216 ;;  hx              4   96[BANK1 ] long 
  8217 ;;  s               4   92[BANK1 ] float 
  8218 ;;  yisint          4   80[BANK1 ] long 
  8219 ;;  r               4   76[BANK1 ] float 
  8220 ;;  w               4   68[BANK1 ] float 
  8221 ;;  i               4   44[BANK1 ] long 
  8222 ;;  y1              4   40[BANK1 ] float 
  8223 ;;  z_l             4   36[BANK1 ] float 
  8224 ;;  z_h             4   32[BANK1 ] float 
  8225 ;;  t2              4   28[BANK1 ] float 
  8226 ;; Return value:  Size  Location     Type
  8227 ;;                  4   76[BANK0 ] float 
  8228 ;; Registers used:
  8229 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8230 ;; Tracked objects:
  8231 ;;		On entry : 0/0
  8232 ;;		On exit  : 0/0
  8233 ;;		Unchanged: 0/0
  8234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8235 ;;      Params:         0       8       0       0       0       0       0       0       0
  8236 ;;      Locals:         0       0     188       0       0       0       0       0       0
  8237 ;;      Temps:          0       9       0       0       0       0       0       0       0
  8238 ;;      Totals:         0      17     188       0       0       0       0       0       0
  8239 ;;Total ram usage:      205 bytes
  8240 ;; Hardware stack levels used:    1
  8241 ;; Hardware stack levels required when called:    2
  8242 ;; This function calls:
  8243 ;;		___fladd
  8244 ;;		___fldiv
  8245 ;;		___flge
  8246 ;;		___flmul
  8247 ;;		___flneg
  8248 ;;		___flsub
  8249 ;;		___xxtofl
  8250 ;;		_fabsf
  8251 ;;		_scalbnf
  8252 ;;		_sqrtf
  8253 ;; This function is called by:
  8254 ;;		_gas_plot_log_scale
  8255 ;; This function uses a non-reentrant model
  8256 ;;
  8257                           
  8258                           	psect	text31
  8259  0008F2                     __ptext31:
  8260                           	callstack 0
  8261  0008F2                     _powf:
  8262                           	callstack 27
  8263  0008F2  C0AC  F1B8         	movff	powf@x,powf@__xc8_float_word
  8264  0008F6  C0AD  F1B9         	movff	powf@x+1,powf@__xc8_float_word+1
  8265  0008FA  C0AE  F1BA         	movff	powf@x+2,powf@__xc8_float_word+2
  8266  0008FE  C0AF  F1BB         	movff	powf@x+3,powf@__xc8_float_word+3
  8267  000902  C1B8  F160         	movff	powf@__xc8_float_word,powf@hx
  8268  000906  C1B9  F161         	movff	powf@__xc8_float_word+1,powf@hx+1
  8269  00090A  C1BA  F162         	movff	powf@__xc8_float_word+2,powf@hx+2
  8270  00090E  C1BB  F163         	movff	powf@__xc8_float_word+3,powf@hx+3
  8271  000912  C0B0  F1B8         	movff	powf@y,powf@__xc8_float_word
  8272  000916  C0B1  F1B9         	movff	powf@y+1,powf@__xc8_float_word+1
  8273  00091A  C0B2  F1BA         	movff	powf@y+2,powf@__xc8_float_word+2
  8274  00091E  C0B3  F1BB         	movff	powf@y+3,powf@__xc8_float_word+3
  8275  000922  C1B8  F184         	movff	powf@__xc8_float_word,powf@hy
  8276  000926  C1B9  F185         	movff	powf@__xc8_float_word+1,powf@hy+1
  8277  00092A  C1BA  F186         	movff	powf@__xc8_float_word+2,powf@hy+2
  8278  00092E  C1BB  F187         	movff	powf@__xc8_float_word+3,powf@hy+3
  8279  000932  0EFF               	movlw	255
  8280  000934  0101               	movlb	1	; () banked
  8281  000936  1560               	andwf	powf@hx& (0+255),w,b
  8282  000938  6FA8               	movwf	powf@ix& (0+255),b
  8283  00093A  0EFF               	movlw	255
  8284  00093C  1561               	andwf	(powf@hx+1)& (0+255),w,b
  8285  00093E  6FA9               	movwf	(powf@ix+1)& (0+255),b
  8286  000940  0EFF               	movlw	255
  8287  000942  1562               	andwf	(powf@hx+2)& (0+255),w,b
  8288  000944  6FAA               	movwf	(powf@ix+2)& (0+255),b
  8289  000946  0E7F               	movlw	127
  8290  000948  1563               	andwf	(powf@hx+3)& (0+255),w,b
  8291  00094A  6FAB               	movwf	(powf@ix+3)& (0+255),b
  8292  00094C  0EFF               	movlw	255
  8293  00094E  1584               	andwf	powf@hy& (0+255),w,b
  8294  000950  6F98               	movwf	powf@iy& (0+255),b
  8295  000952  0EFF               	movlw	255
  8296  000954  1585               	andwf	(powf@hy+1)& (0+255),w,b
  8297  000956  6F99               	movwf	(powf@iy+1)& (0+255),b
  8298  000958  0EFF               	movlw	255
  8299  00095A  1586               	andwf	(powf@hy+2)& (0+255),w,b
  8300  00095C  6F9A               	movwf	(powf@iy+2)& (0+255),b
  8301  00095E  0E7F               	movlw	127
  8302  000960  1587               	andwf	(powf@hy+3)& (0+255),w,b
  8303  000962  6F9B               	movwf	(powf@iy+3)& (0+255),b
  8304  000964  5198               	movf	powf@iy& (0+255),w,b
  8305  000966  1199               	iorwf	(powf@iy+1)& (0+255),w,b
  8306  000968  119A               	iorwf	(powf@iy+2)& (0+255),w,b
  8307  00096A  119B               	iorwf	(powf@iy+3)& (0+255),w,b
  8308  00096C  A4D8               	btfss	status,2,c
  8309  00096E  EFBB  F004         	goto	u6831
  8310  000972  EFBD  F004         	goto	u6830
  8311  000976                     u6831:
  8312  000976  EFC8  F004         	goto	l5506
  8313  00097A                     u6830:
  8314  00097A                     
  8315                           ; BSR set to: 1
  8316  00097A  0E00               	movlw	0
  8317  00097C  0100               	movlb	0	; () banked
  8318  00097E  6FAC               	movwf	?_powf& (0+255),b
  8319  000980  0E00               	movlw	0
  8320  000982  6FAD               	movwf	(?_powf+1)& (0+255),b
  8321  000984  0E80               	movlw	128
  8322  000986  6FAE               	movwf	(?_powf+2)& (0+255),b
  8323  000988  0E3F               	movlw	63
  8324  00098A  6FAF               	movwf	(?_powf+3)& (0+255),b
  8325  00098C  EF81  F019         	goto	l1220
  8326  000990                     l5506:
  8327                           
  8328                           ; BSR set to: 1
  8329  000990  0E80               	movlw	128
  8330  000992  1962               	xorwf	(powf@hx+2)& (0+255),w,b
  8331  000994  E109               	bnz	u6841
  8332  000996  0E3F               	movlw	63
  8333  000998  1963               	xorwf	(powf@hx+3)& (0+255),w,b
  8334  00099A  1160               	iorwf	powf@hx& (0+255),w,b
  8335  00099C  1161               	iorwf	(powf@hx+1)& (0+255),w,b
  8336  00099E  A4D8               	btfss	status,2,c
  8337  0009A0  EFD4  F004         	goto	u6841
  8338  0009A4  EFD6  F004         	goto	u6840
  8339  0009A8                     u6841:
  8340  0009A8  EFE1  F004         	goto	l5512
  8341  0009AC                     u6840:
  8342  0009AC                     
  8343                           ; BSR set to: 1
  8344  0009AC  0E00               	movlw	0
  8345  0009AE  0100               	movlb	0	; () banked
  8346  0009B0  6FAC               	movwf	?_powf& (0+255),b
  8347  0009B2  0E00               	movlw	0
  8348  0009B4  6FAD               	movwf	(?_powf+1)& (0+255),b
  8349  0009B6  0E80               	movlw	128
  8350  0009B8  6FAE               	movwf	(?_powf+2)& (0+255),b
  8351  0009BA  0E3F               	movlw	63
  8352  0009BC  6FAF               	movwf	(?_powf+3)& (0+255),b
  8353  0009BE  EF81  F019         	goto	l1220
  8354  0009C2                     l5512:
  8355                           
  8356                           ; BSR set to: 1
  8357  0009C2  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  8358  0009C4  EFF2  F004         	goto	u6850
  8359  0009C8  05A8               	decf	powf@ix& (0+255),w,b
  8360  0009CA  0E00               	movlw	0
  8361  0009CC  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  8362  0009CE  0E80               	movlw	128
  8363  0009D0  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  8364  0009D2  0E7F               	movlw	127
  8365  0009D4  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  8366  0009D6  B0D8               	btfsc	status,0,c
  8367  0009D8  EFF0  F004         	goto	u6851
  8368  0009DC  EFF2  F004         	goto	u6850
  8369  0009E0                     u6851:
  8370  0009E0  EF03  F005         	goto	l5516
  8371  0009E4                     u6850:
  8372  0009E4                     
  8373                           ; BSR set to: 1
  8374  0009E4  BF9B               	btfsc	(powf@iy+3)& (0+255),7,b
  8375  0009E6  EF01  F005         	goto	u6861
  8376  0009EA  0598               	decf	powf@iy& (0+255),w,b
  8377  0009EC  0E00               	movlw	0
  8378  0009EE  5999               	subwfb	(powf@iy+1)& (0+255),w,b
  8379  0009F0  0E80               	movlw	128
  8380  0009F2  599A               	subwfb	(powf@iy+2)& (0+255),w,b
  8381  0009F4  0E7F               	movlw	127
  8382  0009F6  599B               	subwfb	(powf@iy+3)& (0+255),w,b
  8383  0009F8  A0D8               	btfss	status,0,c
  8384  0009FA  EF01  F005         	goto	u6861
  8385  0009FE  EF03  F005         	goto	u6860
  8386  000A02                     u6861:
  8387  000A02  EF1F  F005         	goto	l5520
  8388  000A06                     u6860:
  8389  000A06                     l5516:
  8390                           
  8391                           ; BSR set to: 1
  8392  000A06  C0AC  F047         	movff	powf@x,___fladd@b
  8393  000A0A  C0AD  F048         	movff	powf@x+1,___fladd@b+1
  8394  000A0E  C0AE  F049         	movff	powf@x+2,___fladd@b+2
  8395  000A12  C0AF  F04A         	movff	powf@x+3,___fladd@b+3
  8396  000A16  C0B0  F04B         	movff	powf@y,___fladd@a
  8397  000A1A  C0B1  F04C         	movff	powf@y+1,___fladd@a+1
  8398  000A1E  C0B2  F04D         	movff	powf@y+2,___fladd@a+2
  8399  000A22  C0B3  F04E         	movff	powf@y+3,___fladd@a+3
  8400  000A26  EC13  F026         	call	___fladd	;wreg free
  8401  000A2A  C047  F0AC         	movff	?___fladd,?_powf
  8402  000A2E  C048  F0AD         	movff	?___fladd+1,?_powf+1
  8403  000A32  C049  F0AE         	movff	?___fladd+2,?_powf+2
  8404  000A36  C04A  F0AF         	movff	?___fladd+3,?_powf+3
  8405  000A3A  EF81  F019         	goto	l1220
  8406  000A3E                     l5520:
  8407                           
  8408                           ; BSR set to: 1
  8409  000A3E  0E00               	movlw	0
  8410  000A40  6F50               	movwf	powf@yisint& (0+255),b
  8411  000A42  0E00               	movlw	0
  8412  000A44  6F51               	movwf	(powf@yisint+1)& (0+255),b
  8413  000A46  0E00               	movlw	0
  8414  000A48  6F52               	movwf	(powf@yisint+2)& (0+255),b
  8415  000A4A  0E00               	movlw	0
  8416  000A4C  6F53               	movwf	(powf@yisint+3)& (0+255),b
  8417  000A4E                     
  8418                           ; BSR set to: 1
  8419  000A4E  BF63               	btfsc	(powf@hx+3)& (0+255),7,b
  8420  000A50  EF2E  F005         	goto	u6870
  8421  000A54  EF2C  F005         	goto	u6871
  8422  000A58                     u6871:
  8423  000A58  EFFA  F005         	goto	l1225
  8424  000A5C                     u6870:
  8425  000A5C                     
  8426                           ; BSR set to: 1
  8427  000A5C  BF9B               	btfsc	(powf@iy+3)& (0+255),7,b
  8428  000A5E  EF3A  F005         	goto	u6881
  8429  000A62  0E80               	movlw	128
  8430  000A64  5D9A               	subwf	(powf@iy+2)& (0+255),w,b
  8431  000A66  0E4B               	movlw	75
  8432  000A68  599B               	subwfb	(powf@iy+3)& (0+255),w,b
  8433  000A6A  A0D8               	btfss	status,0,c
  8434  000A6C  EF3A  F005         	goto	u6881
  8435  000A70  EF3C  F005         	goto	u6880
  8436  000A74                     u6881:
  8437  000A74  EF46  F005         	goto	l5528
  8438  000A78                     u6880:
  8439  000A78                     
  8440                           ; BSR set to: 1
  8441  000A78  0E02               	movlw	2
  8442  000A7A  6F50               	movwf	powf@yisint& (0+255),b
  8443  000A7C  0E00               	movlw	0
  8444  000A7E  6F51               	movwf	(powf@yisint+1)& (0+255),b
  8445  000A80  0E00               	movlw	0
  8446  000A82  6F52               	movwf	(powf@yisint+2)& (0+255),b
  8447  000A84  0E00               	movlw	0
  8448  000A86  6F53               	movwf	(powf@yisint+3)& (0+255),b
  8449  000A88  EFFA  F005         	goto	l1225
  8450  000A8C                     l5528:
  8451                           
  8452                           ; BSR set to: 1
  8453  000A8C  BF9B               	btfsc	(powf@iy+3)& (0+255),7,b
  8454  000A8E  EF52  F005         	goto	u6891
  8455  000A92  0E80               	movlw	128
  8456  000A94  5D9A               	subwf	(powf@iy+2)& (0+255),w,b
  8457  000A96  0E3F               	movlw	63
  8458  000A98  599B               	subwfb	(powf@iy+3)& (0+255),w,b
  8459  000A9A  A0D8               	btfss	status,0,c
  8460  000A9C  EF52  F005         	goto	u6891
  8461  000AA0  EF54  F005         	goto	u6890
  8462  000AA4                     u6891:
  8463  000AA4  EFFA  F005         	goto	l1225
  8464  000AA8                     u6890:
  8465  000AA8                     
  8466                           ; BSR set to: 1
  8467  000AA8  0E17               	movlw	23
  8468  000AAA  0100               	movlb	0	; () banked
  8469  000AAC  6FB4               	movwf	??_powf& (0+255),b
  8470  000AAE  C198  F0B5         	movff	powf@iy,??_powf+1
  8471  000AB2  C199  F0B6         	movff	powf@iy+1,??_powf+2
  8472  000AB6  C19A  F0B7         	movff	powf@iy+2,??_powf+3
  8473  000ABA  C19B  F0B8         	movff	powf@iy+3,??_powf+4
  8474  000ABE                     u6905:
  8475  000ABE  67B4               	tstfsz	??_powf& (0+255),b
  8476  000AC0  EF64  F005         	goto	u6906
  8477  000AC4  EF6C  F005         	goto	u6907
  8478  000AC8                     u6906:
  8479  000AC8  35B8               	rlcf	(??_powf+4)& (0+255),w,b
  8480  000ACA  33B8               	rrcf	(??_powf+4)& (0+255),f,b
  8481  000ACC  33B7               	rrcf	(??_powf+3)& (0+255),f,b
  8482  000ACE  33B6               	rrcf	(??_powf+2)& (0+255),f,b
  8483  000AD0  33B5               	rrcf	(??_powf+1)& (0+255),f,b
  8484  000AD2  2FB4               	decfsz	??_powf& (0+255),f,b
  8485  000AD4  EF5F  F005         	goto	u6905
  8486  000AD8                     u6907:
  8487  000AD8  0E81               	movlw	129
  8488  000ADA  0100               	movlb	0	; () banked
  8489  000ADC  25B5               	addwf	(??_powf+1)& (0+255),w,b
  8490  000ADE  0101               	movlb	1	; () banked
  8491  000AE0  6FA0               	movwf	powf@k& (0+255),b
  8492  000AE2  0EFF               	movlw	255
  8493  000AE4  0100               	movlb	0	; () banked
  8494  000AE6  21B6               	addwfc	(??_powf+2)& (0+255),w,b
  8495  000AE8  0101               	movlb	1	; () banked
  8496  000AEA  6FA1               	movwf	(powf@k+1)& (0+255),b
  8497  000AEC  0EFF               	movlw	255
  8498  000AEE  0100               	movlb	0	; () banked
  8499  000AF0  21B7               	addwfc	(??_powf+3)& (0+255),w,b
  8500  000AF2  0101               	movlb	1	; () banked
  8501  000AF4  6FA2               	movwf	(powf@k+2)& (0+255),b
  8502  000AF6  0EFF               	movlw	255
  8503  000AF8  0100               	movlb	0	; () banked
  8504  000AFA  21B8               	addwfc	(??_powf+4)& (0+255),w,b
  8505  000AFC  0101               	movlb	1	; () banked
  8506  000AFE  6FA3               	movwf	(powf@k+3)& (0+255),b
  8507  000B00  51A0               	movf	powf@k& (0+255),w,b
  8508  000B02  0817               	sublw	23
  8509  000B04  0100               	movlb	0	; () banked
  8510  000B06  6FB4               	movwf	??_powf& (0+255),b
  8511  000B08  C198  F0B5         	movff	powf@iy,??_powf+1
  8512  000B0C  C199  F0B6         	movff	powf@iy+1,??_powf+2
  8513  000B10  C19A  F0B7         	movff	powf@iy+2,??_powf+3
  8514  000B14  C19B  F0B8         	movff	powf@iy+3,??_powf+4
  8515  000B18                     u6915:
  8516  000B18  67B4               	tstfsz	??_powf& (0+255),b
  8517  000B1A  EF91  F005         	goto	u6916
  8518  000B1E  EF99  F005         	goto	u6917
  8519  000B22                     u6916:
  8520  000B22  35B8               	rlcf	(??_powf+4)& (0+255),w,b
  8521  000B24  33B8               	rrcf	(??_powf+4)& (0+255),f,b
  8522  000B26  33B7               	rrcf	(??_powf+3)& (0+255),f,b
  8523  000B28  33B6               	rrcf	(??_powf+2)& (0+255),f,b
  8524  000B2A  33B5               	rrcf	(??_powf+1)& (0+255),f,b
  8525  000B2C  2FB4               	decfsz	??_powf& (0+255),f,b
  8526  000B2E  EF8C  F005         	goto	u6915
  8527  000B32                     u6917:
  8528  000B32  C0B5  F1AC         	movff	??_powf+1,powf@j
  8529  000B36  C0B6  F1AD         	movff	??_powf+2,powf@j+1
  8530  000B3A  C0B7  F1AE         	movff	??_powf+3,powf@j+2
  8531  000B3E  C0B8  F1AF         	movff	??_powf+4,powf@j+3
  8532  000B42  0101               	movlb	1	; () banked
  8533  000B44  51A0               	movf	powf@k& (0+255),w,b
  8534  000B46  0817               	sublw	23
  8535  000B48  0100               	movlb	0	; () banked
  8536  000B4A  6FB4               	movwf	??_powf& (0+255),b
  8537  000B4C  C1AC  F0B5         	movff	powf@j,??_powf+1
  8538  000B50  C1AD  F0B6         	movff	powf@j+1,??_powf+2
  8539  000B54  C1AE  F0B7         	movff	powf@j+2,??_powf+3
  8540  000B58  C1AF  F0B8         	movff	powf@j+3,??_powf+4
  8541  000B5C  2BB4               	incf	??_powf& (0+255),f,b
  8542  000B5E  EFB6  F005         	goto	u6920
  8543  000B62                     u6925:
  8544  000B62  90D8               	bcf	status,0,c
  8545  000B64  37B5               	rlcf	(??_powf+1)& (0+255),f,b
  8546  000B66  37B6               	rlcf	(??_powf+2)& (0+255),f,b
  8547  000B68  37B7               	rlcf	(??_powf+3)& (0+255),f,b
  8548  000B6A  37B8               	rlcf	(??_powf+4)& (0+255),f,b
  8549  000B6C                     u6920:
  8550  000B6C  2FB4               	decfsz	??_powf& (0+255),f,b
  8551  000B6E  EFB1  F005         	goto	u6925
  8552  000B72  0101               	movlb	1	; () banked
  8553  000B74  5198               	movf	powf@iy& (0+255),w,b
  8554  000B76  0100               	movlb	0	; () banked
  8555  000B78  19B5               	xorwf	(??_powf+1)& (0+255),w,b
  8556  000B7A  E113               	bnz	u6931
  8557  000B7C  0101               	movlb	1	; () banked
  8558  000B7E  5199               	movf	(powf@iy+1)& (0+255),w,b
  8559  000B80  0100               	movlb	0	; () banked
  8560  000B82  19B6               	xorwf	(??_powf+2)& (0+255),w,b
  8561  000B84  E10E               	bnz	u6931
  8562  000B86  0101               	movlb	1	; () banked
  8563  000B88  519A               	movf	(powf@iy+2)& (0+255),w,b
  8564  000B8A  0100               	movlb	0	; () banked
  8565  000B8C  19B7               	xorwf	(??_powf+3)& (0+255),w,b
  8566  000B8E  E109               	bnz	u6931
  8567  000B90  0101               	movlb	1	; () banked
  8568  000B92  519B               	movf	(powf@iy+3)& (0+255),w,b
  8569  000B94  0100               	movlb	0	; () banked
  8570  000B96  19B8               	xorwf	(??_powf+4)& (0+255),w,b
  8571  000B98  A4D8               	btfss	status,2,c
  8572  000B9A  EFD1  F005         	goto	u6931
  8573  000B9E  EFD3  F005         	goto	u6930
  8574  000BA2                     u6931:
  8575  000BA2  EFFA  F005         	goto	l1225
  8576  000BA6                     u6930:
  8577  000BA6                     
  8578                           ; BSR set to: 0
  8579  000BA6  0E01               	movlw	1
  8580  000BA8  0101               	movlb	1	; () banked
  8581  000BAA  15AC               	andwf	powf@j& (0+255),w,b
  8582  000BAC  0100               	movlb	0	; () banked
  8583  000BAE  6FB4               	movwf	??_powf& (0+255),b
  8584  000BB0  0E00               	movlw	0
  8585  000BB2  0101               	movlb	1	; () banked
  8586  000BB4  15AD               	andwf	(powf@j+1)& (0+255),w,b
  8587  000BB6  0100               	movlb	0	; () banked
  8588  000BB8  6FB5               	movwf	(??_powf+1)& (0+255),b
  8589  000BBA  0E00               	movlw	0
  8590  000BBC  0101               	movlb	1	; () banked
  8591  000BBE  15AE               	andwf	(powf@j+2)& (0+255),w,b
  8592  000BC0  0100               	movlb	0	; () banked
  8593  000BC2  6FB6               	movwf	(??_powf+2)& (0+255),b
  8594  000BC4  0E00               	movlw	0
  8595  000BC6  0101               	movlb	1	; () banked
  8596  000BC8  15AF               	andwf	(powf@j+3)& (0+255),w,b
  8597  000BCA  0100               	movlb	0	; () banked
  8598  000BCC  6FB7               	movwf	(??_powf+3)& (0+255),b
  8599  000BCE  51B4               	movf	??_powf& (0+255),w,b
  8600  000BD0  0802               	sublw	2
  8601  000BD2  0101               	movlb	1	; () banked
  8602  000BD4  6F50               	movwf	powf@yisint& (0+255),b
  8603  000BD6  0E00               	movlw	0
  8604  000BD8  0100               	movlb	0	; () banked
  8605  000BDA  55B5               	subfwb	(??_powf+1)& (0+255),w,b
  8606  000BDC  0101               	movlb	1	; () banked
  8607  000BDE  6F51               	movwf	(powf@yisint+1)& (0+255),b
  8608  000BE0  0E00               	movlw	0
  8609  000BE2  0100               	movlb	0	; () banked
  8610  000BE4  55B6               	subfwb	(??_powf+2)& (0+255),w,b
  8611  000BE6  0101               	movlb	1	; () banked
  8612  000BE8  6F52               	movwf	(powf@yisint+2)& (0+255),b
  8613  000BEA  0E00               	movlw	0
  8614  000BEC  0100               	movlb	0	; () banked
  8615  000BEE  55B7               	subfwb	(??_powf+3)& (0+255),w,b
  8616  000BF0  0101               	movlb	1	; () banked
  8617  000BF2  6F53               	movwf	(powf@yisint+3)& (0+255),b
  8618  000BF4                     l1225:
  8619  000BF4  0E80               	movlw	128
  8620  000BF6  0101               	movlb	1	; () banked
  8621  000BF8  199A               	xorwf	(powf@iy+2)& (0+255),w,b
  8622  000BFA  E109               	bnz	u6941
  8623  000BFC  0E7F               	movlw	127
  8624  000BFE  199B               	xorwf	(powf@iy+3)& (0+255),w,b
  8625  000C00  1198               	iorwf	powf@iy& (0+255),w,b
  8626  000C02  1199               	iorwf	(powf@iy+1)& (0+255),w,b
  8627  000C04  A4D8               	btfss	status,2,c
  8628  000C06  EF07  F006         	goto	u6941
  8629  000C0A  EF09  F006         	goto	u6940
  8630  000C0E                     u6941:
  8631  000C0E  EF75  F006         	goto	l5558
  8632  000C12                     u6940:
  8633  000C12                     
  8634                           ; BSR set to: 1
  8635  000C12  0E80               	movlw	128
  8636  000C14  19AA               	xorwf	(powf@ix+2)& (0+255),w,b
  8637  000C16  E109               	bnz	u6951
  8638  000C18  0E3F               	movlw	63
  8639  000C1A  19AB               	xorwf	(powf@ix+3)& (0+255),w,b
  8640  000C1C  11A8               	iorwf	powf@ix& (0+255),w,b
  8641  000C1E  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  8642  000C20  A4D8               	btfss	status,2,c
  8643  000C22  EF15  F006         	goto	u6951
  8644  000C26  EF17  F006         	goto	u6950
  8645  000C2A                     u6951:
  8646  000C2A  EF22  F006         	goto	l5542
  8647  000C2E                     u6950:
  8648  000C2E                     
  8649                           ; BSR set to: 1
  8650  000C2E  0E00               	movlw	0
  8651  000C30  0100               	movlb	0	; () banked
  8652  000C32  6FAC               	movwf	?_powf& (0+255),b
  8653  000C34  0E00               	movlw	0
  8654  000C36  6FAD               	movwf	(?_powf+1)& (0+255),b
  8655  000C38  0E80               	movlw	128
  8656  000C3A  6FAE               	movwf	(?_powf+2)& (0+255),b
  8657  000C3C  0E3F               	movlw	63
  8658  000C3E  6FAF               	movwf	(?_powf+3)& (0+255),b
  8659  000C40  EF81  F019         	goto	l1220
  8660  000C44                     l5542:
  8661                           
  8662                           ; BSR set to: 1
  8663  000C44  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  8664  000C46  EF31  F006         	goto	u6961
  8665  000C4A  05A8               	decf	powf@ix& (0+255),w,b
  8666  000C4C  0E00               	movlw	0
  8667  000C4E  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  8668  000C50  0E80               	movlw	128
  8669  000C52  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  8670  000C54  0E3F               	movlw	63
  8671  000C56  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  8672  000C58  A0D8               	btfss	status,0,c
  8673  000C5A  EF31  F006         	goto	u6961
  8674  000C5E  EF33  F006         	goto	u6960
  8675  000C62                     u6961:
  8676  000C62  EF4F  F006         	goto	l5550
  8677  000C66                     u6960:
  8678  000C66                     
  8679                           ; BSR set to: 1
  8680  000C66  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  8681  000C68  EF3A  F006         	goto	u6970
  8682  000C6C  EF38  F006         	goto	u6971
  8683  000C70                     u6971:
  8684  000C70  EF45  F006         	goto	l1235
  8685  000C74                     u6970:
  8686  000C74                     
  8687                           ; BSR set to: 1
  8688  000C74  0E00               	movlw	0
  8689  000C76  0100               	movlb	0	; () banked
  8690  000C78  6FAC               	movwf	?_powf& (0+255),b
  8691  000C7A  0E00               	movlw	0
  8692  000C7C  6FAD               	movwf	(?_powf+1)& (0+255),b
  8693  000C7E  0E00               	movlw	0
  8694  000C80  6FAE               	movwf	(?_powf+2)& (0+255),b
  8695  000C82  0E00               	movlw	0
  8696  000C84  6FAF               	movwf	(?_powf+3)& (0+255),b
  8697  000C86  EF81  F019         	goto	l1220
  8698  000C8A                     l1235:
  8699                           
  8700                           ; BSR set to: 1
  8701  000C8A  C0B0  F0AC         	movff	powf@y,?_powf
  8702  000C8E  C0B1  F0AD         	movff	powf@y+1,?_powf+1
  8703  000C92  C0B2  F0AE         	movff	powf@y+2,?_powf+2
  8704  000C96  C0B3  F0AF         	movff	powf@y+3,?_powf+3
  8705  000C9A  EF81  F019         	goto	l1220
  8706  000C9E                     l5550:
  8707                           
  8708                           ; BSR set to: 1
  8709  000C9E  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  8710  000CA0  EF56  F006         	goto	u6980
  8711  000CA4  EF54  F006         	goto	u6981
  8712  000CA8                     u6981:
  8713  000CA8  EF6A  F006         	goto	l5554
  8714  000CAC                     u6980:
  8715  000CAC                     
  8716                           ; BSR set to: 1
  8717  000CAC  C0B0  F001         	movff	powf@y,___flneg@f1
  8718  000CB0  C0B1  F002         	movff	powf@y+1,___flneg@f1+1
  8719  000CB4  C0B2  F003         	movff	powf@y+2,___flneg@f1+2
  8720  000CB8  C0B3  F004         	movff	powf@y+3,___flneg@f1+3
  8721  000CBC  ECD1  F03D         	call	___flneg	;wreg free
  8722  000CC0  C001  F0AC         	movff	?___flneg,?_powf
  8723  000CC4  C002  F0AD         	movff	?___flneg+1,?_powf+1
  8724  000CC8  C003  F0AE         	movff	?___flneg+2,?_powf+2
  8725  000CCC  C004  F0AF         	movff	?___flneg+3,?_powf+3
  8726  000CD0  EF81  F019         	goto	l1220
  8727  000CD4                     l5554:
  8728                           
  8729                           ; BSR set to: 1
  8730  000CD4  0E00               	movlw	0
  8731  000CD6  0100               	movlb	0	; () banked
  8732  000CD8  6FAC               	movwf	?_powf& (0+255),b
  8733  000CDA  0E00               	movlw	0
  8734  000CDC  6FAD               	movwf	(?_powf+1)& (0+255),b
  8735  000CDE  0E00               	movlw	0
  8736  000CE0  6FAE               	movwf	(?_powf+2)& (0+255),b
  8737  000CE2  0E00               	movlw	0
  8738  000CE4  6FAF               	movwf	(?_powf+3)& (0+255),b
  8739  000CE6  EF81  F019         	goto	l1220
  8740  000CEA                     l5558:
  8741                           
  8742                           ; BSR set to: 1
  8743  000CEA  0E80               	movlw	128
  8744  000CEC  199A               	xorwf	(powf@iy+2)& (0+255),w,b
  8745  000CEE  E109               	bnz	u6991
  8746  000CF0  0E3F               	movlw	63
  8747  000CF2  199B               	xorwf	(powf@iy+3)& (0+255),w,b
  8748  000CF4  1198               	iorwf	powf@iy& (0+255),w,b
  8749  000CF6  1199               	iorwf	(powf@iy+1)& (0+255),w,b
  8750  000CF8  A4D8               	btfss	status,2,c
  8751  000CFA  EF81  F006         	goto	u6991
  8752  000CFE  EF83  F006         	goto	u6990
  8753  000D02                     u6991:
  8754  000D02  EFB0  F006         	goto	l5564
  8755  000D06                     u6990:
  8756  000D06                     
  8757                           ; BSR set to: 1
  8758  000D06  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  8759  000D08  EF8A  F006         	goto	u7000
  8760  000D0C  EF88  F006         	goto	u7001
  8761  000D10                     u7001:
  8762  000D10  EFA6  F006         	goto	l1245
  8763  000D14                     u7000:
  8764  000D14                     
  8765                           ; BSR set to: 1
  8766  000D14  0E00               	movlw	0
  8767  000D16  6E28               	movwf	___fldiv@b^0,c
  8768  000D18  0E00               	movlw	0
  8769  000D1A  6E29               	movwf	(___fldiv@b+1)^0,c
  8770  000D1C  0E80               	movlw	128
  8771  000D1E  6E2A               	movwf	(___fldiv@b+2)^0,c
  8772  000D20  0E3F               	movlw	63
  8773  000D22  6E2B               	movwf	(___fldiv@b+3)^0,c
  8774  000D24  C0AC  F02C         	movff	powf@x,___fldiv@a
  8775  000D28  C0AD  F02D         	movff	powf@x+1,___fldiv@a+1
  8776  000D2C  C0AE  F02E         	movff	powf@x+2,___fldiv@a+2
  8777  000D30  C0AF  F02F         	movff	powf@x+3,___fldiv@a+3
  8778  000D34  ECE7  F02C         	call	___fldiv	;wreg free
  8779  000D38  C028  F0AC         	movff	?___fldiv,?_powf
  8780  000D3C  C029  F0AD         	movff	?___fldiv+1,?_powf+1
  8781  000D40  C02A  F0AE         	movff	?___fldiv+2,?_powf+2
  8782  000D44  C02B  F0AF         	movff	?___fldiv+3,?_powf+3
  8783  000D48  EF81  F019         	goto	l1220
  8784  000D4C                     l1245:
  8785                           
  8786                           ; BSR set to: 1
  8787  000D4C  C0AC  F0AC         	movff	powf@x,?_powf
  8788  000D50  C0AD  F0AD         	movff	powf@x+1,?_powf+1
  8789  000D54  C0AE  F0AE         	movff	powf@x+2,?_powf+2
  8790  000D58  C0AF  F0AF         	movff	powf@x+3,?_powf+3
  8791  000D5C  EF81  F019         	goto	l1220
  8792  000D60                     l5564:
  8793                           
  8794                           ; BSR set to: 1
  8795  000D60  0E40               	movlw	64
  8796  000D62  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  8797  000D64  1184               	iorwf	powf@hy& (0+255),w,b
  8798  000D66  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  8799  000D68  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  8800  000D6A  A4D8               	btfss	status,2,c
  8801  000D6C  EFBA  F006         	goto	u7011
  8802  000D70  EFBC  F006         	goto	u7010
  8803  000D74                     u7011:
  8804  000D74  EFD8  F006         	goto	l5570
  8805  000D78                     u7010:
  8806  000D78                     
  8807                           ; BSR set to: 1
  8808  000D78  C0AC  F00F         	movff	powf@x,___flmul@b
  8809  000D7C  C0AD  F010         	movff	powf@x+1,___flmul@b+1
  8810  000D80  C0AE  F011         	movff	powf@x+2,___flmul@b+2
  8811  000D84  C0AF  F012         	movff	powf@x+3,___flmul@b+3
  8812  000D88  C0AC  F013         	movff	powf@x,___flmul@a
  8813  000D8C  C0AD  F014         	movff	powf@x+1,___flmul@a+1
  8814  000D90  C0AE  F015         	movff	powf@x+2,___flmul@a+2
  8815  000D94  C0AF  F016         	movff	powf@x+3,___flmul@a+3
  8816  000D98  ECD2  F02A         	call	___flmul	;wreg free
  8817  000D9C  C00F  F0AC         	movff	?___flmul,?_powf
  8818  000DA0  C010  F0AD         	movff	?___flmul+1,?_powf+1
  8819  000DA4  C011  F0AE         	movff	?___flmul+2,?_powf+2
  8820  000DA8  C012  F0AF         	movff	?___flmul+3,?_powf+3
  8821  000DAC  EF81  F019         	goto	l1220
  8822  000DB0                     l5570:
  8823                           
  8824                           ; BSR set to: 1
  8825  000DB0  0E3F               	movlw	63
  8826  000DB2  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  8827  000DB4  1184               	iorwf	powf@hy& (0+255),w,b
  8828  000DB6  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  8829  000DB8  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  8830  000DBA  A4D8               	btfss	status,2,c
  8831  000DBC  EFE2  F006         	goto	u7021
  8832  000DC0  EFE4  F006         	goto	u7020
  8833  000DC4                     u7021:
  8834  000DC4  EFFF  F006         	goto	l5578
  8835  000DC8                     u7020:
  8836  000DC8                     
  8837                           ; BSR set to: 1
  8838  000DC8  BF63               	btfsc	(powf@hx+3)& (0+255),7,b
  8839  000DCA  EFE9  F006         	goto	u7031
  8840  000DCE  EFEB  F006         	goto	u7030
  8841  000DD2                     u7031:
  8842  000DD2  EFFF  F006         	goto	l5578
  8843  000DD6                     u7030:
  8844  000DD6                     
  8845                           ; BSR set to: 1
  8846  000DD6  C0AC  F06C         	movff	powf@x,sqrtf@x
  8847  000DDA  C0AD  F06D         	movff	powf@x+1,sqrtf@x+1
  8848  000DDE  C0AE  F06E         	movff	powf@x+2,sqrtf@x+2
  8849  000DE2  C0AF  F06F         	movff	powf@x+3,sqrtf@x+3
  8850  000DE6  EC73  F028         	call	_sqrtf	;wreg free
  8851  000DEA  C06C  F0AC         	movff	?_sqrtf,?_powf
  8852  000DEE  C06D  F0AD         	movff	?_sqrtf+1,?_powf+1
  8853  000DF2  C06E  F0AE         	movff	?_sqrtf+2,?_powf+2
  8854  000DF6  C06F  F0AF         	movff	?_sqrtf+3,?_powf+3
  8855  000DFA  EF81  F019         	goto	l1220
  8856  000DFE                     l5578:
  8857                           
  8858                           ; BSR set to: 1
  8859  000DFE  C0AC  F001         	movff	powf@x,fabsf@x
  8860  000E02  C0AD  F002         	movff	powf@x+1,fabsf@x+1
  8861  000E06  C0AE  F003         	movff	powf@x+2,fabsf@x+2
  8862  000E0A  C0AF  F004         	movff	powf@x+3,fabsf@x+3
  8863  000E0E  EC08  F03E         	call	_fabsf	;wreg free
  8864  000E12  C001  F170         	movff	?_fabsf,powf@ax
  8865  000E16  C002  F171         	movff	?_fabsf+1,powf@ax+1
  8866  000E1A  C003  F172         	movff	?_fabsf+2,powf@ax+2
  8867  000E1E  C004  F173         	movff	?_fabsf+3,powf@ax+3
  8868  000E22  0E80               	movlw	128
  8869  000E24  0101               	movlb	1	; () banked
  8870  000E26  19AA               	xorwf	(powf@ix+2)& (0+255),w,b
  8871  000E28  E10B               	bnz	u7040
  8872  000E2A  0E7F               	movlw	127
  8873  000E2C  19AB               	xorwf	(powf@ix+3)& (0+255),w,b
  8874  000E2E  11A8               	iorwf	powf@ix& (0+255),w,b
  8875  000E30  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  8876  000E32  B4D8               	btfsc	status,2,c
  8877  000E34  EF1E  F007         	goto	u7041
  8878  000E38  EF20  F007         	goto	u7040
  8879  000E3C                     u7041:
  8880  000E3C  EF39  F007         	goto	l1253
  8881  000E40                     u7040:
  8882  000E40                     
  8883                           ; BSR set to: 1
  8884  000E40  51A8               	movf	powf@ix& (0+255),w,b
  8885  000E42  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  8886  000E44  11AA               	iorwf	(powf@ix+2)& (0+255),w,b
  8887  000E46  11AB               	iorwf	(powf@ix+3)& (0+255),w,b
  8888  000E48  B4D8               	btfsc	status,2,c
  8889  000E4A  EF29  F007         	goto	u7051
  8890  000E4E  EF2B  F007         	goto	u7050
  8891  000E52                     u7051:
  8892  000E52  EF39  F007         	goto	l1253
  8893  000E56                     u7050:
  8894  000E56                     
  8895                           ; BSR set to: 1
  8896  000E56  0E80               	movlw	128
  8897  000E58  19AA               	xorwf	(powf@ix+2)& (0+255),w,b
  8898  000E5A  E109               	bnz	u7061
  8899  000E5C  0E3F               	movlw	63
  8900  000E5E  19AB               	xorwf	(powf@ix+3)& (0+255),w,b
  8901  000E60  11A8               	iorwf	powf@ix& (0+255),w,b
  8902  000E62  11A9               	iorwf	(powf@ix+1)& (0+255),w,b
  8903  000E64  A4D8               	btfss	status,2,c
  8904  000E66  EF37  F007         	goto	u7061
  8905  000E6A  EF39  F007         	goto	u7060
  8906  000E6E                     u7061:
  8907  000E6E  EF04  F008         	goto	l5604
  8908  000E72                     u7060:
  8909  000E72                     l1253:
  8910                           
  8911                           ; BSR set to: 1
  8912  000E72  C170  F1B4         	movff	powf@ax,powf@z
  8913  000E76  C171  F1B5         	movff	powf@ax+1,powf@z+1
  8914  000E7A  C172  F1B6         	movff	powf@ax+2,powf@z+2
  8915  000E7E  C173  F1B7         	movff	powf@ax+3,powf@z+3
  8916  000E82                     
  8917                           ; BSR set to: 1
  8918  000E82  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  8919  000E84  EF48  F007         	goto	u7070
  8920  000E88  EF46  F007         	goto	u7071
  8921  000E8C                     u7071:
  8922  000E8C  EF62  F007         	goto	l5590
  8923  000E90                     u7070:
  8924  000E90                     
  8925                           ; BSR set to: 1
  8926  000E90  0E00               	movlw	0
  8927  000E92  6E28               	movwf	___fldiv@b^0,c
  8928  000E94  0E00               	movlw	0
  8929  000E96  6E29               	movwf	(___fldiv@b+1)^0,c
  8930  000E98  0E80               	movlw	128
  8931  000E9A  6E2A               	movwf	(___fldiv@b+2)^0,c
  8932  000E9C  0E3F               	movlw	63
  8933  000E9E  6E2B               	movwf	(___fldiv@b+3)^0,c
  8934  000EA0  C1B4  F02C         	movff	powf@z,___fldiv@a
  8935  000EA4  C1B5  F02D         	movff	powf@z+1,___fldiv@a+1
  8936  000EA8  C1B6  F02E         	movff	powf@z+2,___fldiv@a+2
  8937  000EAC  C1B7  F02F         	movff	powf@z+3,___fldiv@a+3
  8938  000EB0  ECE7  F02C         	call	___fldiv	;wreg free
  8939  000EB4  C028  F1B4         	movff	?___fldiv,powf@z
  8940  000EB8  C029  F1B5         	movff	?___fldiv+1,powf@z+1
  8941  000EBC  C02A  F1B6         	movff	?___fldiv+2,powf@z+2
  8942  000EC0  C02B  F1B7         	movff	?___fldiv+3,powf@z+3
  8943  000EC4                     l5590:
  8944  000EC4  0101               	movlb	1	; () banked
  8945  000EC6  BF63               	btfsc	(powf@hx+3)& (0+255),7,b
  8946  000EC8  EF6A  F007         	goto	u7080
  8947  000ECC  EF68  F007         	goto	u7081
  8948  000ED0                     u7081:
  8949  000ED0  EFFA  F007         	goto	l5600
  8950  000ED4                     u7080:
  8951  000ED4                     
  8952                           ; BSR set to: 1
  8953  000ED4  0E00               	movlw	0
  8954  000ED6  25A8               	addwf	powf@ix& (0+255),w,b
  8955  000ED8  0100               	movlb	0	; () banked
  8956  000EDA  6FB4               	movwf	??_powf& (0+255),b
  8957  000EDC  0E00               	movlw	0
  8958  000EDE  0101               	movlb	1	; () banked
  8959  000EE0  21A9               	addwfc	(powf@ix+1)& (0+255),w,b
  8960  000EE2  0100               	movlb	0	; () banked
  8961  000EE4  6FB5               	movwf	(??_powf+1)& (0+255),b
  8962  000EE6  0E80               	movlw	128
  8963  000EE8  0101               	movlb	1	; () banked
  8964  000EEA  21AA               	addwfc	(powf@ix+2)& (0+255),w,b
  8965  000EEC  0100               	movlb	0	; () banked
  8966  000EEE  6FB6               	movwf	(??_powf+2)& (0+255),b
  8967  000EF0  0EC0               	movlw	192
  8968  000EF2  0101               	movlb	1	; () banked
  8969  000EF4  21AB               	addwfc	(powf@ix+3)& (0+255),w,b
  8970  000EF6  0100               	movlb	0	; () banked
  8971  000EF8  6FB7               	movwf	(??_powf+3)& (0+255),b
  8972  000EFA  0101               	movlb	1	; () banked
  8973  000EFC  5150               	movf	powf@yisint& (0+255),w,b
  8974  000EFE  0100               	movlb	0	; () banked
  8975  000F00  11B4               	iorwf	??_powf& (0+255),w,b
  8976  000F02  6FB8               	movwf	(??_powf+4)& (0+255),b
  8977  000F04  0101               	movlb	1	; () banked
  8978  000F06  5151               	movf	(powf@yisint+1)& (0+255),w,b
  8979  000F08  0100               	movlb	0	; () banked
  8980  000F0A  11B5               	iorwf	(??_powf+1)& (0+255),w,b
  8981  000F0C  6FB9               	movwf	(??_powf+5)& (0+255),b
  8982  000F0E  0101               	movlb	1	; () banked
  8983  000F10  5152               	movf	(powf@yisint+2)& (0+255),w,b
  8984  000F12  0100               	movlb	0	; () banked
  8985  000F14  11B6               	iorwf	(??_powf+2)& (0+255),w,b
  8986  000F16  6FBA               	movwf	(??_powf+6)& (0+255),b
  8987  000F18  0101               	movlb	1	; () banked
  8988  000F1A  5153               	movf	(powf@yisint+3)& (0+255),w,b
  8989  000F1C  0100               	movlb	0	; () banked
  8990  000F1E  11B7               	iorwf	(??_powf+3)& (0+255),w,b
  8991  000F20  6FBB               	movwf	(??_powf+7)& (0+255),b
  8992  000F22  51B8               	movf	(??_powf+4)& (0+255),w,b
  8993  000F24  11B9               	iorwf	(??_powf+5)& (0+255),w,b
  8994  000F26  11BA               	iorwf	(??_powf+6)& (0+255),w,b
  8995  000F28  11BB               	iorwf	(??_powf+7)& (0+255),w,b
  8996  000F2A  A4D8               	btfss	status,2,c
  8997  000F2C  EF9A  F007         	goto	u7091
  8998  000F30  EF9C  F007         	goto	u7090
  8999  000F34                     u7091:
  9000  000F34  EFDC  F007         	goto	l5596
  9001  000F38                     u7090:
  9002  000F38                     
  9003                           ; BSR set to: 0
  9004  000F38  C1B4  F05B         	movff	powf@z,___flsub@a
  9005  000F3C  C1B5  F05C         	movff	powf@z+1,___flsub@a+1
  9006  000F40  C1B6  F05D         	movff	powf@z+2,___flsub@a+2
  9007  000F44  C1B7  F05E         	movff	powf@z+3,___flsub@a+3
  9008  000F48  C1B4  F057         	movff	powf@z,___flsub@b
  9009  000F4C  C1B5  F058         	movff	powf@z+1,___flsub@b+1
  9010  000F50  C1B6  F059         	movff	powf@z+2,___flsub@b+2
  9011  000F54  C1B7  F05A         	movff	powf@z+3,___flsub@b+3
  9012  000F58  EC14  F03D         	call	___flsub	;wreg free
  9013  000F5C  C057  F028         	movff	?___flsub,___fldiv@b
  9014  000F60  C058  F029         	movff	?___flsub+1,___fldiv@b+1
  9015  000F64  C059  F02A         	movff	?___flsub+2,___fldiv@b+2
  9016  000F68  C05A  F02B         	movff	?___flsub+3,___fldiv@b+3
  9017  000F6C  C1B4  F05B         	movff	powf@z,___flsub@a
  9018  000F70  C1B5  F05C         	movff	powf@z+1,___flsub@a+1
  9019  000F74  C1B6  F05D         	movff	powf@z+2,___flsub@a+2
  9020  000F78  C1B7  F05E         	movff	powf@z+3,___flsub@a+3
  9021  000F7C  C1B4  F057         	movff	powf@z,___flsub@b
  9022  000F80  C1B5  F058         	movff	powf@z+1,___flsub@b+1
  9023  000F84  C1B6  F059         	movff	powf@z+2,___flsub@b+2
  9024  000F88  C1B7  F05A         	movff	powf@z+3,___flsub@b+3
  9025  000F8C  EC14  F03D         	call	___flsub	;wreg free
  9026  000F90  C057  F02C         	movff	?___flsub,___fldiv@a
  9027  000F94  C058  F02D         	movff	?___flsub+1,___fldiv@a+1
  9028  000F98  C059  F02E         	movff	?___flsub+2,___fldiv@a+2
  9029  000F9C  C05A  F02F         	movff	?___flsub+3,___fldiv@a+3
  9030  000FA0  ECE7  F02C         	call	___fldiv	;wreg free
  9031  000FA4  C028  F1B4         	movff	?___fldiv,powf@z
  9032  000FA8  C029  F1B5         	movff	?___fldiv+1,powf@z+1
  9033  000FAC  C02A  F1B6         	movff	?___fldiv+2,powf@z+2
  9034  000FB0  C02B  F1B7         	movff	?___fldiv+3,powf@z+3
  9035  000FB4  EFFA  F007         	goto	l5600
  9036  000FB8                     l5596:
  9037                           
  9038                           ; BSR set to: 0
  9039  000FB8  0101               	movlb	1	; () banked
  9040  000FBA  0550               	decf	powf@yisint& (0+255),w,b
  9041  000FBC  1151               	iorwf	(powf@yisint+1)& (0+255),w,b
  9042  000FBE  1152               	iorwf	(powf@yisint+2)& (0+255),w,b
  9043  000FC0  1153               	iorwf	(powf@yisint+3)& (0+255),w,b
  9044  000FC2  A4D8               	btfss	status,2,c
  9045  000FC4  EFE6  F007         	goto	u7101
  9046  000FC8  EFE8  F007         	goto	u7100
  9047  000FCC                     u7101:
  9048  000FCC  EFFA  F007         	goto	l5600
  9049  000FD0                     u7100:
  9050  000FD0                     
  9051                           ; BSR set to: 1
  9052  000FD0  C1B4  F001         	movff	powf@z,___flneg@f1
  9053  000FD4  C1B5  F002         	movff	powf@z+1,___flneg@f1+1
  9054  000FD8  C1B6  F003         	movff	powf@z+2,___flneg@f1+2
  9055  000FDC  C1B7  F004         	movff	powf@z+3,___flneg@f1+3
  9056  000FE0  ECD1  F03D         	call	___flneg	;wreg free
  9057  000FE4  C001  F1B4         	movff	?___flneg,powf@z
  9058  000FE8  C002  F1B5         	movff	?___flneg+1,powf@z+1
  9059  000FEC  C003  F1B6         	movff	?___flneg+2,powf@z+2
  9060  000FF0  C004  F1B7         	movff	?___flneg+3,powf@z+3
  9061  000FF4                     l5600:
  9062  000FF4  C1B4  F0AC         	movff	powf@z,?_powf
  9063  000FF8  C1B5  F0AD         	movff	powf@z+1,?_powf+1
  9064  000FFC  C1B6  F0AE         	movff	powf@z+2,?_powf+2
  9065  001000  C1B7  F0AF         	movff	powf@z+3,?_powf+3
  9066  001004  EF81  F019         	goto	l1220
  9067  001008                     l5604:
  9068                           
  9069                           ; BSR set to: 1
  9070  001008  0E00               	movlw	0
  9071  00100A  6F88               	movwf	powf@sn& (0+255),b
  9072  00100C  0E00               	movlw	0
  9073  00100E  6F89               	movwf	(powf@sn+1)& (0+255),b
  9074  001010  0E80               	movlw	128
  9075  001012  6F8A               	movwf	(powf@sn+2)& (0+255),b
  9076  001014  0E3F               	movlw	63
  9077  001016  6F8B               	movwf	(powf@sn+3)& (0+255),b
  9078  001018                     
  9079                           ; BSR set to: 1
  9080  001018  BF63               	btfsc	(powf@hx+3)& (0+255),7,b
  9081  00101A  EF13  F008         	goto	u7110
  9082  00101E  EF11  F008         	goto	u7111
  9083  001022                     u7111:
  9084  001022  EF71  F008         	goto	l5618
  9085  001026                     u7110:
  9086  001026                     
  9087                           ; BSR set to: 1
  9088  001026  5150               	movf	powf@yisint& (0+255),w,b
  9089  001028  1151               	iorwf	(powf@yisint+1)& (0+255),w,b
  9090  00102A  1152               	iorwf	(powf@yisint+2)& (0+255),w,b
  9091  00102C  1153               	iorwf	(powf@yisint+3)& (0+255),w,b
  9092  00102E  A4D8               	btfss	status,2,c
  9093  001030  EF1C  F008         	goto	u7121
  9094  001034  EF1E  F008         	goto	u7120
  9095  001038                     u7121:
  9096  001038  EF5E  F008         	goto	l5614
  9097  00103C                     u7120:
  9098  00103C                     
  9099                           ; BSR set to: 1
  9100  00103C  C0AC  F05B         	movff	powf@x,___flsub@a
  9101  001040  C0AD  F05C         	movff	powf@x+1,___flsub@a+1
  9102  001044  C0AE  F05D         	movff	powf@x+2,___flsub@a+2
  9103  001048  C0AF  F05E         	movff	powf@x+3,___flsub@a+3
  9104  00104C  C0AC  F057         	movff	powf@x,___flsub@b
  9105  001050  C0AD  F058         	movff	powf@x+1,___flsub@b+1
  9106  001054  C0AE  F059         	movff	powf@x+2,___flsub@b+2
  9107  001058  C0AF  F05A         	movff	powf@x+3,___flsub@b+3
  9108  00105C  EC14  F03D         	call	___flsub	;wreg free
  9109  001060  C057  F028         	movff	?___flsub,___fldiv@b
  9110  001064  C058  F029         	movff	?___flsub+1,___fldiv@b+1
  9111  001068  C059  F02A         	movff	?___flsub+2,___fldiv@b+2
  9112  00106C  C05A  F02B         	movff	?___flsub+3,___fldiv@b+3
  9113  001070  C0AC  F05B         	movff	powf@x,___flsub@a
  9114  001074  C0AD  F05C         	movff	powf@x+1,___flsub@a+1
  9115  001078  C0AE  F05D         	movff	powf@x+2,___flsub@a+2
  9116  00107C  C0AF  F05E         	movff	powf@x+3,___flsub@a+3
  9117  001080  C0AC  F057         	movff	powf@x,___flsub@b
  9118  001084  C0AD  F058         	movff	powf@x+1,___flsub@b+1
  9119  001088  C0AE  F059         	movff	powf@x+2,___flsub@b+2
  9120  00108C  C0AF  F05A         	movff	powf@x+3,___flsub@b+3
  9121  001090  EC14  F03D         	call	___flsub	;wreg free
  9122  001094  C057  F02C         	movff	?___flsub,___fldiv@a
  9123  001098  C058  F02D         	movff	?___flsub+1,___fldiv@a+1
  9124  00109C  C059  F02E         	movff	?___flsub+2,___fldiv@a+2
  9125  0010A0  C05A  F02F         	movff	?___flsub+3,___fldiv@a+3
  9126  0010A4  ECE7  F02C         	call	___fldiv	;wreg free
  9127  0010A8  C028  F0AC         	movff	?___fldiv,?_powf
  9128  0010AC  C029  F0AD         	movff	?___fldiv+1,?_powf+1
  9129  0010B0  C02A  F0AE         	movff	?___fldiv+2,?_powf+2
  9130  0010B4  C02B  F0AF         	movff	?___fldiv+3,?_powf+3
  9131  0010B8  EF81  F019         	goto	l1220
  9132  0010BC                     l5614:
  9133                           
  9134                           ; BSR set to: 1
  9135  0010BC  0550               	decf	powf@yisint& (0+255),w,b
  9136  0010BE  1151               	iorwf	(powf@yisint+1)& (0+255),w,b
  9137  0010C0  1152               	iorwf	(powf@yisint+2)& (0+255),w,b
  9138  0010C2  1153               	iorwf	(powf@yisint+3)& (0+255),w,b
  9139  0010C4  A4D8               	btfss	status,2,c
  9140  0010C6  EF67  F008         	goto	u7131
  9141  0010CA  EF69  F008         	goto	u7130
  9142  0010CE                     u7131:
  9143  0010CE  EF71  F008         	goto	l5618
  9144  0010D2                     u7130:
  9145  0010D2                     
  9146                           ; BSR set to: 1
  9147  0010D2  0E00               	movlw	0
  9148  0010D4  6F88               	movwf	powf@sn& (0+255),b
  9149  0010D6  0E00               	movlw	0
  9150  0010D8  6F89               	movwf	(powf@sn+1)& (0+255),b
  9151  0010DA  0E80               	movlw	128
  9152  0010DC  6F8A               	movwf	(powf@sn+2)& (0+255),b
  9153  0010DE  0EBF               	movlw	191
  9154  0010E0  6F8B               	movwf	(powf@sn+3)& (0+255),b
  9155  0010E2                     l5618:
  9156                           
  9157                           ; BSR set to: 1
  9158  0010E2  BF9B               	btfsc	(powf@iy+3)& (0+255),7,b
  9159  0010E4  EF80  F008         	goto	u7141
  9160  0010E8  0598               	decf	powf@iy& (0+255),w,b
  9161  0010EA  0E00               	movlw	0
  9162  0010EC  5999               	subwfb	(powf@iy+1)& (0+255),w,b
  9163  0010EE  0E00               	movlw	0
  9164  0010F0  599A               	subwfb	(powf@iy+2)& (0+255),w,b
  9165  0010F2  0E4D               	movlw	77
  9166  0010F4  599B               	subwfb	(powf@iy+3)& (0+255),w,b
  9167  0010F6  A0D8               	btfss	status,0,c
  9168  0010F8  EF80  F008         	goto	u7141
  9169  0010FC  EF82  F008         	goto	u7140
  9170  001100                     u7141:
  9171  001100  EF07  F00B         	goto	l5666
  9172  001104                     u7140:
  9173  001104                     
  9174                           ; BSR set to: 1
  9175  001104  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  9176  001106  EF94  F008         	goto	u7150
  9177  00110A  0EF8               	movlw	248
  9178  00110C  5DA8               	subwf	powf@ix& (0+255),w,b
  9179  00110E  0EFF               	movlw	255
  9180  001110  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  9181  001112  0E7F               	movlw	127
  9182  001114  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  9183  001116  0E3F               	movlw	63
  9184  001118  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  9185  00111A  B0D8               	btfsc	status,0,c
  9186  00111C  EF92  F008         	goto	u7151
  9187  001120  EF94  F008         	goto	u7150
  9188  001124                     u7151:
  9189  001124  EF07  F009         	goto	l5630
  9190  001128                     u7150:
  9191  001128                     
  9192                           ; BSR set to: 1
  9193  001128  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  9194  00112A  EF99  F008         	goto	u7161
  9195  00112E  EF9B  F008         	goto	u7160
  9196  001132                     u7161:
  9197  001132  EFD1  F008         	goto	l5626
  9198  001136                     u7160:
  9199  001136                     
  9200                           ; BSR set to: 1
  9201  001136  0E60               	movlw	96
  9202  001138  6E13               	movwf	___flmul@a^0,c
  9203  00113A  0E42               	movlw	66
  9204  00113C  6E14               	movwf	(___flmul@a+1)^0,c
  9205  00113E  0EA2               	movlw	162
  9206  001140  6E15               	movwf	(___flmul@a+2)^0,c
  9207  001142  0E0D               	movlw	13
  9208  001144  6E16               	movwf	(___flmul@a+3)^0,c
  9209  001146  C188  F00F         	movff	powf@sn,___flmul@b
  9210  00114A  C189  F010         	movff	powf@sn+1,___flmul@b+1
  9211  00114E  C18A  F011         	movff	powf@sn+2,___flmul@b+2
  9212  001152  C18B  F012         	movff	powf@sn+3,___flmul@b+3
  9213  001156  ECD2  F02A         	call	___flmul	;wreg free
  9214  00115A  C00F  F1A4         	movff	?___flmul,_powf$1458
  9215  00115E  C010  F1A5         	movff	?___flmul+1,_powf$1458+1
  9216  001162  C011  F1A6         	movff	?___flmul+2,_powf$1458+2
  9217  001166  C012  F1A7         	movff	?___flmul+3,_powf$1458+3
  9218  00116A  C1A4  F00F         	movff	_powf$1458,___flmul@b
  9219  00116E  C1A5  F010         	movff	_powf$1458+1,___flmul@b+1
  9220  001172  C1A6  F011         	movff	_powf$1458+2,___flmul@b+2
  9221  001176  C1A7  F012         	movff	_powf$1458+3,___flmul@b+3
  9222  00117A  0E60               	movlw	96
  9223  00117C  6E13               	movwf	___flmul@a^0,c
  9224  00117E  0E42               	movlw	66
  9225  001180  6E14               	movwf	(___flmul@a+1)^0,c
  9226  001182  0EA2               	movlw	162
  9227  001184  6E15               	movwf	(___flmul@a+2)^0,c
  9228  001186  0E0D               	movlw	13
  9229  001188  6E16               	movwf	(___flmul@a+3)^0,c
  9230  00118A  ECD2  F02A         	call	___flmul	;wreg free
  9231  00118E  C00F  F0AC         	movff	?___flmul,?_powf
  9232  001192  C010  F0AD         	movff	?___flmul+1,?_powf+1
  9233  001196  C011  F0AE         	movff	?___flmul+2,?_powf+2
  9234  00119A  C012  F0AF         	movff	?___flmul+3,?_powf+3
  9235  00119E  EF81  F019         	goto	l1220
  9236  0011A2                     l5626:
  9237                           
  9238                           ; BSR set to: 1
  9239  0011A2  0ECA               	movlw	202
  9240  0011A4  6E13               	movwf	___flmul@a^0,c
  9241  0011A6  0EF2               	movlw	242
  9242  0011A8  6E14               	movwf	(___flmul@a+1)^0,c
  9243  0011AA  0E49               	movlw	73
  9244  0011AC  6E15               	movwf	(___flmul@a+2)^0,c
  9245  0011AE  0E71               	movlw	113
  9246  0011B0  6E16               	movwf	(___flmul@a+3)^0,c
  9247  0011B2  C188  F00F         	movff	powf@sn,___flmul@b
  9248  0011B6  C189  F010         	movff	powf@sn+1,___flmul@b+1
  9249  0011BA  C18A  F011         	movff	powf@sn+2,___flmul@b+2
  9250  0011BE  C18B  F012         	movff	powf@sn+3,___flmul@b+3
  9251  0011C2  ECD2  F02A         	call	___flmul	;wreg free
  9252  0011C6  C00F  F1A4         	movff	?___flmul,_powf$1458
  9253  0011CA  C010  F1A5         	movff	?___flmul+1,_powf$1458+1
  9254  0011CE  C011  F1A6         	movff	?___flmul+2,_powf$1458+2
  9255  0011D2  C012  F1A7         	movff	?___flmul+3,_powf$1458+3
  9256  0011D6  C1A4  F00F         	movff	_powf$1458,___flmul@b
  9257  0011DA  C1A5  F010         	movff	_powf$1458+1,___flmul@b+1
  9258  0011DE  C1A6  F011         	movff	_powf$1458+2,___flmul@b+2
  9259  0011E2  C1A7  F012         	movff	_powf$1458+3,___flmul@b+3
  9260  0011E6  0ECA               	movlw	202
  9261  0011E8  6E13               	movwf	___flmul@a^0,c
  9262  0011EA  0EF2               	movlw	242
  9263  0011EC  6E14               	movwf	(___flmul@a+1)^0,c
  9264  0011EE  0E49               	movlw	73
  9265  0011F0  6E15               	movwf	(___flmul@a+2)^0,c
  9266  0011F2  0E71               	movlw	113
  9267  0011F4  6E16               	movwf	(___flmul@a+3)^0,c
  9268  0011F6  ECD2  F02A         	call	___flmul	;wreg free
  9269  0011FA  C00F  F0AC         	movff	?___flmul,?_powf
  9270  0011FE  C010  F0AD         	movff	?___flmul+1,?_powf+1
  9271  001202  C011  F0AE         	movff	?___flmul+2,?_powf+2
  9272  001206  C012  F0AF         	movff	?___flmul+3,?_powf+3
  9273  00120A  EF81  F019         	goto	l1220
  9274  00120E                     l5630:
  9275                           
  9276                           ; BSR set to: 1
  9277  00120E  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  9278  001210  EF17  F009         	goto	u7171
  9279  001214  0E08               	movlw	8
  9280  001216  5DA8               	subwf	powf@ix& (0+255),w,b
  9281  001218  0E00               	movlw	0
  9282  00121A  59A9               	subwfb	(powf@ix+1)& (0+255),w,b
  9283  00121C  0E80               	movlw	128
  9284  00121E  59AA               	subwfb	(powf@ix+2)& (0+255),w,b
  9285  001220  0E3F               	movlw	63
  9286  001222  59AB               	subwfb	(powf@ix+3)& (0+255),w,b
  9287  001224  A0D8               	btfss	status,0,c
  9288  001226  EF17  F009         	goto	u7171
  9289  00122A  EF19  F009         	goto	u7170
  9290  00122E                     u7171:
  9291  00122E  EF94  F009         	goto	l5640
  9292  001232                     u7170:
  9293  001232                     
  9294                           ; BSR set to: 1
  9295  001232  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  9296  001234  EF28  F009         	goto	u7180
  9297  001238  5187               	movf	(powf@hy+3)& (0+255),w,b
  9298  00123A  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  9299  00123C  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  9300  00123E  E106               	bnz	u7181
  9301  001240  0584               	decf	powf@hy& (0+255),w,b
  9302  001242  B0D8               	btfsc	status,0,c
  9303  001244  EF26  F009         	goto	u7181
  9304  001248  EF28  F009         	goto	u7180
  9305  00124C                     u7181:
  9306  00124C  EF5E  F009         	goto	l5636
  9307  001250                     u7180:
  9308  001250                     
  9309                           ; BSR set to: 1
  9310  001250  0E60               	movlw	96
  9311  001252  6E13               	movwf	___flmul@a^0,c
  9312  001254  0E42               	movlw	66
  9313  001256  6E14               	movwf	(___flmul@a+1)^0,c
  9314  001258  0EA2               	movlw	162
  9315  00125A  6E15               	movwf	(___flmul@a+2)^0,c
  9316  00125C  0E0D               	movlw	13
  9317  00125E  6E16               	movwf	(___flmul@a+3)^0,c
  9318  001260  C188  F00F         	movff	powf@sn,___flmul@b
  9319  001264  C189  F010         	movff	powf@sn+1,___flmul@b+1
  9320  001268  C18A  F011         	movff	powf@sn+2,___flmul@b+2
  9321  00126C  C18B  F012         	movff	powf@sn+3,___flmul@b+3
  9322  001270  ECD2  F02A         	call	___flmul	;wreg free
  9323  001274  C00F  F1A4         	movff	?___flmul,_powf$1458
  9324  001278  C010  F1A5         	movff	?___flmul+1,_powf$1458+1
  9325  00127C  C011  F1A6         	movff	?___flmul+2,_powf$1458+2
  9326  001280  C012  F1A7         	movff	?___flmul+3,_powf$1458+3
  9327  001284  C1A4  F00F         	movff	_powf$1458,___flmul@b
  9328  001288  C1A5  F010         	movff	_powf$1458+1,___flmul@b+1
  9329  00128C  C1A6  F011         	movff	_powf$1458+2,___flmul@b+2
  9330  001290  C1A7  F012         	movff	_powf$1458+3,___flmul@b+3
  9331  001294  0E60               	movlw	96
  9332  001296  6E13               	movwf	___flmul@a^0,c
  9333  001298  0E42               	movlw	66
  9334  00129A  6E14               	movwf	(___flmul@a+1)^0,c
  9335  00129C  0EA2               	movlw	162
  9336  00129E  6E15               	movwf	(___flmul@a+2)^0,c
  9337  0012A0  0E0D               	movlw	13
  9338  0012A2  6E16               	movwf	(___flmul@a+3)^0,c
  9339  0012A4  ECD2  F02A         	call	___flmul	;wreg free
  9340  0012A8  C00F  F0AC         	movff	?___flmul,?_powf
  9341  0012AC  C010  F0AD         	movff	?___flmul+1,?_powf+1
  9342  0012B0  C011  F0AE         	movff	?___flmul+2,?_powf+2
  9343  0012B4  C012  F0AF         	movff	?___flmul+3,?_powf+3
  9344  0012B8  EF81  F019         	goto	l1220
  9345  0012BC                     l5636:
  9346                           
  9347                           ; BSR set to: 1
  9348  0012BC  0ECA               	movlw	202
  9349  0012BE  6E13               	movwf	___flmul@a^0,c
  9350  0012C0  0EF2               	movlw	242
  9351  0012C2  6E14               	movwf	(___flmul@a+1)^0,c
  9352  0012C4  0E49               	movlw	73
  9353  0012C6  6E15               	movwf	(___flmul@a+2)^0,c
  9354  0012C8  0E71               	movlw	113
  9355  0012CA  6E16               	movwf	(___flmul@a+3)^0,c
  9356  0012CC  C188  F00F         	movff	powf@sn,___flmul@b
  9357  0012D0  C189  F010         	movff	powf@sn+1,___flmul@b+1
  9358  0012D4  C18A  F011         	movff	powf@sn+2,___flmul@b+2
  9359  0012D8  C18B  F012         	movff	powf@sn+3,___flmul@b+3
  9360  0012DC  ECD2  F02A         	call	___flmul	;wreg free
  9361  0012E0  C00F  F1A4         	movff	?___flmul,_powf$1458
  9362  0012E4  C010  F1A5         	movff	?___flmul+1,_powf$1458+1
  9363  0012E8  C011  F1A6         	movff	?___flmul+2,_powf$1458+2
  9364  0012EC  C012  F1A7         	movff	?___flmul+3,_powf$1458+3
  9365  0012F0  C1A4  F00F         	movff	_powf$1458,___flmul@b
  9366  0012F4  C1A5  F010         	movff	_powf$1458+1,___flmul@b+1
  9367  0012F8  C1A6  F011         	movff	_powf$1458+2,___flmul@b+2
  9368  0012FC  C1A7  F012         	movff	_powf$1458+3,___flmul@b+3
  9369  001300  0ECA               	movlw	202
  9370  001302  6E13               	movwf	___flmul@a^0,c
  9371  001304  0EF2               	movlw	242
  9372  001306  6E14               	movwf	(___flmul@a+1)^0,c
  9373  001308  0E49               	movlw	73
  9374  00130A  6E15               	movwf	(___flmul@a+2)^0,c
  9375  00130C  0E71               	movlw	113
  9376  00130E  6E16               	movwf	(___flmul@a+3)^0,c
  9377  001310  ECD2  F02A         	call	___flmul	;wreg free
  9378  001314  C00F  F0AC         	movff	?___flmul,?_powf
  9379  001318  C010  F0AD         	movff	?___flmul+1,?_powf+1
  9380  00131C  C011  F0AE         	movff	?___flmul+2,?_powf+2
  9381  001320  C012  F0AF         	movff	?___flmul+3,?_powf+3
  9382  001324  EF81  F019         	goto	l1220
  9383  001328                     l5640:
  9384                           
  9385                           ; BSR set to: 1
  9386  001328  C170  F047         	movff	powf@ax,___fladd@b
  9387  00132C  C171  F048         	movff	powf@ax+1,___fladd@b+1
  9388  001330  C172  F049         	movff	powf@ax+2,___fladd@b+2
  9389  001334  C173  F04A         	movff	powf@ax+3,___fladd@b+3
  9390  001338  0E00               	movlw	0
  9391  00133A  6E4B               	movwf	___fladd@a^0,c
  9392  00133C  0E00               	movlw	0
  9393  00133E  6E4C               	movwf	(___fladd@a+1)^0,c
  9394  001340  0E80               	movlw	128
  9395  001342  6E4D               	movwf	(___fladd@a+2)^0,c
  9396  001344  0EBF               	movlw	191
  9397  001346  6E4E               	movwf	(___fladd@a+3)^0,c
  9398  001348  EC13  F026         	call	___fladd	;wreg free
  9399  00134C  C047  F1B0         	movff	?___fladd,powf@t
  9400  001350  C048  F1B1         	movff	?___fladd+1,powf@t+1
  9401  001354  C049  F1B2         	movff	?___fladd+2,powf@t+2
  9402  001358  C04A  F1B3         	movff	?___fladd+3,powf@t+3
  9403  00135C  0E00               	movlw	0
  9404  00135E  6E13               	movwf	___flmul@a^0,c
  9405  001360  0E00               	movlw	0
  9406  001362  6E14               	movwf	(___flmul@a+1)^0,c
  9407  001364  0E80               	movlw	128
  9408  001366  6E15               	movwf	(___flmul@a+2)^0,c
  9409  001368  0E3E               	movlw	62
  9410  00136A  6E16               	movwf	(___flmul@a+3)^0,c
  9411  00136C  C1B0  F00F         	movff	powf@t,___flmul@b
  9412  001370  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  9413  001374  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  9414  001378  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  9415  00137C  ECD2  F02A         	call	___flmul	;wreg free
  9416  001380  C00F  F05B         	movff	?___flmul,___flsub@a
  9417  001384  C010  F05C         	movff	?___flmul+1,___flsub@a+1
  9418  001388  C011  F05D         	movff	?___flmul+2,___flsub@a+2
  9419  00138C  C012  F05E         	movff	?___flmul+3,___flsub@a+3
  9420  001390  0EAB               	movlw	171
  9421  001392  6E57               	movwf	___flsub@b^0,c
  9422  001394  0EAA               	movlw	170
  9423  001396  6E58               	movwf	(___flsub@b+1)^0,c
  9424  001398  0EAA               	movlw	170
  9425  00139A  6E59               	movwf	(___flsub@b+2)^0,c
  9426  00139C  0E3E               	movlw	62
  9427  00139E  6E5A               	movwf	(___flsub@b+3)^0,c
  9428  0013A0  EC14  F03D         	call	___flsub	;wreg free
  9429  0013A4  C057  F1A4         	movff	?___flsub,_powf$1458
  9430  0013A8  C058  F1A5         	movff	?___flsub+1,_powf$1458+1
  9431  0013AC  C059  F1A6         	movff	?___flsub+2,_powf$1458+2
  9432  0013B0  C05A  F1A7         	movff	?___flsub+3,_powf$1458+3
  9433  0013B4  C1B0  F013         	movff	powf@t,___flmul@a
  9434  0013B8  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  9435  0013BC  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  9436  0013C0  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  9437  0013C4  C1B0  F00F         	movff	powf@t,___flmul@b
  9438  0013C8  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  9439  0013CC  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  9440  0013D0  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  9441  0013D4  ECD2  F02A         	call	___flmul	;wreg free
  9442  0013D8  C00F  F154         	movff	?___flmul,_powf$1459
  9443  0013DC  C010  F155         	movff	?___flmul+1,_powf$1459+1
  9444  0013E0  C011  F156         	movff	?___flmul+2,_powf$1459+2
  9445  0013E4  C012  F157         	movff	?___flmul+3,_powf$1459+3
  9446  0013E8  C1B0  F013         	movff	powf@t,___flmul@a
  9447  0013EC  C1B1  F014         	movff	powf@t+1,___flmul@a+1
  9448  0013F0  C1B2  F015         	movff	powf@t+2,___flmul@a+2
  9449  0013F4  C1B3  F016         	movff	powf@t+3,___flmul@a+3
  9450  0013F8  C1A4  F00F         	movff	_powf$1458,___flmul@b
  9451  0013FC  C1A5  F010         	movff	_powf$1458+1,___flmul@b+1
  9452  001400  C1A6  F011         	movff	_powf$1458+2,___flmul@b+2
  9453  001404  C1A7  F012         	movff	_powf$1458+3,___flmul@b+3
  9454  001408  ECD2  F02A         	call	___flmul	;wreg free
  9455  00140C  C00F  F05B         	movff	?___flmul,___flsub@a
  9456  001410  C010  F05C         	movff	?___flmul+1,___flsub@a+1
  9457  001414  C011  F05D         	movff	?___flmul+2,___flsub@a+2
  9458  001418  C012  F05E         	movff	?___flmul+3,___flsub@a+3
  9459  00141C  0E00               	movlw	0
  9460  00141E  6E57               	movwf	___flsub@b^0,c
  9461  001420  0E00               	movlw	0
  9462  001422  6E58               	movwf	(___flsub@b+1)^0,c
  9463  001424  0E00               	movlw	0
  9464  001426  6E59               	movwf	(___flsub@b+2)^0,c
  9465  001428  0E3F               	movlw	63
  9466  00142A  6E5A               	movwf	(___flsub@b+3)^0,c
  9467  00142C  EC14  F03D         	call	___flsub	;wreg free
  9468  001430  C057  F148         	movff	?___flsub,_powf$1460
  9469  001434  C058  F149         	movff	?___flsub+1,_powf$1460+1
  9470  001438  C059  F14A         	movff	?___flsub+2,_powf$1460+2
  9471  00143C  C05A  F14B         	movff	?___flsub+3,_powf$1460+3
  9472  001440  C154  F00F         	movff	_powf$1459,___flmul@b
  9473  001444  C155  F010         	movff	_powf$1459+1,___flmul@b+1
  9474  001448  C156  F011         	movff	_powf$1459+2,___flmul@b+2
  9475  00144C  C157  F012         	movff	_powf$1459+3,___flmul@b+3
  9476  001450  C148  F013         	movff	_powf$1460,___flmul@a
  9477  001454  C149  F014         	movff	_powf$1460+1,___flmul@a+1
  9478  001458  C14A  F015         	movff	_powf$1460+2,___flmul@a+2
  9479  00145C  C14B  F016         	movff	_powf$1460+3,___flmul@a+3
  9480  001460  ECD2  F02A         	call	___flmul	;wreg free
  9481  001464  C00F  F144         	movff	?___flmul,powf@w
  9482  001468  C010  F145         	movff	?___flmul+1,powf@w+1
  9483  00146C  C011  F146         	movff	?___flmul+2,powf@w+2
  9484  001470  C012  F147         	movff	?___flmul+3,powf@w+3
  9485  001474  C1B0  F00F         	movff	powf@t,___flmul@b
  9486  001478  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  9487  00147C  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  9488  001480  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  9489  001484  0E00               	movlw	0
  9490  001486  6E13               	movwf	___flmul@a^0,c
  9491  001488  0EAA               	movlw	170
  9492  00148A  6E14               	movwf	(___flmul@a+1)^0,c
  9493  00148C  0EB8               	movlw	184
  9494  00148E  6E15               	movwf	(___flmul@a+2)^0,c
  9495  001490  0E3F               	movlw	63
  9496  001492  6E16               	movwf	(___flmul@a+3)^0,c
  9497  001494  ECD2  F02A         	call	___flmul	;wreg free
  9498  001498  C00F  F174         	movff	?___flmul,powf@u
  9499  00149C  C010  F175         	movff	?___flmul+1,powf@u+1
  9500  0014A0  C011  F176         	movff	?___flmul+2,powf@u+2
  9501  0014A4  C012  F177         	movff	?___flmul+3,powf@u+3
  9502  0014A8  0E70               	movlw	112
  9503  0014AA  6E13               	movwf	___flmul@a^0,c
  9504  0014AC  0EA5               	movlw	165
  9505  0014AE  6E14               	movwf	(___flmul@a+1)^0,c
  9506  0014B0  0EEC               	movlw	236
  9507  0014B2  6E15               	movwf	(___flmul@a+2)^0,c
  9508  0014B4  0E36               	movlw	54
  9509  0014B6  6E16               	movwf	(___flmul@a+3)^0,c
  9510  0014B8  C1B0  F00F         	movff	powf@t,___flmul@b
  9511  0014BC  C1B1  F010         	movff	powf@t+1,___flmul@b+1
  9512  0014C0  C1B2  F011         	movff	powf@t+2,___flmul@b+2
  9513  0014C4  C1B3  F012         	movff	powf@t+3,___flmul@b+3
  9514  0014C8  ECD2  F02A         	call	___flmul	;wreg free
  9515  0014CC  C00F  F057         	movff	?___flmul,___flsub@b
  9516  0014D0  C010  F058         	movff	?___flmul+1,___flsub@b+1
  9517  0014D4  C011  F059         	movff	?___flmul+2,___flsub@b+2
  9518  0014D8  C012  F05A         	movff	?___flmul+3,___flsub@b+3
  9519  0014DC  0E3B               	movlw	59
  9520  0014DE  6E13               	movwf	___flmul@a^0,c
  9521  0014E0  0EAA               	movlw	170
  9522  0014E2  6E14               	movwf	(___flmul@a+1)^0,c
  9523  0014E4  0EB8               	movlw	184
  9524  0014E6  6E15               	movwf	(___flmul@a+2)^0,c
  9525  0014E8  0E3F               	movlw	63
  9526  0014EA  6E16               	movwf	(___flmul@a+3)^0,c
  9527  0014EC  C144  F00F         	movff	powf@w,___flmul@b
  9528  0014F0  C145  F010         	movff	powf@w+1,___flmul@b+1
  9529  0014F4  C146  F011         	movff	powf@w+2,___flmul@b+2
  9530  0014F8  C147  F012         	movff	powf@w+3,___flmul@b+3
  9531  0014FC  ECD2  F02A         	call	___flmul	;wreg free
  9532  001500  C00F  F05B         	movff	?___flmul,___flsub@a
  9533  001504  C010  F05C         	movff	?___flmul+1,___flsub@a+1
  9534  001508  C011  F05D         	movff	?___flmul+2,___flsub@a+2
  9535  00150C  C012  F05E         	movff	?___flmul+3,___flsub@a+3
  9536  001510  EC14  F03D         	call	___flsub	;wreg free
  9537  001514  C057  F178         	movff	?___flsub,powf@v
  9538  001518  C058  F179         	movff	?___flsub+1,powf@v+1
  9539  00151C  C059  F17A         	movff	?___flsub+2,powf@v+2
  9540  001520  C05A  F17B         	movff	?___flsub+3,powf@v+3
  9541  001524  C174  F047         	movff	powf@u,___fladd@b
  9542  001528  C175  F048         	movff	powf@u+1,___fladd@b+1
  9543  00152C  C176  F049         	movff	powf@u+2,___fladd@b+2
  9544  001530  C177  F04A         	movff	powf@u+3,___fladd@b+3
  9545  001534  C178  F04B         	movff	powf@v,___fladd@a
  9546  001538  C179  F04C         	movff	powf@v+1,___fladd@a+1
  9547  00153C  C17A  F04D         	movff	powf@v+2,___fladd@a+2
  9548  001540  C17B  F04E         	movff	powf@v+3,___fladd@a+3
  9549  001544  EC13  F026         	call	___fladd	;wreg free
  9550  001548  C047  F180         	movff	?___fladd,powf@t1
  9551  00154C  C048  F181         	movff	?___fladd+1,powf@t1+1
  9552  001550  C049  F182         	movff	?___fladd+2,powf@t1+2
  9553  001554  C04A  F183         	movff	?___fladd+3,powf@t1+3
  9554  001558  C180  F1B8         	movff	powf@t1,powf@__xc8_float_word
  9555  00155C  C181  F1B9         	movff	powf@t1+1,powf@__xc8_float_word+1
  9556  001560  C182  F1BA         	movff	powf@t1+2,powf@__xc8_float_word+2
  9557  001564  C183  F1BB         	movff	powf@t1+3,powf@__xc8_float_word+3
  9558  001568  C1B8  F190         	movff	powf@__xc8_float_word,powf@is
  9559  00156C  C1B9  F191         	movff	powf@__xc8_float_word+1,powf@is+1
  9560  001570  C1BA  F192         	movff	powf@__xc8_float_word+2,powf@is+2
  9561  001574  C1BB  F193         	movff	powf@__xc8_float_word+3,powf@is+3
  9562  001578  0E00               	movlw	0
  9563  00157A  0101               	movlb	1	; () banked
  9564  00157C  1590               	andwf	powf@is& (0+255),w,b
  9565  00157E  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  9566  001580  0EF0               	movlw	240
  9567  001582  1591               	andwf	(powf@is+1)& (0+255),w,b
  9568  001584  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  9569  001586  0EFF               	movlw	255
  9570  001588  1592               	andwf	(powf@is+2)& (0+255),w,b
  9571  00158A  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  9572  00158C  0EFF               	movlw	255
  9573  00158E  1593               	andwf	(powf@is+3)& (0+255),w,b
  9574  001590  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  9575  001592                     
  9576                           ; BSR set to: 1
  9577  001592  C1B8  F180         	movff	powf@__xc8_float_word,powf@t1
  9578  001596  C1B9  F181         	movff	powf@__xc8_float_word+1,powf@t1+1
  9579  00159A  C1BA  F182         	movff	powf@__xc8_float_word+2,powf@t1+2
  9580  00159E  C1BB  F183         	movff	powf@__xc8_float_word+3,powf@t1+3
  9581  0015A2                     
  9582                           ; BSR set to: 1
  9583  0015A2  C174  F05B         	movff	powf@u,___flsub@a
  9584  0015A6  C175  F05C         	movff	powf@u+1,___flsub@a+1
  9585  0015AA  C176  F05D         	movff	powf@u+2,___flsub@a+2
  9586  0015AE  C177  F05E         	movff	powf@u+3,___flsub@a+3
  9587  0015B2  C180  F057         	movff	powf@t1,___flsub@b
  9588  0015B6  C181  F058         	movff	powf@t1+1,___flsub@b+1
  9589  0015BA  C182  F059         	movff	powf@t1+2,___flsub@b+2
  9590  0015BE  C183  F05A         	movff	powf@t1+3,___flsub@b+3
  9591  0015C2  EC14  F03D         	call	___flsub	;wreg free
  9592  0015C6  C057  F194         	movff	?___flsub,_powf$1461
  9593  0015CA  C058  F195         	movff	?___flsub+1,_powf$1461+1
  9594  0015CE  C059  F196         	movff	?___flsub+2,_powf$1461+2
  9595  0015D2  C05A  F197         	movff	?___flsub+3,_powf$1461+3
  9596  0015D6  C178  F057         	movff	powf@v,___flsub@b
  9597  0015DA  C179  F058         	movff	powf@v+1,___flsub@b+1
  9598  0015DE  C17A  F059         	movff	powf@v+2,___flsub@b+2
  9599  0015E2  C17B  F05A         	movff	powf@v+3,___flsub@b+3
  9600  0015E6  C194  F05B         	movff	_powf$1461,___flsub@a
  9601  0015EA  C195  F05C         	movff	_powf$1461+1,___flsub@a+1
  9602  0015EE  C196  F05D         	movff	_powf$1461+2,___flsub@a+2
  9603  0015F2  C197  F05E         	movff	_powf$1461+3,___flsub@a+3
  9604  0015F6  EC14  F03D         	call	___flsub	;wreg free
  9605  0015FA  C057  F11C         	movff	?___flsub,powf@t2
  9606  0015FE  C058  F11D         	movff	?___flsub+1,powf@t2+1
  9607  001602  C059  F11E         	movff	?___flsub+2,powf@t2+2
  9608  001606  C05A  F11F         	movff	?___flsub+3,powf@t2+3
  9609  00160A  EF75  F012         	goto	l5822
  9610  00160E                     l5666:
  9611                           
  9612                           ; BSR set to: 1
  9613  00160E  0E00               	movlw	0
  9614  001610  6F7C               	movwf	powf@n& (0+255),b
  9615  001612  0E00               	movlw	0
  9616  001614  6F7D               	movwf	(powf@n+1)& (0+255),b
  9617  001616  0E00               	movlw	0
  9618  001618  6F7E               	movwf	(powf@n+2)& (0+255),b
  9619  00161A  0E00               	movlw	0
  9620  00161C  6F7F               	movwf	(powf@n+3)& (0+255),b
  9621  00161E                     
  9622                           ; BSR set to: 1
  9623  00161E  BFAB               	btfsc	(powf@ix+3)& (0+255),7,b
  9624  001620  EF1D  F00B         	goto	u7190
  9625  001624  51AB               	movf	(powf@ix+3)& (0+255),w,b
  9626  001626  E107               	bnz	u7191
  9627  001628  0E80               	movlw	128
  9628  00162A  5DAA               	subwf	(powf@ix+2)& (0+255),w,b
  9629  00162C  B0D8               	btfsc	status,0,c
  9630  00162E  EF1B  F00B         	goto	u7191
  9631  001632  EF1D  F00B         	goto	u7190
  9632  001636                     u7191:
  9633  001636  EF50  F00B         	goto	l5678
  9634  00163A                     u7190:
  9635  00163A                     
  9636                           ; BSR set to: 1
  9637  00163A  C170  F00F         	movff	powf@ax,___flmul@b
  9638  00163E  C171  F010         	movff	powf@ax+1,___flmul@b+1
  9639  001642  C172  F011         	movff	powf@ax+2,___flmul@b+2
  9640  001646  C173  F012         	movff	powf@ax+3,___flmul@b+3
  9641  00164A  0E00               	movlw	0
  9642  00164C  6E13               	movwf	___flmul@a^0,c
  9643  00164E  0E00               	movlw	0
  9644  001650  6E14               	movwf	(___flmul@a+1)^0,c
  9645  001652  0E80               	movlw	128
  9646  001654  6E15               	movwf	(___flmul@a+2)^0,c
  9647  001656  0E4B               	movlw	75
  9648  001658  6E16               	movwf	(___flmul@a+3)^0,c
  9649  00165A  ECD2  F02A         	call	___flmul	;wreg free
  9650  00165E  C00F  F170         	movff	?___flmul,powf@ax
  9651  001662  C010  F171         	movff	?___flmul+1,powf@ax+1
  9652  001666  C011  F172         	movff	?___flmul+2,powf@ax+2
  9653  00166A  C012  F173         	movff	?___flmul+3,powf@ax+3
  9654  00166E  0EE8               	movlw	232
  9655  001670  0101               	movlb	1	; () banked
  9656  001672  277C               	addwf	powf@n& (0+255),f,b
  9657  001674  0EFF               	movlw	255
  9658  001676  237D               	addwfc	(powf@n+1)& (0+255),f,b
  9659  001678  0EFF               	movlw	255
  9660  00167A  237E               	addwfc	(powf@n+2)& (0+255),f,b
  9661  00167C  0EFF               	movlw	255
  9662  00167E  237F               	addwfc	(powf@n+3)& (0+255),f,b
  9663  001680                     
  9664                           ; BSR set to: 1
  9665  001680  C170  F1B8         	movff	powf@ax,powf@__xc8_float_word
  9666  001684  C171  F1B9         	movff	powf@ax+1,powf@__xc8_float_word+1
  9667  001688  C172  F1BA         	movff	powf@ax+2,powf@__xc8_float_word+2
  9668  00168C  C173  F1BB         	movff	powf@ax+3,powf@__xc8_float_word+3
  9669  001690                     
  9670                           ; BSR set to: 1
  9671  001690  C1B8  F1A8         	movff	powf@__xc8_float_word,powf@ix
  9672  001694  C1B9  F1A9         	movff	powf@__xc8_float_word+1,powf@ix+1
  9673  001698  C1BA  F1AA         	movff	powf@__xc8_float_word+2,powf@ix+2
  9674  00169C  C1BB  F1AB         	movff	powf@__xc8_float_word+3,powf@ix+3
  9675  0016A0                     l5678:
  9676                           
  9677                           ; BSR set to: 1
  9678  0016A0  0E17               	movlw	23
  9679  0016A2  0100               	movlb	0	; () banked
  9680  0016A4  6FB4               	movwf	??_powf& (0+255),b
  9681  0016A6  C1A8  F0B5         	movff	powf@ix,??_powf+1
  9682  0016AA  C1A9  F0B6         	movff	powf@ix+1,??_powf+2
  9683  0016AE  C1AA  F0B7         	movff	powf@ix+2,??_powf+3
  9684  0016B2  C1AB  F0B8         	movff	powf@ix+3,??_powf+4
  9685  0016B6                     u7205:
  9686  0016B6  67B4               	tstfsz	??_powf& (0+255),b
  9687  0016B8  EF60  F00B         	goto	u7206
  9688  0016BC  EF68  F00B         	goto	u7207
  9689  0016C0                     u7206:
  9690  0016C0  35B8               	rlcf	(??_powf+4)& (0+255),w,b
  9691  0016C2  33B8               	rrcf	(??_powf+4)& (0+255),f,b
  9692  0016C4  33B7               	rrcf	(??_powf+3)& (0+255),f,b
  9693  0016C6  33B6               	rrcf	(??_powf+2)& (0+255),f,b
  9694  0016C8  33B5               	rrcf	(??_powf+1)& (0+255),f,b
  9695  0016CA  2FB4               	decfsz	??_powf& (0+255),f,b
  9696  0016CC  EF5B  F00B         	goto	u7205
  9697  0016D0                     u7207:
  9698  0016D0  0E81               	movlw	129
  9699  0016D2  0100               	movlb	0	; () banked
  9700  0016D4  25B5               	addwf	(??_powf+1)& (0+255),w,b
  9701  0016D6  6FB9               	movwf	(??_powf+5)& (0+255),b
  9702  0016D8  0EFF               	movlw	255
  9703  0016DA  21B6               	addwfc	(??_powf+2)& (0+255),w,b
  9704  0016DC  6FBA               	movwf	(??_powf+6)& (0+255),b
  9705  0016DE  0EFF               	movlw	255
  9706  0016E0  21B7               	addwfc	(??_powf+3)& (0+255),w,b
  9707  0016E2  6FBB               	movwf	(??_powf+7)& (0+255),b
  9708  0016E4  0EFF               	movlw	255
  9709  0016E6  21B8               	addwfc	(??_powf+4)& (0+255),w,b
  9710  0016E8  6FBC               	movwf	(??_powf+8)& (0+255),b
  9711  0016EA  51B9               	movf	(??_powf+5)& (0+255),w,b
  9712  0016EC  0101               	movlb	1	; () banked
  9713  0016EE  277C               	addwf	powf@n& (0+255),f,b
  9714  0016F0  0100               	movlb	0	; () banked
  9715  0016F2  51BA               	movf	(??_powf+6)& (0+255),w,b
  9716  0016F4  0101               	movlb	1	; () banked
  9717  0016F6  237D               	addwfc	(powf@n+1)& (0+255),f,b
  9718  0016F8  0100               	movlb	0	; () banked
  9719  0016FA  51BB               	movf	(??_powf+7)& (0+255),w,b
  9720  0016FC  0101               	movlb	1	; () banked
  9721  0016FE  237E               	addwfc	(powf@n+2)& (0+255),f,b
  9722  001700  0100               	movlb	0	; () banked
  9723  001702  51BC               	movf	(??_powf+8)& (0+255),w,b
  9724  001704  0101               	movlb	1	; () banked
  9725  001706  237F               	addwfc	(powf@n+3)& (0+255),f,b
  9726  001708                     
  9727                           ; BSR set to: 1
  9728  001708  0EFF               	movlw	255
  9729  00170A  15A8               	andwf	powf@ix& (0+255),w,b
  9730  00170C  6FAC               	movwf	powf@j& (0+255),b
  9731  00170E  0EFF               	movlw	255
  9732  001710  15A9               	andwf	(powf@ix+1)& (0+255),w,b
  9733  001712  6FAD               	movwf	(powf@j+1)& (0+255),b
  9734  001714  0E7F               	movlw	127
  9735  001716  15AA               	andwf	(powf@ix+2)& (0+255),w,b
  9736  001718  6FAE               	movwf	(powf@j+2)& (0+255),b
  9737  00171A  0E00               	movlw	0
  9738  00171C  15AB               	andwf	(powf@ix+3)& (0+255),w,b
  9739  00171E  6FAF               	movwf	(powf@j+3)& (0+255),b
  9740  001720                     
  9741                           ; BSR set to: 1
  9742  001720  0E00               	movlw	0
  9743  001722  11AC               	iorwf	powf@j& (0+255),w,b
  9744  001724  6FA8               	movwf	powf@ix& (0+255),b
  9745  001726  0E00               	movlw	0
  9746  001728  11AD               	iorwf	(powf@j+1)& (0+255),w,b
  9747  00172A  6FA9               	movwf	(powf@ix+1)& (0+255),b
  9748  00172C  0E80               	movlw	128
  9749  00172E  11AE               	iorwf	(powf@j+2)& (0+255),w,b
  9750  001730  6FAA               	movwf	(powf@ix+2)& (0+255),b
  9751  001732  0E3F               	movlw	63
  9752  001734  11AF               	iorwf	(powf@j+3)& (0+255),w,b
  9753  001736  6FAB               	movwf	(powf@ix+3)& (0+255),b
  9754  001738                     
  9755                           ; BSR set to: 1
  9756  001738  BFAF               	btfsc	(powf@j+3)& (0+255),7,b
  9757  00173A  EFAE  F00B         	goto	u7210
  9758  00173E  51AF               	movf	(powf@j+3)& (0+255),w,b
  9759  001740  E10B               	bnz	u7211
  9760  001742  0E72               	movlw	114
  9761  001744  5DAC               	subwf	powf@j& (0+255),w,b
  9762  001746  0EC4               	movlw	196
  9763  001748  59AD               	subwfb	(powf@j+1)& (0+255),w,b
  9764  00174A  0E1C               	movlw	28
  9765  00174C  59AE               	subwfb	(powf@j+2)& (0+255),w,b
  9766  00174E  B0D8               	btfsc	status,0,c
  9767  001750  EFAC  F00B         	goto	u7211
  9768  001754  EFAE  F00B         	goto	u7210
  9769  001758                     u7211:
  9770  001758  EFB8  F00B         	goto	l5688
  9771  00175C                     u7210:
  9772  00175C                     
  9773                           ; BSR set to: 1
  9774  00175C  0E00               	movlw	0
  9775  00175E  6FA0               	movwf	powf@k& (0+255),b
  9776  001760  0E00               	movlw	0
  9777  001762  6FA1               	movwf	(powf@k+1)& (0+255),b
  9778  001764  0E00               	movlw	0
  9779  001766  6FA2               	movwf	(powf@k+2)& (0+255),b
  9780  001768  0E00               	movlw	0
  9781  00176A  6FA3               	movwf	(powf@k+3)& (0+255),b
  9782  00176C  EFEA  F00B         	goto	l5698
  9783  001770                     l5688:
  9784                           
  9785                           ; BSR set to: 1
  9786  001770  BFAF               	btfsc	(powf@j+3)& (0+255),7,b
  9787  001772  EFCA  F00B         	goto	u7220
  9788  001776  51AF               	movf	(powf@j+3)& (0+255),w,b
  9789  001778  E10B               	bnz	u7221
  9790  00177A  0ED7               	movlw	215
  9791  00177C  5DAC               	subwf	powf@j& (0+255),w,b
  9792  00177E  0EB3               	movlw	179
  9793  001780  59AD               	subwfb	(powf@j+1)& (0+255),w,b
  9794  001782  0E5D               	movlw	93
  9795  001784  59AE               	subwfb	(powf@j+2)& (0+255),w,b
  9796  001786  B0D8               	btfsc	status,0,c
  9797  001788  EFC8  F00B         	goto	u7221
  9798  00178C  EFCA  F00B         	goto	u7220
  9799  001790                     u7221:
  9800  001790  EFD4  F00B         	goto	l5692
  9801  001794                     u7220:
  9802  001794                     
  9803                           ; BSR set to: 1
  9804  001794  0E01               	movlw	1
  9805  001796  6FA0               	movwf	powf@k& (0+255),b
  9806  001798  0E00               	movlw	0
  9807  00179A  6FA1               	movwf	(powf@k+1)& (0+255),b
  9808  00179C  0E00               	movlw	0
  9809  00179E  6FA2               	movwf	(powf@k+2)& (0+255),b
  9810  0017A0  0E00               	movlw	0
  9811  0017A2  6FA3               	movwf	(powf@k+3)& (0+255),b
  9812  0017A4  EFEA  F00B         	goto	l5698
  9813  0017A8                     l5692:
  9814                           
  9815                           ; BSR set to: 1
  9816  0017A8  0E00               	movlw	0
  9817  0017AA  6FA0               	movwf	powf@k& (0+255),b
  9818  0017AC  0E00               	movlw	0
  9819  0017AE  6FA1               	movwf	(powf@k+1)& (0+255),b
  9820  0017B0  0E00               	movlw	0
  9821  0017B2  6FA2               	movwf	(powf@k+2)& (0+255),b
  9822  0017B4  0E00               	movlw	0
  9823  0017B6  6FA3               	movwf	(powf@k+3)& (0+255),b
  9824  0017B8                     
  9825                           ; BSR set to: 1
  9826  0017B8  0E01               	movlw	1
  9827  0017BA  277C               	addwf	powf@n& (0+255),f,b
  9828  0017BC  0E00               	movlw	0
  9829  0017BE  237D               	addwfc	(powf@n+1)& (0+255),f,b
  9830  0017C0  237E               	addwfc	(powf@n+2)& (0+255),f,b
  9831  0017C2  237F               	addwfc	(powf@n+3)& (0+255),f,b
  9832  0017C4                     
  9833                           ; BSR set to: 1
  9834  0017C4  0E00               	movlw	0
  9835  0017C6  27A8               	addwf	powf@ix& (0+255),f,b
  9836  0017C8  0E00               	movlw	0
  9837  0017CA  23A9               	addwfc	(powf@ix+1)& (0+255),f,b
  9838  0017CC  0E80               	movlw	128
  9839  0017CE  23AA               	addwfc	(powf@ix+2)& (0+255),f,b
  9840  0017D0  0EFF               	movlw	255
  9841  0017D2  23AB               	addwfc	(powf@ix+3)& (0+255),f,b
  9842  0017D4                     l5698:
  9843                           
  9844                           ; BSR set to: 1
  9845  0017D4  C1A8  F1B8         	movff	powf@ix,powf@__xc8_float_word
  9846  0017D8  C1A9  F1B9         	movff	powf@ix+1,powf@__xc8_float_word+1
  9847  0017DC  C1AA  F1BA         	movff	powf@ix+2,powf@__xc8_float_word+2
  9848  0017E0  C1AB  F1BB         	movff	powf@ix+3,powf@__xc8_float_word+3
  9849  0017E4                     
  9850                           ; BSR set to: 1
  9851  0017E4  C1B8  F170         	movff	powf@__xc8_float_word,powf@ax
  9852  0017E8  C1B9  F171         	movff	powf@__xc8_float_word+1,powf@ax+1
  9853  0017EC  C1BA  F172         	movff	powf@__xc8_float_word+2,powf@ax+2
  9854  0017F0  C1BB  F173         	movff	powf@__xc8_float_word+3,powf@ax+3
  9855  0017F4                     
  9856                           ; BSR set to: 1
  9857  0017F4  C170  F057         	movff	powf@ax,___flsub@b
  9858  0017F8  C171  F058         	movff	powf@ax+1,___flsub@b+1
  9859  0017FC  C172  F059         	movff	powf@ax+2,___flsub@b+2
  9860  001800  C173  F05A         	movff	powf@ax+3,___flsub@b+3
  9861  001804  C1A0  F0B4         	movff	powf@k,??_powf
  9862  001808  C1A1  F0B5         	movff	powf@k+1,??_powf+1
  9863  00180C  0100               	movlb	0	; () banked
  9864  00180E  90D8               	bcf	status,0,c
  9865  001810  37B4               	rlcf	??_powf& (0+255),f,b
  9866  001812  37B5               	rlcf	(??_powf+1)& (0+255),f,b
  9867  001814  90D8               	bcf	status,0,c
  9868  001816  37B4               	rlcf	??_powf& (0+255),f,b
  9869  001818  37B5               	rlcf	(??_powf+1)& (0+255),f,b
  9870  00181A  0E81               	movlw	low _bp
  9871  00181C  25B4               	addwf	??_powf& (0+255),w,b
  9872  00181E  6EF6               	movwf	tblptrl,c
  9873  001820  0E08               	movlw	high _bp
  9874  001822  21B5               	addwfc	(??_powf+1)& (0+255),w,b
  9875  001824  6EF7               	movwf	tblptrh,c
  9876  001826                     	if	0	;There are less than 3 active tblptr bytes
  9877  001826                     	endif
  9878  001826  0009               	tblrd		*+
  9879  001828  CFF5 F05B          	movff	tablat,___flsub@a
  9880  00182C  0009               	tblrd		*+
  9881  00182E  CFF5 F05C          	movff	tablat,___flsub@a+1
  9882  001832  0009               	tblrd		*+
  9883  001834  CFF5 F05D          	movff	tablat,___flsub@a+2
  9884  001838  000A               	tblrd		*-
  9885  00183A  CFF5 F05E          	movff	tablat,___flsub@a+3
  9886  00183E  EC14  F03D         	call	___flsub	;wreg free
  9887  001842  C057  F174         	movff	?___flsub,powf@u
  9888  001846  C058  F175         	movff	?___flsub+1,powf@u+1
  9889  00184A  C059  F176         	movff	?___flsub+2,powf@u+2
  9890  00184E  C05A  F177         	movff	?___flsub+3,powf@u+3
  9891  001852  0E00               	movlw	0
  9892  001854  6E28               	movwf	___fldiv@b^0,c
  9893  001856  0E00               	movlw	0
  9894  001858  6E29               	movwf	(___fldiv@b+1)^0,c
  9895  00185A  0E80               	movlw	128
  9896  00185C  6E2A               	movwf	(___fldiv@b+2)^0,c
  9897  00185E  0E3F               	movlw	63
  9898  001860  6E2B               	movwf	(___fldiv@b+3)^0,c
  9899  001862  C170  F04B         	movff	powf@ax,___fladd@a
  9900  001866  C171  F04C         	movff	powf@ax+1,___fladd@a+1
  9901  00186A  C172  F04D         	movff	powf@ax+2,___fladd@a+2
  9902  00186E  C173  F04E         	movff	powf@ax+3,___fladd@a+3
  9903  001872  C1A0  F0B4         	movff	powf@k,??_powf
  9904  001876  C1A1  F0B5         	movff	powf@k+1,??_powf+1
  9905  00187A  0100               	movlb	0	; () banked
  9906  00187C  90D8               	bcf	status,0,c
  9907  00187E  37B4               	rlcf	??_powf& (0+255),f,b
  9908  001880  37B5               	rlcf	(??_powf+1)& (0+255),f,b
  9909  001882  90D8               	bcf	status,0,c
  9910  001884  37B4               	rlcf	??_powf& (0+255),f,b
  9911  001886  37B5               	rlcf	(??_powf+1)& (0+255),f,b
  9912  001888  0E81               	movlw	low _bp
  9913  00188A  25B4               	addwf	??_powf& (0+255),w,b
  9914  00188C  6EF6               	movwf	tblptrl,c
  9915  00188E  0E08               	movlw	high _bp
  9916  001890  21B5               	addwfc	(??_powf+1)& (0+255),w,b
  9917  001892  6EF7               	movwf	tblptrh,c
  9918  001894                     	if	0	;There are less than 3 active tblptr bytes
  9919  001894                     	endif
  9920  001894  0009               	tblrd		*+
  9921  001896  CFF5 F047          	movff	tablat,___fladd@b
  9922  00189A  0009               	tblrd		*+
  9923  00189C  CFF5 F048          	movff	tablat,___fladd@b+1
  9924  0018A0  0009               	tblrd		*+
  9925  0018A2  CFF5 F049          	movff	tablat,___fladd@b+2
  9926  0018A6  000A               	tblrd		*-
  9927  0018A8  CFF5 F04A          	movff	tablat,___fladd@b+3
  9928  0018AC  EC13  F026         	call	___fladd	;wreg free
  9929  0018B0  C047  F02C         	movff	?___fladd,___fldiv@a
  9930  0018B4  C048  F02D         	movff	?___fladd+1,___fldiv@a+1
  9931  0018B8  C049  F02E         	movff	?___fladd+2,___fldiv@a+2
  9932  0018BC  C04A  F02F         	movff	?___fladd+3,___fldiv@a+3
  9933  0018C0  ECE7  F02C         	call	___fldiv	;wreg free
  9934  0018C4  C028  F178         	movff	?___fldiv,powf@v
  9935  0018C8  C029  F179         	movff	?___fldiv+1,powf@v+1
  9936  0018CC  C02A  F17A         	movff	?___fldiv+2,powf@v+2
  9937  0018D0  C02B  F17B         	movff	?___fldiv+3,powf@v+3
  9938  0018D4  C174  F00F         	movff	powf@u,___flmul@b
  9939  0018D8  C175  F010         	movff	powf@u+1,___flmul@b+1
  9940  0018DC  C176  F011         	movff	powf@u+2,___flmul@b+2
  9941  0018E0  C177  F012         	movff	powf@u+3,___flmul@b+3
  9942  0018E4  C178  F013         	movff	powf@v,___flmul@a
  9943  0018E8  C179  F014         	movff	powf@v+1,___flmul@a+1
  9944  0018EC  C17A  F015         	movff	powf@v+2,___flmul@a+2
  9945  0018F0  C17B  F016         	movff	powf@v+3,___flmul@a+3
  9946  0018F4  ECD2  F02A         	call	___flmul	;wreg free
  9947  0018F8  C00F  F15C         	movff	?___flmul,powf@s
  9948  0018FC  C010  F15D         	movff	?___flmul+1,powf@s+1
  9949  001900  C011  F15E         	movff	?___flmul+2,powf@s+2
  9950  001904  C012  F15F         	movff	?___flmul+3,powf@s+3
  9951  001908  C15C  F16C         	movff	powf@s,powf@s_h
  9952  00190C  C15D  F16D         	movff	powf@s+1,powf@s_h+1
  9953  001910  C15E  F16E         	movff	powf@s+2,powf@s_h+2
  9954  001914  C15F  F16F         	movff	powf@s+3,powf@s_h+3
  9955  001918  C16C  F1B8         	movff	powf@s_h,powf@__xc8_float_word
  9956  00191C  C16D  F1B9         	movff	powf@s_h+1,powf@__xc8_float_word+1
  9957  001920  C16E  F1BA         	movff	powf@s_h+2,powf@__xc8_float_word+2
  9958  001924  C16F  F1BB         	movff	powf@s_h+3,powf@__xc8_float_word+3
  9959  001928  C1B8  F190         	movff	powf@__xc8_float_word,powf@is
  9960  00192C  C1B9  F191         	movff	powf@__xc8_float_word+1,powf@is+1
  9961  001930  C1BA  F192         	movff	powf@__xc8_float_word+2,powf@is+2
  9962  001934  C1BB  F193         	movff	powf@__xc8_float_word+3,powf@is+3
  9963  001938  0E00               	movlw	0
  9964  00193A  0101               	movlb	1	; () banked
  9965  00193C  1590               	andwf	powf@is& (0+255),w,b
  9966  00193E  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
  9967  001940  0EF0               	movlw	240
  9968  001942  1591               	andwf	(powf@is+1)& (0+255),w,b
  9969  001944  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
  9970  001946  0EFF               	movlw	255
  9971  001948  1592               	andwf	(powf@is+2)& (0+255),w,b
  9972  00194A  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
  9973  00194C  0EFF               	movlw	255
  9974  00194E  1593               	andwf	(powf@is+3)& (0+255),w,b
  9975  001950  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
  9976  001952                     
  9977                           ; BSR set to: 1
  9978  001952  C1B8  F16C         	movff	powf@__xc8_float_word,powf@s_h
  9979  001956  C1B9  F16D         	movff	powf@__xc8_float_word+1,powf@s_h+1
  9980  00195A  C1BA  F16E         	movff	powf@__xc8_float_word+2,powf@s_h+2
  9981  00195E  C1BB  F16F         	movff	powf@__xc8_float_word+3,powf@s_h+3
  9982  001962                     
  9983                           ; BSR set to: 1
  9984  001962  C1A8  F0B4         	movff	powf@ix,??_powf
  9985  001966  C1A9  F0B5         	movff	powf@ix+1,??_powf+1
  9986  00196A  C1AA  F0B6         	movff	powf@ix+2,??_powf+2
  9987  00196E  C1AB  F0B7         	movff	powf@ix+3,??_powf+3
  9988  001972  0100               	movlb	0	; () banked
  9989  001974  35B7               	rlcf	(??_powf+3)& (0+255),w,b
  9990  001976  33B7               	rrcf	(??_powf+3)& (0+255),f,b
  9991  001978  33B6               	rrcf	(??_powf+2)& (0+255),f,b
  9992  00197A  33B5               	rrcf	(??_powf+1)& (0+255),f,b
  9993  00197C  33B4               	rrcf	??_powf& (0+255),f,b
  9994  00197E  0E00               	movlw	0
  9995  001980  15B4               	andwf	??_powf& (0+255),w,b
  9996  001982  6FB8               	movwf	(??_powf+4)& (0+255),b
  9997  001984  0EF0               	movlw	240
  9998  001986  15B5               	andwf	(??_powf+1)& (0+255),w,b
  9999  001988  6FB9               	movwf	(??_powf+5)& (0+255),b
 10000  00198A  0EFF               	movlw	255
 10001  00198C  15B6               	andwf	(??_powf+2)& (0+255),w,b
 10002  00198E  6FBA               	movwf	(??_powf+6)& (0+255),b
 10003  001990  0EFF               	movlw	255
 10004  001992  15B7               	andwf	(??_powf+3)& (0+255),w,b
 10005  001994  6FBB               	movwf	(??_powf+7)& (0+255),b
 10006  001996  0E00               	movlw	0
 10007  001998  11B8               	iorwf	(??_powf+4)& (0+255),w,b
 10008  00199A  0101               	movlb	1	; () banked
 10009  00199C  6F90               	movwf	powf@is& (0+255),b
 10010  00199E  0E00               	movlw	0
 10011  0019A0  0100               	movlb	0	; () banked
 10012  0019A2  11B9               	iorwf	(??_powf+5)& (0+255),w,b
 10013  0019A4  0101               	movlb	1	; () banked
 10014  0019A6  6F91               	movwf	(powf@is+1)& (0+255),b
 10015  0019A8  0E00               	movlw	0
 10016  0019AA  0100               	movlb	0	; () banked
 10017  0019AC  11BA               	iorwf	(??_powf+6)& (0+255),w,b
 10018  0019AE  0101               	movlb	1	; () banked
 10019  0019B0  6F92               	movwf	(powf@is+2)& (0+255),b
 10020  0019B2  0E20               	movlw	32
 10021  0019B4  0100               	movlb	0	; () banked
 10022  0019B6  11BB               	iorwf	(??_powf+7)& (0+255),w,b
 10023  0019B8  0101               	movlb	1	; () banked
 10024  0019BA  6F93               	movwf	(powf@is+3)& (0+255),b
 10025  0019BC                     
 10026                           ; BSR set to: 1
 10027  0019BC  C1A0  F0B4         	movff	powf@k,??_powf
 10028  0019C0  C1A1  F0B5         	movff	powf@k+1,??_powf+1
 10029  0019C4  C1A2  F0B6         	movff	powf@k+2,??_powf+2
 10030  0019C8  C1A3  F0B7         	movff	powf@k+3,??_powf+3
 10031  0019CC  0E15               	movlw	21
 10032  0019CE                     u7235:
 10033  0019CE  90D8               	bcf	status,0,c
 10034  0019D0  0100               	movlb	0	; () banked
 10035  0019D2  37B4               	rlcf	??_powf& (0+255),f,b
 10036  0019D4  37B5               	rlcf	(??_powf+1)& (0+255),f,b
 10037  0019D6  37B6               	rlcf	(??_powf+2)& (0+255),f,b
 10038  0019D8  37B7               	rlcf	(??_powf+3)& (0+255),f,b
 10039  0019DA  2EE8               	decfsz	wreg,f,c
 10040  0019DC  EFE7  F00C         	goto	u7235
 10041  0019E0  0101               	movlb	1	; () banked
 10042  0019E2  5190               	movf	powf@is& (0+255),w,b
 10043  0019E4  0100               	movlb	0	; () banked
 10044  0019E6  25B4               	addwf	??_powf& (0+255),w,b
 10045  0019E8  6FB8               	movwf	(??_powf+4)& (0+255),b
 10046  0019EA  0101               	movlb	1	; () banked
 10047  0019EC  5191               	movf	(powf@is+1)& (0+255),w,b
 10048  0019EE  0100               	movlb	0	; () banked
 10049  0019F0  21B5               	addwfc	(??_powf+1)& (0+255),w,b
 10050  0019F2  6FB9               	movwf	(??_powf+5)& (0+255),b
 10051  0019F4  0101               	movlb	1	; () banked
 10052  0019F6  5192               	movf	(powf@is+2)& (0+255),w,b
 10053  0019F8  0100               	movlb	0	; () banked
 10054  0019FA  21B6               	addwfc	(??_powf+2)& (0+255),w,b
 10055  0019FC  6FBA               	movwf	(??_powf+6)& (0+255),b
 10056  0019FE  0101               	movlb	1	; () banked
 10057  001A00  5193               	movf	(powf@is+3)& (0+255),w,b
 10058  001A02  0100               	movlb	0	; () banked
 10059  001A04  21B7               	addwfc	(??_powf+3)& (0+255),w,b
 10060  001A06  6FBB               	movwf	(??_powf+7)& (0+255),b
 10061  001A08  0E00               	movlw	0
 10062  001A0A  25B8               	addwf	(??_powf+4)& (0+255),w,b
 10063  001A0C  0101               	movlb	1	; () banked
 10064  001A0E  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 10065  001A10  0E00               	movlw	0
 10066  001A12  0100               	movlb	0	; () banked
 10067  001A14  21B9               	addwfc	(??_powf+5)& (0+255),w,b
 10068  001A16  0101               	movlb	1	; () banked
 10069  001A18  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 10070  001A1A  0E40               	movlw	64
 10071  001A1C  0100               	movlb	0	; () banked
 10072  001A1E  21BA               	addwfc	(??_powf+6)& (0+255),w,b
 10073  001A20  0101               	movlb	1	; () banked
 10074  001A22  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 10075  001A24  0E00               	movlw	0
 10076  001A26  0100               	movlb	0	; () banked
 10077  001A28  21BB               	addwfc	(??_powf+7)& (0+255),w,b
 10078  001A2A  0101               	movlb	1	; () banked
 10079  001A2C  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 10080  001A2E                     
 10081                           ; BSR set to: 1
 10082  001A2E  C1B8  F168         	movff	powf@__xc8_float_word,powf@t_h
 10083  001A32  C1B9  F169         	movff	powf@__xc8_float_word+1,powf@t_h+1
 10084  001A36  C1BA  F16A         	movff	powf@__xc8_float_word+2,powf@t_h+2
 10085  001A3A  C1BB  F16B         	movff	powf@__xc8_float_word+3,powf@t_h+3
 10086  001A3E                     
 10087                           ; BSR set to: 1
 10088  001A3E  C1A0  F0B4         	movff	powf@k,??_powf
 10089  001A42  C1A1  F0B5         	movff	powf@k+1,??_powf+1
 10090  001A46  0100               	movlb	0	; () banked
 10091  001A48  90D8               	bcf	status,0,c
 10092  001A4A  37B4               	rlcf	??_powf& (0+255),f,b
 10093  001A4C  37B5               	rlcf	(??_powf+1)& (0+255),f,b
 10094  001A4E  90D8               	bcf	status,0,c
 10095  001A50  37B4               	rlcf	??_powf& (0+255),f,b
 10096  001A52  37B5               	rlcf	(??_powf+1)& (0+255),f,b
 10097  001A54  0E81               	movlw	low _bp
 10098  001A56  25B4               	addwf	??_powf& (0+255),w,b
 10099  001A58  6EF6               	movwf	tblptrl,c
 10100  001A5A  0E08               	movlw	high _bp
 10101  001A5C  21B5               	addwfc	(??_powf+1)& (0+255),w,b
 10102  001A5E  6EF7               	movwf	tblptrh,c
 10103  001A60                     	if	0	;There are less than 3 active tblptr bytes
 10104  001A60                     	endif
 10105  001A60  0009               	tblrd		*+
 10106  001A62  CFF5 F05B          	movff	tablat,___flsub@a
 10107  001A66  0009               	tblrd		*+
 10108  001A68  CFF5 F05C          	movff	tablat,___flsub@a+1
 10109  001A6C  0009               	tblrd		*+
 10110  001A6E  CFF5 F05D          	movff	tablat,___flsub@a+2
 10111  001A72  000A               	tblrd		*-
 10112  001A74  CFF5 F05E          	movff	tablat,___flsub@a+3
 10113  001A78  C168  F057         	movff	powf@t_h,___flsub@b
 10114  001A7C  C169  F058         	movff	powf@t_h+1,___flsub@b+1
 10115  001A80  C16A  F059         	movff	powf@t_h+2,___flsub@b+2
 10116  001A84  C16B  F05A         	movff	powf@t_h+3,___flsub@b+3
 10117  001A88  EC14  F03D         	call	___flsub	;wreg free
 10118  001A8C  C057  F194         	movff	?___flsub,_powf$1461
 10119  001A90  C058  F195         	movff	?___flsub+1,_powf$1461+1
 10120  001A94  C059  F196         	movff	?___flsub+2,_powf$1461+2
 10121  001A98  C05A  F197         	movff	?___flsub+3,_powf$1461+3
 10122  001A9C  C170  F057         	movff	powf@ax,___flsub@b
 10123  001AA0  C171  F058         	movff	powf@ax+1,___flsub@b+1
 10124  001AA4  C172  F059         	movff	powf@ax+2,___flsub@b+2
 10125  001AA8  C173  F05A         	movff	powf@ax+3,___flsub@b+3
 10126  001AAC  C194  F05B         	movff	_powf$1461,___flsub@a
 10127  001AB0  C195  F05C         	movff	_powf$1461+1,___flsub@a+1
 10128  001AB4  C196  F05D         	movff	_powf$1461+2,___flsub@a+2
 10129  001AB8  C197  F05E         	movff	_powf$1461+3,___flsub@a+3
 10130  001ABC  EC14  F03D         	call	___flsub	;wreg free
 10131  001AC0  C057  F134         	movff	?___flsub,powf@t_l
 10132  001AC4  C058  F135         	movff	?___flsub+1,powf@t_l+1
 10133  001AC8  C059  F136         	movff	?___flsub+2,powf@t_l+2
 10134  001ACC  C05A  F137         	movff	?___flsub+3,powf@t_l+3
 10135  001AD0  C168  F013         	movff	powf@t_h,___flmul@a
 10136  001AD4  C169  F014         	movff	powf@t_h+1,___flmul@a+1
 10137  001AD8  C16A  F015         	movff	powf@t_h+2,___flmul@a+2
 10138  001ADC  C16B  F016         	movff	powf@t_h+3,___flmul@a+3
 10139  001AE0  C16C  F00F         	movff	powf@s_h,___flmul@b
 10140  001AE4  C16D  F010         	movff	powf@s_h+1,___flmul@b+1
 10141  001AE8  C16E  F011         	movff	powf@s_h+2,___flmul@b+2
 10142  001AEC  C16F  F012         	movff	powf@s_h+3,___flmul@b+3
 10143  001AF0  ECD2  F02A         	call	___flmul	;wreg free
 10144  001AF4  C00F  F05B         	movff	?___flmul,___flsub@a
 10145  001AF8  C010  F05C         	movff	?___flmul+1,___flsub@a+1
 10146  001AFC  C011  F05D         	movff	?___flmul+2,___flsub@a+2
 10147  001B00  C012  F05E         	movff	?___flmul+3,___flsub@a+3
 10148  001B04  C174  F057         	movff	powf@u,___flsub@b
 10149  001B08  C175  F058         	movff	powf@u+1,___flsub@b+1
 10150  001B0C  C176  F059         	movff	powf@u+2,___flsub@b+2
 10151  001B10  C177  F05A         	movff	powf@u+3,___flsub@b+3
 10152  001B14  EC14  F03D         	call	___flsub	;wreg free
 10153  001B18  C057  F194         	movff	?___flsub,_powf$1461
 10154  001B1C  C058  F195         	movff	?___flsub+1,_powf$1461+1
 10155  001B20  C059  F196         	movff	?___flsub+2,_powf$1461+2
 10156  001B24  C05A  F197         	movff	?___flsub+3,_powf$1461+3
 10157  001B28  C134  F013         	movff	powf@t_l,___flmul@a
 10158  001B2C  C135  F014         	movff	powf@t_l+1,___flmul@a+1
 10159  001B30  C136  F015         	movff	powf@t_l+2,___flmul@a+2
 10160  001B34  C137  F016         	movff	powf@t_l+3,___flmul@a+3
 10161  001B38  C16C  F00F         	movff	powf@s_h,___flmul@b
 10162  001B3C  C16D  F010         	movff	powf@s_h+1,___flmul@b+1
 10163  001B40  C16E  F011         	movff	powf@s_h+2,___flmul@b+2
 10164  001B44  C16F  F012         	movff	powf@s_h+3,___flmul@b+3
 10165  001B48  ECD2  F02A         	call	___flmul	;wreg free
 10166  001B4C  C00F  F05B         	movff	?___flmul,___flsub@a
 10167  001B50  C010  F05C         	movff	?___flmul+1,___flsub@a+1
 10168  001B54  C011  F05D         	movff	?___flmul+2,___flsub@a+2
 10169  001B58  C012  F05E         	movff	?___flmul+3,___flsub@a+3
 10170  001B5C  C194  F057         	movff	_powf$1461,___flsub@b
 10171  001B60  C195  F058         	movff	_powf$1461+1,___flsub@b+1
 10172  001B64  C196  F059         	movff	_powf$1461+2,___flsub@b+2
 10173  001B68  C197  F05A         	movff	_powf$1461+3,___flsub@b+3
 10174  001B6C  EC14  F03D         	call	___flsub	;wreg free
 10175  001B70  C057  F154         	movff	?___flsub,_powf$1459
 10176  001B74  C058  F155         	movff	?___flsub+1,_powf$1459+1
 10177  001B78  C059  F156         	movff	?___flsub+2,_powf$1459+2
 10178  001B7C  C05A  F157         	movff	?___flsub+3,_powf$1459+3
 10179  001B80  C154  F00F         	movff	_powf$1459,___flmul@b
 10180  001B84  C155  F010         	movff	_powf$1459+1,___flmul@b+1
 10181  001B88  C156  F011         	movff	_powf$1459+2,___flmul@b+2
 10182  001B8C  C157  F012         	movff	_powf$1459+3,___flmul@b+3
 10183  001B90  C178  F013         	movff	powf@v,___flmul@a
 10184  001B94  C179  F014         	movff	powf@v+1,___flmul@a+1
 10185  001B98  C17A  F015         	movff	powf@v+2,___flmul@a+2
 10186  001B9C  C17B  F016         	movff	powf@v+3,___flmul@a+3
 10187  001BA0  ECD2  F02A         	call	___flmul	;wreg free
 10188  001BA4  C00F  F130         	movff	?___flmul,powf@s_l
 10189  001BA8  C010  F131         	movff	?___flmul+1,powf@s_l+1
 10190  001BAC  C011  F132         	movff	?___flmul+2,powf@s_l+2
 10191  001BB0  C012  F133         	movff	?___flmul+3,powf@s_l+3
 10192  001BB4  C15C  F00F         	movff	powf@s,___flmul@b
 10193  001BB8  C15D  F010         	movff	powf@s+1,___flmul@b+1
 10194  001BBC  C15E  F011         	movff	powf@s+2,___flmul@b+2
 10195  001BC0  C15F  F012         	movff	powf@s+3,___flmul@b+3
 10196  001BC4  C15C  F013         	movff	powf@s,___flmul@a
 10197  001BC8  C15D  F014         	movff	powf@s+1,___flmul@a+1
 10198  001BCC  C15E  F015         	movff	powf@s+2,___flmul@a+2
 10199  001BD0  C15F  F016         	movff	powf@s+3,___flmul@a+3
 10200  001BD4  ECD2  F02A         	call	___flmul	;wreg free
 10201  001BD8  C00F  F18C         	movff	?___flmul,powf@s2
 10202  001BDC  C010  F18D         	movff	?___flmul+1,powf@s2+1
 10203  001BE0  C011  F18E         	movff	?___flmul+2,powf@s2+2
 10204  001BE4  C012  F18F         	movff	?___flmul+3,powf@s2+3
 10205  001BE8  0E55               	movlw	85
 10206  001BEA  6E4B               	movwf	___fladd@a^0,c
 10207  001BEC  0E32               	movlw	50
 10208  001BEE  6E4C               	movwf	(___fladd@a+1)^0,c
 10209  001BF0  0E6C               	movlw	108
 10210  001BF2  6E4D               	movwf	(___fladd@a+2)^0,c
 10211  001BF4  0E3E               	movlw	62
 10212  001BF6  6E4E               	movwf	(___fladd@a+3)^0,c
 10213  001BF8  0E42               	movlw	66
 10214  001BFA  6E13               	movwf	___flmul@a^0,c
 10215  001BFC  0EF1               	movlw	241
 10216  001BFE  6E14               	movwf	(___flmul@a+1)^0,c
 10217  001C00  0E53               	movlw	83
 10218  001C02  6E15               	movwf	(___flmul@a+2)^0,c
 10219  001C04  0E3E               	movlw	62
 10220  001C06  6E16               	movwf	(___flmul@a+3)^0,c
 10221  001C08  C18C  F00F         	movff	powf@s2,___flmul@b
 10222  001C0C  C18D  F010         	movff	powf@s2+1,___flmul@b+1
 10223  001C10  C18E  F011         	movff	powf@s2+2,___flmul@b+2
 10224  001C14  C18F  F012         	movff	powf@s2+3,___flmul@b+3
 10225  001C18  ECD2  F02A         	call	___flmul	;wreg free
 10226  001C1C  C00F  F047         	movff	?___flmul,___fladd@b
 10227  001C20  C010  F048         	movff	?___flmul+1,___fladd@b+1
 10228  001C24  C011  F049         	movff	?___flmul+2,___fladd@b+2
 10229  001C28  C012  F04A         	movff	?___flmul+3,___fladd@b+3
 10230  001C2C  EC13  F026         	call	___fladd	;wreg free
 10231  001C30  C047  F1A4         	movff	?___fladd,_powf$1458
 10232  001C34  C048  F1A5         	movff	?___fladd+1,_powf$1458+1
 10233  001C38  C049  F1A6         	movff	?___fladd+2,_powf$1458+2
 10234  001C3C  C04A  F1A7         	movff	?___fladd+3,_powf$1458+3
 10235  001C40  0E05               	movlw	5
 10236  001C42  6E4B               	movwf	___fladd@a^0,c
 10237  001C44  0EA3               	movlw	163
 10238  001C46  6E4C               	movwf	(___fladd@a+1)^0,c
 10239  001C48  0E8B               	movlw	139
 10240  001C4A  6E4D               	movwf	(___fladd@a+2)^0,c
 10241  001C4C  0E3E               	movlw	62
 10242  001C4E  6E4E               	movwf	(___fladd@a+3)^0,c
 10243  001C50  C18C  F013         	movff	powf@s2,___flmul@a
 10244  001C54  C18D  F014         	movff	powf@s2+1,___flmul@a+1
 10245  001C58  C18E  F015         	movff	powf@s2+2,___flmul@a+2
 10246  001C5C  C18F  F016         	movff	powf@s2+3,___flmul@a+3
 10247  001C60  C1A4  F00F         	movff	_powf$1458,___flmul@b
 10248  001C64  C1A5  F010         	movff	_powf$1458+1,___flmul@b+1
 10249  001C68  C1A6  F011         	movff	_powf$1458+2,___flmul@b+2
 10250  001C6C  C1A7  F012         	movff	_powf$1458+3,___flmul@b+3
 10251  001C70  ECD2  F02A         	call	___flmul	;wreg free
 10252  001C74  C00F  F047         	movff	?___flmul,___fladd@b
 10253  001C78  C010  F048         	movff	?___flmul+1,___fladd@b+1
 10254  001C7C  C011  F049         	movff	?___flmul+2,___fladd@b+2
 10255  001C80  C012  F04A         	movff	?___flmul+3,___fladd@b+3
 10256  001C84  EC13  F026         	call	___fladd	;wreg free
 10257  001C88  C047  F154         	movff	?___fladd,_powf$1459
 10258  001C8C  C048  F155         	movff	?___fladd+1,_powf$1459+1
 10259  001C90  C049  F156         	movff	?___fladd+2,_powf$1459+2
 10260  001C94  C04A  F157         	movff	?___fladd+3,_powf$1459+3
 10261  001C98  0EAB               	movlw	171
 10262  001C9A  6E4B               	movwf	___fladd@a^0,c
 10263  001C9C  0EAA               	movlw	170
 10264  001C9E  6E4C               	movwf	(___fladd@a+1)^0,c
 10265  001CA0  0EAA               	movlw	170
 10266  001CA2  6E4D               	movwf	(___fladd@a+2)^0,c
 10267  001CA4  0E3E               	movlw	62
 10268  001CA6  6E4E               	movwf	(___fladd@a+3)^0,c
 10269  001CA8  C18C  F013         	movff	powf@s2,___flmul@a
 10270  001CAC  C18D  F014         	movff	powf@s2+1,___flmul@a+1
 10271  001CB0  C18E  F015         	movff	powf@s2+2,___flmul@a+2
 10272  001CB4  C18F  F016         	movff	powf@s2+3,___flmul@a+3
 10273  001CB8  C154  F00F         	movff	_powf$1459,___flmul@b
 10274  001CBC  C155  F010         	movff	_powf$1459+1,___flmul@b+1
 10275  001CC0  C156  F011         	movff	_powf$1459+2,___flmul@b+2
 10276  001CC4  C157  F012         	movff	_powf$1459+3,___flmul@b+3
 10277  001CC8  ECD2  F02A         	call	___flmul	;wreg free
 10278  001CCC  C00F  F047         	movff	?___flmul,___fladd@b
 10279  001CD0  C010  F048         	movff	?___flmul+1,___fladd@b+1
 10280  001CD4  C011  F049         	movff	?___flmul+2,___fladd@b+2
 10281  001CD8  C012  F04A         	movff	?___flmul+3,___fladd@b+3
 10282  001CDC  EC13  F026         	call	___fladd	;wreg free
 10283  001CE0  C047  F148         	movff	?___fladd,_powf$1460
 10284  001CE4  C048  F149         	movff	?___fladd+1,_powf$1460+1
 10285  001CE8  C049  F14A         	movff	?___fladd+2,_powf$1460+2
 10286  001CEC  C04A  F14B         	movff	?___fladd+3,_powf$1460+3
 10287  001CF0  0EB7               	movlw	183
 10288  001CF2  6E4B               	movwf	___fladd@a^0,c
 10289  001CF4  0E6D               	movlw	109
 10290  001CF6  6E4C               	movwf	(___fladd@a+1)^0,c
 10291  001CF8  0EDB               	movlw	219
 10292  001CFA  6E4D               	movwf	(___fladd@a+2)^0,c
 10293  001CFC  0E3E               	movlw	62
 10294  001CFE  6E4E               	movwf	(___fladd@a+3)^0,c
 10295  001D00  C18C  F013         	movff	powf@s2,___flmul@a
 10296  001D04  C18D  F014         	movff	powf@s2+1,___flmul@a+1
 10297  001D08  C18E  F015         	movff	powf@s2+2,___flmul@a+2
 10298  001D0C  C18F  F016         	movff	powf@s2+3,___flmul@a+3
 10299  001D10  C148  F00F         	movff	_powf$1460,___flmul@b
 10300  001D14  C149  F010         	movff	_powf$1460+1,___flmul@b+1
 10301  001D18  C14A  F011         	movff	_powf$1460+2,___flmul@b+2
 10302  001D1C  C14B  F012         	movff	_powf$1460+3,___flmul@b+3
 10303  001D20  ECD2  F02A         	call	___flmul	;wreg free
 10304  001D24  C00F  F047         	movff	?___flmul,___fladd@b
 10305  001D28  C010  F048         	movff	?___flmul+1,___fladd@b+1
 10306  001D2C  C011  F049         	movff	?___flmul+2,___fladd@b+2
 10307  001D30  C012  F04A         	movff	?___flmul+3,___fladd@b+3
 10308  001D34  EC13  F026         	call	___fladd	;wreg free
 10309  001D38  C047  F138         	movff	?___fladd,_powf$1462
 10310  001D3C  C048  F139         	movff	?___fladd+1,_powf$1462+1
 10311  001D40  C049  F13A         	movff	?___fladd+2,_powf$1462+2
 10312  001D44  C04A  F13B         	movff	?___fladd+3,_powf$1462+3
 10313  001D48  0E9A               	movlw	154
 10314  001D4A  6E4B               	movwf	___fladd@a^0,c
 10315  001D4C  0E99               	movlw	153
 10316  001D4E  6E4C               	movwf	(___fladd@a+1)^0,c
 10317  001D50  0E19               	movlw	25
 10318  001D52  6E4D               	movwf	(___fladd@a+2)^0,c
 10319  001D54  0E3F               	movlw	63
 10320  001D56  6E4E               	movwf	(___fladd@a+3)^0,c
 10321  001D58  C18C  F013         	movff	powf@s2,___flmul@a
 10322  001D5C  C18D  F014         	movff	powf@s2+1,___flmul@a+1
 10323  001D60  C18E  F015         	movff	powf@s2+2,___flmul@a+2
 10324  001D64  C18F  F016         	movff	powf@s2+3,___flmul@a+3
 10325  001D68  C138  F00F         	movff	_powf$1462,___flmul@b
 10326  001D6C  C139  F010         	movff	_powf$1462+1,___flmul@b+1
 10327  001D70  C13A  F011         	movff	_powf$1462+2,___flmul@b+2
 10328  001D74  C13B  F012         	movff	_powf$1462+3,___flmul@b+3
 10329  001D78  ECD2  F02A         	call	___flmul	;wreg free
 10330  001D7C  C00F  F047         	movff	?___flmul,___fladd@b
 10331  001D80  C010  F048         	movff	?___flmul+1,___fladd@b+1
 10332  001D84  C011  F049         	movff	?___flmul+2,___fladd@b+2
 10333  001D88  C012  F04A         	movff	?___flmul+3,___fladd@b+3
 10334  001D8C  EC13  F026         	call	___fladd	;wreg free
 10335  001D90  C047  F100         	movff	?___fladd,_powf$1463
 10336  001D94  C048  F101         	movff	?___fladd+1,_powf$1463+1
 10337  001D98  C049  F102         	movff	?___fladd+2,_powf$1463+2
 10338  001D9C  C04A  F103         	movff	?___fladd+3,_powf$1463+3
 10339  001DA0  C18C  F013         	movff	powf@s2,___flmul@a
 10340  001DA4  C18D  F014         	movff	powf@s2+1,___flmul@a+1
 10341  001DA8  C18E  F015         	movff	powf@s2+2,___flmul@a+2
 10342  001DAC  C18F  F016         	movff	powf@s2+3,___flmul@a+3
 10343  001DB0  C18C  F00F         	movff	powf@s2,___flmul@b
 10344  001DB4  C18D  F010         	movff	powf@s2+1,___flmul@b+1
 10345  001DB8  C18E  F011         	movff	powf@s2+2,___flmul@b+2
 10346  001DBC  C18F  F012         	movff	powf@s2+3,___flmul@b+3
 10347  001DC0  ECD2  F02A         	call	___flmul	;wreg free
 10348  001DC4  C00F  F104         	movff	?___flmul,_powf$1464
 10349  001DC8  C010  F105         	movff	?___flmul+1,_powf$1464+1
 10350  001DCC  C011  F106         	movff	?___flmul+2,_powf$1464+2
 10351  001DD0  C012  F107         	movff	?___flmul+3,_powf$1464+3
 10352  001DD4  C100  F00F         	movff	_powf$1463,___flmul@b
 10353  001DD8  C101  F010         	movff	_powf$1463+1,___flmul@b+1
 10354  001DDC  C102  F011         	movff	_powf$1463+2,___flmul@b+2
 10355  001DE0  C103  F012         	movff	_powf$1463+3,___flmul@b+3
 10356  001DE4  C104  F013         	movff	_powf$1464,___flmul@a
 10357  001DE8  C105  F014         	movff	_powf$1464+1,___flmul@a+1
 10358  001DEC  C106  F015         	movff	_powf$1464+2,___flmul@a+2
 10359  001DF0  C107  F016         	movff	_powf$1464+3,___flmul@a+3
 10360  001DF4  ECD2  F02A         	call	___flmul	;wreg free
 10361  001DF8  C00F  F14C         	movff	?___flmul,powf@r
 10362  001DFC  C010  F14D         	movff	?___flmul+1,powf@r+1
 10363  001E00  C011  F14E         	movff	?___flmul+2,powf@r+2
 10364  001E04  C012  F14F         	movff	?___flmul+3,powf@r+3
 10365  001E08  C130  F013         	movff	powf@s_l,___flmul@a
 10366  001E0C  C131  F014         	movff	powf@s_l+1,___flmul@a+1
 10367  001E10  C132  F015         	movff	powf@s_l+2,___flmul@a+2
 10368  001E14  C133  F016         	movff	powf@s_l+3,___flmul@a+3
 10369  001E18  C15C  F04B         	movff	powf@s,___fladd@a
 10370  001E1C  C15D  F04C         	movff	powf@s+1,___fladd@a+1
 10371  001E20  C15E  F04D         	movff	powf@s+2,___fladd@a+2
 10372  001E24  C15F  F04E         	movff	powf@s+3,___fladd@a+3
 10373  001E28  C16C  F047         	movff	powf@s_h,___fladd@b
 10374  001E2C  C16D  F048         	movff	powf@s_h+1,___fladd@b+1
 10375  001E30  C16E  F049         	movff	powf@s_h+2,___fladd@b+2
 10376  001E34  C16F  F04A         	movff	powf@s_h+3,___fladd@b+3
 10377  001E38  EC13  F026         	call	___fladd	;wreg free
 10378  001E3C  C047  F00F         	movff	?___fladd,___flmul@b
 10379  001E40  C048  F010         	movff	?___fladd+1,___flmul@b+1
 10380  001E44  C049  F011         	movff	?___fladd+2,___flmul@b+2
 10381  001E48  C04A  F012         	movff	?___fladd+3,___flmul@b+3
 10382  001E4C  ECD2  F02A         	call	___flmul	;wreg free
 10383  001E50  C00F  F158         	movff	?___flmul,_powf$1465
 10384  001E54  C010  F159         	movff	?___flmul+1,_powf$1465+1
 10385  001E58  C011  F15A         	movff	?___flmul+2,_powf$1465+2
 10386  001E5C  C012  F15B         	movff	?___flmul+3,_powf$1465+3
 10387  001E60  C14C  F047         	movff	powf@r,___fladd@b
 10388  001E64  C14D  F048         	movff	powf@r+1,___fladd@b+1
 10389  001E68  C14E  F049         	movff	powf@r+2,___fladd@b+2
 10390  001E6C  C14F  F04A         	movff	powf@r+3,___fladd@b+3
 10391  001E70  C158  F04B         	movff	_powf$1465,___fladd@a
 10392  001E74  C159  F04C         	movff	_powf$1465+1,___fladd@a+1
 10393  001E78  C15A  F04D         	movff	_powf$1465+2,___fladd@a+2
 10394  001E7C  C15B  F04E         	movff	_powf$1465+3,___fladd@a+3
 10395  001E80  EC13  F026         	call	___fladd	;wreg free
 10396  001E84  C047  F14C         	movff	?___fladd,powf@r
 10397  001E88  C048  F14D         	movff	?___fladd+1,powf@r+1
 10398  001E8C  C049  F14E         	movff	?___fladd+2,powf@r+2
 10399  001E90  C04A  F14F         	movff	?___fladd+3,powf@r+3
 10400  001E94  C16C  F00F         	movff	powf@s_h,___flmul@b
 10401  001E98  C16D  F010         	movff	powf@s_h+1,___flmul@b+1
 10402  001E9C  C16E  F011         	movff	powf@s_h+2,___flmul@b+2
 10403  001EA0  C16F  F012         	movff	powf@s_h+3,___flmul@b+3
 10404  001EA4  C16C  F013         	movff	powf@s_h,___flmul@a
 10405  001EA8  C16D  F014         	movff	powf@s_h+1,___flmul@a+1
 10406  001EAC  C16E  F015         	movff	powf@s_h+2,___flmul@a+2
 10407  001EB0  C16F  F016         	movff	powf@s_h+3,___flmul@a+3
 10408  001EB4  ECD2  F02A         	call	___flmul	;wreg free
 10409  001EB8  C00F  F18C         	movff	?___flmul,powf@s2
 10410  001EBC  C010  F18D         	movff	?___flmul+1,powf@s2+1
 10411  001EC0  C011  F18E         	movff	?___flmul+2,powf@s2+2
 10412  001EC4  C012  F18F         	movff	?___flmul+3,powf@s2+3
 10413  001EC8  0E00               	movlw	0
 10414  001ECA  6E4B               	movwf	___fladd@a^0,c
 10415  001ECC  0E00               	movlw	0
 10416  001ECE  6E4C               	movwf	(___fladd@a+1)^0,c
 10417  001ED0  0E40               	movlw	64
 10418  001ED2  6E4D               	movwf	(___fladd@a+2)^0,c
 10419  001ED4  0E40               	movlw	64
 10420  001ED6  6E4E               	movwf	(___fladd@a+3)^0,c
 10421  001ED8  C18C  F047         	movff	powf@s2,___fladd@b
 10422  001EDC  C18D  F048         	movff	powf@s2+1,___fladd@b+1
 10423  001EE0  C18E  F049         	movff	powf@s2+2,___fladd@b+2
 10424  001EE4  C18F  F04A         	movff	powf@s2+3,___fladd@b+3
 10425  001EE8  EC13  F026         	call	___fladd	;wreg free
 10426  001EEC  C047  F158         	movff	?___fladd,_powf$1465
 10427  001EF0  C048  F159         	movff	?___fladd+1,_powf$1465+1
 10428  001EF4  C049  F15A         	movff	?___fladd+2,_powf$1465+2
 10429  001EF8  C04A  F15B         	movff	?___fladd+3,_powf$1465+3
 10430  001EFC  C158  F047         	movff	_powf$1465,___fladd@b
 10431  001F00  C159  F048         	movff	_powf$1465+1,___fladd@b+1
 10432  001F04  C15A  F049         	movff	_powf$1465+2,___fladd@b+2
 10433  001F08  C15B  F04A         	movff	_powf$1465+3,___fladd@b+3
 10434  001F0C  C14C  F04B         	movff	powf@r,___fladd@a
 10435  001F10  C14D  F04C         	movff	powf@r+1,___fladd@a+1
 10436  001F14  C14E  F04D         	movff	powf@r+2,___fladd@a+2
 10437  001F18  C14F  F04E         	movff	powf@r+3,___fladd@a+3
 10438  001F1C  EC13  F026         	call	___fladd	;wreg free
 10439  001F20  C047  F168         	movff	?___fladd,powf@t_h
 10440  001F24  C048  F169         	movff	?___fladd+1,powf@t_h+1
 10441  001F28  C049  F16A         	movff	?___fladd+2,powf@t_h+2
 10442  001F2C  C04A  F16B         	movff	?___fladd+3,powf@t_h+3
 10443  001F30  C168  F1B8         	movff	powf@t_h,powf@__xc8_float_word
 10444  001F34  C169  F1B9         	movff	powf@t_h+1,powf@__xc8_float_word+1
 10445  001F38  C16A  F1BA         	movff	powf@t_h+2,powf@__xc8_float_word+2
 10446  001F3C  C16B  F1BB         	movff	powf@t_h+3,powf@__xc8_float_word+3
 10447  001F40  C1B8  F190         	movff	powf@__xc8_float_word,powf@is
 10448  001F44  C1B9  F191         	movff	powf@__xc8_float_word+1,powf@is+1
 10449  001F48  C1BA  F192         	movff	powf@__xc8_float_word+2,powf@is+2
 10450  001F4C  C1BB  F193         	movff	powf@__xc8_float_word+3,powf@is+3
 10451  001F50  0E00               	movlw	0
 10452  001F52  0101               	movlb	1	; () banked
 10453  001F54  1590               	andwf	powf@is& (0+255),w,b
 10454  001F56  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 10455  001F58  0EF0               	movlw	240
 10456  001F5A  1591               	andwf	(powf@is+1)& (0+255),w,b
 10457  001F5C  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 10458  001F5E  0EFF               	movlw	255
 10459  001F60  1592               	andwf	(powf@is+2)& (0+255),w,b
 10460  001F62  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 10461  001F64  0EFF               	movlw	255
 10462  001F66  1593               	andwf	(powf@is+3)& (0+255),w,b
 10463  001F68  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 10464  001F6A                     
 10465                           ; BSR set to: 1
 10466  001F6A  C1B8  F168         	movff	powf@__xc8_float_word,powf@t_h
 10467  001F6E  C1B9  F169         	movff	powf@__xc8_float_word+1,powf@t_h+1
 10468  001F72  C1BA  F16A         	movff	powf@__xc8_float_word+2,powf@t_h+2
 10469  001F76  C1BB  F16B         	movff	powf@__xc8_float_word+3,powf@t_h+3
 10470  001F7A                     
 10471                           ; BSR set to: 1
 10472  001F7A  0E00               	movlw	0
 10473  001F7C  6E4B               	movwf	___fladd@a^0,c
 10474  001F7E  0E00               	movlw	0
 10475  001F80  6E4C               	movwf	(___fladd@a+1)^0,c
 10476  001F82  0E40               	movlw	64
 10477  001F84  6E4D               	movwf	(___fladd@a+2)^0,c
 10478  001F86  0EC0               	movlw	192
 10479  001F88  6E4E               	movwf	(___fladd@a+3)^0,c
 10480  001F8A  C168  F047         	movff	powf@t_h,___fladd@b
 10481  001F8E  C169  F048         	movff	powf@t_h+1,___fladd@b+1
 10482  001F92  C16A  F049         	movff	powf@t_h+2,___fladd@b+2
 10483  001F96  C16B  F04A         	movff	powf@t_h+3,___fladd@b+3
 10484  001F9A  EC13  F026         	call	___fladd	;wreg free
 10485  001F9E  C047  F13C         	movff	?___fladd,_powf$1466
 10486  001FA2  C048  F13D         	movff	?___fladd+1,_powf$1466+1
 10487  001FA6  C049  F13E         	movff	?___fladd+2,_powf$1466+2
 10488  001FAA  C04A  F13F         	movff	?___fladd+3,_powf$1466+3
 10489  001FAE  C18C  F05B         	movff	powf@s2,___flsub@a
 10490  001FB2  C18D  F05C         	movff	powf@s2+1,___flsub@a+1
 10491  001FB6  C18E  F05D         	movff	powf@s2+2,___flsub@a+2
 10492  001FBA  C18F  F05E         	movff	powf@s2+3,___flsub@a+3
 10493  001FBE  C13C  F057         	movff	_powf$1466,___flsub@b
 10494  001FC2  C13D  F058         	movff	_powf$1466+1,___flsub@b+1
 10495  001FC6  C13E  F059         	movff	_powf$1466+2,___flsub@b+2
 10496  001FCA  C13F  F05A         	movff	_powf$1466+3,___flsub@b+3
 10497  001FCE  EC14  F03D         	call	___flsub	;wreg free
 10498  001FD2  C057  F140         	movff	?___flsub,_powf$1467
 10499  001FD6  C058  F141         	movff	?___flsub+1,_powf$1467+1
 10500  001FDA  C059  F142         	movff	?___flsub+2,_powf$1467+2
 10501  001FDE  C05A  F143         	movff	?___flsub+3,_powf$1467+3
 10502  001FE2  C14C  F057         	movff	powf@r,___flsub@b
 10503  001FE6  C14D  F058         	movff	powf@r+1,___flsub@b+1
 10504  001FEA  C14E  F059         	movff	powf@r+2,___flsub@b+2
 10505  001FEE  C14F  F05A         	movff	powf@r+3,___flsub@b+3
 10506  001FF2  C140  F05B         	movff	_powf$1467,___flsub@a
 10507  001FF6  C141  F05C         	movff	_powf$1467+1,___flsub@a+1
 10508  001FFA  C142  F05D         	movff	_powf$1467+2,___flsub@a+2
 10509  001FFE  C143  F05E         	movff	_powf$1467+3,___flsub@a+3
 10510  002002  EC14  F03D         	call	___flsub	;wreg free
 10511  002006  C057  F134         	movff	?___flsub,powf@t_l
 10512  00200A  C058  F135         	movff	?___flsub+1,powf@t_l+1
 10513  00200E  C059  F136         	movff	?___flsub+2,powf@t_l+2
 10514  002012  C05A  F137         	movff	?___flsub+3,powf@t_l+3
 10515  002016  C16C  F00F         	movff	powf@s_h,___flmul@b
 10516  00201A  C16D  F010         	movff	powf@s_h+1,___flmul@b+1
 10517  00201E  C16E  F011         	movff	powf@s_h+2,___flmul@b+2
 10518  002022  C16F  F012         	movff	powf@s_h+3,___flmul@b+3
 10519  002026  C168  F013         	movff	powf@t_h,___flmul@a
 10520  00202A  C169  F014         	movff	powf@t_h+1,___flmul@a+1
 10521  00202E  C16A  F015         	movff	powf@t_h+2,___flmul@a+2
 10522  002032  C16B  F016         	movff	powf@t_h+3,___flmul@a+3
 10523  002036  ECD2  F02A         	call	___flmul	;wreg free
 10524  00203A  C00F  F174         	movff	?___flmul,powf@u
 10525  00203E  C010  F175         	movff	?___flmul+1,powf@u+1
 10526  002042  C011  F176         	movff	?___flmul+2,powf@u+2
 10527  002046  C012  F177         	movff	?___flmul+3,powf@u+3
 10528  00204A  C168  F013         	movff	powf@t_h,___flmul@a
 10529  00204E  C169  F014         	movff	powf@t_h+1,___flmul@a+1
 10530  002052  C16A  F015         	movff	powf@t_h+2,___flmul@a+2
 10531  002056  C16B  F016         	movff	powf@t_h+3,___flmul@a+3
 10532  00205A  C130  F00F         	movff	powf@s_l,___flmul@b
 10533  00205E  C131  F010         	movff	powf@s_l+1,___flmul@b+1
 10534  002062  C132  F011         	movff	powf@s_l+2,___flmul@b+2
 10535  002066  C133  F012         	movff	powf@s_l+3,___flmul@b+3
 10536  00206A  ECD2  F02A         	call	___flmul	;wreg free
 10537  00206E  C00F  F047         	movff	?___flmul,___fladd@b
 10538  002072  C010  F048         	movff	?___flmul+1,___fladd@b+1
 10539  002076  C011  F049         	movff	?___flmul+2,___fladd@b+2
 10540  00207A  C012  F04A         	movff	?___flmul+3,___fladd@b+3
 10541  00207E  C15C  F013         	movff	powf@s,___flmul@a
 10542  002082  C15D  F014         	movff	powf@s+1,___flmul@a+1
 10543  002086  C15E  F015         	movff	powf@s+2,___flmul@a+2
 10544  00208A  C15F  F016         	movff	powf@s+3,___flmul@a+3
 10545  00208E  C134  F00F         	movff	powf@t_l,___flmul@b
 10546  002092  C135  F010         	movff	powf@t_l+1,___flmul@b+1
 10547  002096  C136  F011         	movff	powf@t_l+2,___flmul@b+2
 10548  00209A  C137  F012         	movff	powf@t_l+3,___flmul@b+3
 10549  00209E  ECD2  F02A         	call	___flmul	;wreg free
 10550  0020A2  C00F  F04B         	movff	?___flmul,___fladd@a
 10551  0020A6  C010  F04C         	movff	?___flmul+1,___fladd@a+1
 10552  0020AA  C011  F04D         	movff	?___flmul+2,___fladd@a+2
 10553  0020AE  C012  F04E         	movff	?___flmul+3,___fladd@a+3
 10554  0020B2  EC13  F026         	call	___fladd	;wreg free
 10555  0020B6  C047  F178         	movff	?___fladd,powf@v
 10556  0020BA  C048  F179         	movff	?___fladd+1,powf@v+1
 10557  0020BE  C049  F17A         	movff	?___fladd+2,powf@v+2
 10558  0020C2  C04A  F17B         	movff	?___fladd+3,powf@v+3
 10559  0020C6  C174  F047         	movff	powf@u,___fladd@b
 10560  0020CA  C175  F048         	movff	powf@u+1,___fladd@b+1
 10561  0020CE  C176  F049         	movff	powf@u+2,___fladd@b+2
 10562  0020D2  C177  F04A         	movff	powf@u+3,___fladd@b+3
 10563  0020D6  C178  F04B         	movff	powf@v,___fladd@a
 10564  0020DA  C179  F04C         	movff	powf@v+1,___fladd@a+1
 10565  0020DE  C17A  F04D         	movff	powf@v+2,___fladd@a+2
 10566  0020E2  C17B  F04E         	movff	powf@v+3,___fladd@a+3
 10567  0020E6  EC13  F026         	call	___fladd	;wreg free
 10568  0020EA  C047  F19C         	movff	?___fladd,powf@p_h
 10569  0020EE  C048  F19D         	movff	?___fladd+1,powf@p_h+1
 10570  0020F2  C049  F19E         	movff	?___fladd+2,powf@p_h+2
 10571  0020F6  C04A  F19F         	movff	?___fladd+3,powf@p_h+3
 10572  0020FA  C19C  F1B8         	movff	powf@p_h,powf@__xc8_float_word
 10573  0020FE  C19D  F1B9         	movff	powf@p_h+1,powf@__xc8_float_word+1
 10574  002102  C19E  F1BA         	movff	powf@p_h+2,powf@__xc8_float_word+2
 10575  002106  C19F  F1BB         	movff	powf@p_h+3,powf@__xc8_float_word+3
 10576  00210A  C1B8  F190         	movff	powf@__xc8_float_word,powf@is
 10577  00210E  C1B9  F191         	movff	powf@__xc8_float_word+1,powf@is+1
 10578  002112  C1BA  F192         	movff	powf@__xc8_float_word+2,powf@is+2
 10579  002116  C1BB  F193         	movff	powf@__xc8_float_word+3,powf@is+3
 10580  00211A  0E00               	movlw	0
 10581  00211C  0101               	movlb	1	; () banked
 10582  00211E  1590               	andwf	powf@is& (0+255),w,b
 10583  002120  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 10584  002122  0EF0               	movlw	240
 10585  002124  1591               	andwf	(powf@is+1)& (0+255),w,b
 10586  002126  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 10587  002128  0EFF               	movlw	255
 10588  00212A  1592               	andwf	(powf@is+2)& (0+255),w,b
 10589  00212C  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 10590  00212E  0EFF               	movlw	255
 10591  002130  1593               	andwf	(powf@is+3)& (0+255),w,b
 10592  002132  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 10593  002134                     
 10594                           ; BSR set to: 1
 10595  002134  C1B8  F19C         	movff	powf@__xc8_float_word,powf@p_h
 10596  002138  C1B9  F19D         	movff	powf@__xc8_float_word+1,powf@p_h+1
 10597  00213C  C1BA  F19E         	movff	powf@__xc8_float_word+2,powf@p_h+2
 10598  002140  C1BB  F19F         	movff	powf@__xc8_float_word+3,powf@p_h+3
 10599  002144                     
 10600                           ; BSR set to: 1
 10601  002144  C174  F05B         	movff	powf@u,___flsub@a
 10602  002148  C175  F05C         	movff	powf@u+1,___flsub@a+1
 10603  00214C  C176  F05D         	movff	powf@u+2,___flsub@a+2
 10604  002150  C177  F05E         	movff	powf@u+3,___flsub@a+3
 10605  002154  C19C  F057         	movff	powf@p_h,___flsub@b
 10606  002158  C19D  F058         	movff	powf@p_h+1,___flsub@b+1
 10607  00215C  C19E  F059         	movff	powf@p_h+2,___flsub@b+2
 10608  002160  C19F  F05A         	movff	powf@p_h+3,___flsub@b+3
 10609  002164  EC14  F03D         	call	___flsub	;wreg free
 10610  002168  C057  F194         	movff	?___flsub,_powf$1461
 10611  00216C  C058  F195         	movff	?___flsub+1,_powf$1461+1
 10612  002170  C059  F196         	movff	?___flsub+2,_powf$1461+2
 10613  002174  C05A  F197         	movff	?___flsub+3,_powf$1461+3
 10614  002178  C178  F057         	movff	powf@v,___flsub@b
 10615  00217C  C179  F058         	movff	powf@v+1,___flsub@b+1
 10616  002180  C17A  F059         	movff	powf@v+2,___flsub@b+2
 10617  002184  C17B  F05A         	movff	powf@v+3,___flsub@b+3
 10618  002188  C194  F05B         	movff	_powf$1461,___flsub@a
 10619  00218C  C195  F05C         	movff	_powf$1461+1,___flsub@a+1
 10620  002190  C196  F05D         	movff	_powf$1461+2,___flsub@a+2
 10621  002194  C197  F05E         	movff	_powf$1461+3,___flsub@a+3
 10622  002198  EC14  F03D         	call	___flsub	;wreg free
 10623  00219C  C057  F164         	movff	?___flsub,powf@p_l
 10624  0021A0  C058  F165         	movff	?___flsub+1,powf@p_l+1
 10625  0021A4  C059  F166         	movff	?___flsub+2,powf@p_l+2
 10626  0021A8  C05A  F167         	movff	?___flsub+3,powf@p_l+3
 10627  0021AC  C19C  F00F         	movff	powf@p_h,___flmul@b
 10628  0021B0  C19D  F010         	movff	powf@p_h+1,___flmul@b+1
 10629  0021B4  C19E  F011         	movff	powf@p_h+2,___flmul@b+2
 10630  0021B8  C19F  F012         	movff	powf@p_h+3,___flmul@b+3
 10631  0021BC  0E00               	movlw	0
 10632  0021BE  6E13               	movwf	___flmul@a^0,c
 10633  0021C0  0E40               	movlw	64
 10634  0021C2  6E14               	movwf	(___flmul@a+1)^0,c
 10635  0021C4  0E76               	movlw	118
 10636  0021C6  6E15               	movwf	(___flmul@a+2)^0,c
 10637  0021C8  0E3F               	movlw	63
 10638  0021CA  6E16               	movwf	(___flmul@a+3)^0,c
 10639  0021CC  ECD2  F02A         	call	___flmul	;wreg free
 10640  0021D0  C00F  F120         	movff	?___flmul,powf@z_h
 10641  0021D4  C010  F121         	movff	?___flmul+1,powf@z_h+1
 10642  0021D8  C011  F122         	movff	?___flmul+2,powf@z_h+2
 10643  0021DC  C012  F123         	movff	?___flmul+3,powf@z_h+3
 10644  0021E0  0E4F               	movlw	79
 10645  0021E2  6E13               	movwf	___flmul@a^0,c
 10646  0021E4  0E38               	movlw	56
 10647  0021E6  6E14               	movwf	(___flmul@a+1)^0,c
 10648  0021E8  0E76               	movlw	118
 10649  0021EA  6E15               	movwf	(___flmul@a+2)^0,c
 10650  0021EC  0E3F               	movlw	63
 10651  0021EE  6E16               	movwf	(___flmul@a+3)^0,c
 10652  0021F0  C164  F00F         	movff	powf@p_l,___flmul@b
 10653  0021F4  C165  F010         	movff	powf@p_l+1,___flmul@b+1
 10654  0021F8  C166  F011         	movff	powf@p_l+2,___flmul@b+2
 10655  0021FC  C167  F012         	movff	powf@p_l+3,___flmul@b+3
 10656  002200  ECD2  F02A         	call	___flmul	;wreg free
 10657  002204  C00F  F04B         	movff	?___flmul,___fladd@a
 10658  002208  C010  F04C         	movff	?___flmul+1,___fladd@a+1
 10659  00220C  C011  F04D         	movff	?___flmul+2,___fladd@a+2
 10660  002210  C012  F04E         	movff	?___flmul+3,___fladd@a+3
 10661  002214  0EC6               	movlw	198
 10662  002216  6E13               	movwf	___flmul@a^0,c
 10663  002218  0E23               	movlw	35
 10664  00221A  6E14               	movwf	(___flmul@a+1)^0,c
 10665  00221C  0EF6               	movlw	246
 10666  00221E  6E15               	movwf	(___flmul@a+2)^0,c
 10667  002220  0EB8               	movlw	184
 10668  002222  6E16               	movwf	(___flmul@a+3)^0,c
 10669  002224  C19C  F00F         	movff	powf@p_h,___flmul@b
 10670  002228  C19D  F010         	movff	powf@p_h+1,___flmul@b+1
 10671  00222C  C19E  F011         	movff	powf@p_h+2,___flmul@b+2
 10672  002230  C19F  F012         	movff	powf@p_h+3,___flmul@b+3
 10673  002234  ECD2  F02A         	call	___flmul	;wreg free
 10674  002238  C00F  F047         	movff	?___flmul,___fladd@b
 10675  00223C  C010  F048         	movff	?___flmul+1,___fladd@b+1
 10676  002240  C011  F049         	movff	?___flmul+2,___fladd@b+2
 10677  002244  C012  F04A         	movff	?___flmul+3,___fladd@b+3
 10678  002248  EC13  F026         	call	___fladd	;wreg free
 10679  00224C  C047  F158         	movff	?___fladd,_powf$1465
 10680  002250  C048  F159         	movff	?___fladd+1,_powf$1465+1
 10681  002254  C049  F15A         	movff	?___fladd+2,_powf$1465+2
 10682  002258  C04A  F15B         	movff	?___fladd+3,_powf$1465+3
 10683  00225C  C158  F047         	movff	_powf$1465,___fladd@b
 10684  002260  C159  F048         	movff	_powf$1465+1,___fladd@b+1
 10685  002264  C15A  F049         	movff	_powf$1465+2,___fladd@b+2
 10686  002268  C15B  F04A         	movff	_powf$1465+3,___fladd@b+3
 10687  00226C  C1A0  F0B4         	movff	powf@k,??_powf
 10688  002270  C1A1  F0B5         	movff	powf@k+1,??_powf+1
 10689  002274  0100               	movlb	0	; () banked
 10690  002276  90D8               	bcf	status,0,c
 10691  002278  37B4               	rlcf	??_powf& (0+255),f,b
 10692  00227A  37B5               	rlcf	(??_powf+1)& (0+255),f,b
 10693  00227C  90D8               	bcf	status,0,c
 10694  00227E  37B4               	rlcf	??_powf& (0+255),f,b
 10695  002280  37B5               	rlcf	(??_powf+1)& (0+255),f,b
 10696  002282  0E01               	movlw	low _dp_l
 10697  002284  25B4               	addwf	??_powf& (0+255),w,b
 10698  002286  6EF6               	movwf	tblptrl,c
 10699  002288  0E08               	movlw	high _dp_l
 10700  00228A  21B5               	addwfc	(??_powf+1)& (0+255),w,b
 10701  00228C  6EF7               	movwf	tblptrh,c
 10702  00228E                     	if	0	;There are less than 3 active tblptr bytes
 10703  00228E                     	endif
 10704  00228E  0009               	tblrd		*+
 10705  002290  CFF5 F04B          	movff	tablat,___fladd@a
 10706  002294  0009               	tblrd		*+
 10707  002296  CFF5 F04C          	movff	tablat,___fladd@a+1
 10708  00229A  0009               	tblrd		*+
 10709  00229C  CFF5 F04D          	movff	tablat,___fladd@a+2
 10710  0022A0  000A               	tblrd		*-
 10711  0022A2  CFF5 F04E          	movff	tablat,___fladd@a+3
 10712  0022A6  EC13  F026         	call	___fladd	;wreg free
 10713  0022AA  C047  F124         	movff	?___fladd,powf@z_l
 10714  0022AE  C048  F125         	movff	?___fladd+1,powf@z_l+1
 10715  0022B2  C049  F126         	movff	?___fladd+2,powf@z_l+2
 10716  0022B6  C04A  F127         	movff	?___fladd+3,powf@z_l+3
 10717  0022BA  C17C  F001         	movff	powf@n,___xxtofl@val
 10718  0022BE  C17D  F002         	movff	powf@n+1,___xxtofl@val+1
 10719  0022C2  C17E  F003         	movff	powf@n+2,___xxtofl@val+2
 10720  0022C6  C17F  F004         	movff	powf@n+3,___xxtofl@val+3
 10721  0022CA  0E01               	movlw	1
 10722  0022CC  EC3E  F033         	call	___xxtofl
 10723  0022D0  C001  F1B0         	movff	?___xxtofl,powf@t
 10724  0022D4  C002  F1B1         	movff	?___xxtofl+1,powf@t+1
 10725  0022D8  C003  F1B2         	movff	?___xxtofl+2,powf@t+2
 10726  0022DC  C004  F1B3         	movff	?___xxtofl+3,powf@t+3
 10727  0022E0  C124  F04B         	movff	powf@z_l,___fladd@a
 10728  0022E4  C125  F04C         	movff	powf@z_l+1,___fladd@a+1
 10729  0022E8  C126  F04D         	movff	powf@z_l+2,___fladd@a+2
 10730  0022EC  C127  F04E         	movff	powf@z_l+3,___fladd@a+3
 10731  0022F0  C120  F047         	movff	powf@z_h,___fladd@b
 10732  0022F4  C121  F048         	movff	powf@z_h+1,___fladd@b+1
 10733  0022F8  C122  F049         	movff	powf@z_h+2,___fladd@b+2
 10734  0022FC  C123  F04A         	movff	powf@z_h+3,___fladd@b+3
 10735  002300  EC13  F026         	call	___fladd	;wreg free
 10736  002304  C047  F158         	movff	?___fladd,_powf$1465
 10737  002308  C048  F159         	movff	?___fladd+1,_powf$1465+1
 10738  00230C  C049  F15A         	movff	?___fladd+2,_powf$1465+2
 10739  002310  C04A  F15B         	movff	?___fladd+3,_powf$1465+3
 10740  002314  C1A0  F0B4         	movff	powf@k,??_powf
 10741  002318  C1A1  F0B5         	movff	powf@k+1,??_powf+1
 10742  00231C  0100               	movlb	0	; () banked
 10743  00231E  90D8               	bcf	status,0,c
 10744  002320  37B4               	rlcf	??_powf& (0+255),f,b
 10745  002322  37B5               	rlcf	(??_powf+1)& (0+255),f,b
 10746  002324  90D8               	bcf	status,0,c
 10747  002326  37B4               	rlcf	??_powf& (0+255),f,b
 10748  002328  37B5               	rlcf	(??_powf+1)& (0+255),f,b
 10749  00232A  0E09               	movlw	low _dp_h
 10750  00232C  25B4               	addwf	??_powf& (0+255),w,b
 10751  00232E  6EF6               	movwf	tblptrl,c
 10752  002330  0E08               	movlw	high _dp_h
 10753  002332  21B5               	addwfc	(??_powf+1)& (0+255),w,b
 10754  002334  6EF7               	movwf	tblptrh,c
 10755  002336                     	if	0	;There are less than 3 active tblptr bytes
 10756  002336                     	endif
 10757  002336  0009               	tblrd		*+
 10758  002338  CFF5 F04B          	movff	tablat,___fladd@a
 10759  00233C  0009               	tblrd		*+
 10760  00233E  CFF5 F04C          	movff	tablat,___fladd@a+1
 10761  002342  0009               	tblrd		*+
 10762  002344  CFF5 F04D          	movff	tablat,___fladd@a+2
 10763  002348  000A               	tblrd		*-
 10764  00234A  CFF5 F04E          	movff	tablat,___fladd@a+3
 10765  00234E  C158  F047         	movff	_powf$1465,___fladd@b
 10766  002352  C159  F048         	movff	_powf$1465+1,___fladd@b+1
 10767  002356  C15A  F049         	movff	_powf$1465+2,___fladd@b+2
 10768  00235A  C15B  F04A         	movff	_powf$1465+3,___fladd@b+3
 10769  00235E  EC13  F026         	call	___fladd	;wreg free
 10770  002362  C047  F108         	movff	?___fladd,_powf$1468
 10771  002366  C048  F109         	movff	?___fladd+1,_powf$1468+1
 10772  00236A  C049  F10A         	movff	?___fladd+2,_powf$1468+2
 10773  00236E  C04A  F10B         	movff	?___fladd+3,_powf$1468+3
 10774  002372  C108  F047         	movff	_powf$1468,___fladd@b
 10775  002376  C109  F048         	movff	_powf$1468+1,___fladd@b+1
 10776  00237A  C10A  F049         	movff	_powf$1468+2,___fladd@b+2
 10777  00237E  C10B  F04A         	movff	_powf$1468+3,___fladd@b+3
 10778  002382  C1B0  F04B         	movff	powf@t,___fladd@a
 10779  002386  C1B1  F04C         	movff	powf@t+1,___fladd@a+1
 10780  00238A  C1B2  F04D         	movff	powf@t+2,___fladd@a+2
 10781  00238E  C1B3  F04E         	movff	powf@t+3,___fladd@a+3
 10782  002392  EC13  F026         	call	___fladd	;wreg free
 10783  002396  C047  F180         	movff	?___fladd,powf@t1
 10784  00239A  C048  F181         	movff	?___fladd+1,powf@t1+1
 10785  00239E  C049  F182         	movff	?___fladd+2,powf@t1+2
 10786  0023A2  C04A  F183         	movff	?___fladd+3,powf@t1+3
 10787  0023A6  C180  F1B8         	movff	powf@t1,powf@__xc8_float_word
 10788  0023AA  C181  F1B9         	movff	powf@t1+1,powf@__xc8_float_word+1
 10789  0023AE  C182  F1BA         	movff	powf@t1+2,powf@__xc8_float_word+2
 10790  0023B2  C183  F1BB         	movff	powf@t1+3,powf@__xc8_float_word+3
 10791  0023B6  C1B8  F190         	movff	powf@__xc8_float_word,powf@is
 10792  0023BA  C1B9  F191         	movff	powf@__xc8_float_word+1,powf@is+1
 10793  0023BE  C1BA  F192         	movff	powf@__xc8_float_word+2,powf@is+2
 10794  0023C2  C1BB  F193         	movff	powf@__xc8_float_word+3,powf@is+3
 10795  0023C6  0E00               	movlw	0
 10796  0023C8  0101               	movlb	1	; () banked
 10797  0023CA  1590               	andwf	powf@is& (0+255),w,b
 10798  0023CC  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 10799  0023CE  0EF0               	movlw	240
 10800  0023D0  1591               	andwf	(powf@is+1)& (0+255),w,b
 10801  0023D2  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 10802  0023D4  0EFF               	movlw	255
 10803  0023D6  1592               	andwf	(powf@is+2)& (0+255),w,b
 10804  0023D8  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 10805  0023DA  0EFF               	movlw	255
 10806  0023DC  1593               	andwf	(powf@is+3)& (0+255),w,b
 10807  0023DE  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 10808  0023E0                     
 10809                           ; BSR set to: 1
 10810  0023E0  C1B8  F180         	movff	powf@__xc8_float_word,powf@t1
 10811  0023E4  C1B9  F181         	movff	powf@__xc8_float_word+1,powf@t1+1
 10812  0023E8  C1BA  F182         	movff	powf@__xc8_float_word+2,powf@t1+2
 10813  0023EC  C1BB  F183         	movff	powf@__xc8_float_word+3,powf@t1+3
 10814  0023F0                     
 10815                           ; BSR set to: 1
 10816  0023F0  C1B0  F05B         	movff	powf@t,___flsub@a
 10817  0023F4  C1B1  F05C         	movff	powf@t+1,___flsub@a+1
 10818  0023F8  C1B2  F05D         	movff	powf@t+2,___flsub@a+2
 10819  0023FC  C1B3  F05E         	movff	powf@t+3,___flsub@a+3
 10820  002400  C180  F057         	movff	powf@t1,___flsub@b
 10821  002404  C181  F058         	movff	powf@t1+1,___flsub@b+1
 10822  002408  C182  F059         	movff	powf@t1+2,___flsub@b+2
 10823  00240C  C183  F05A         	movff	powf@t1+3,___flsub@b+3
 10824  002410  EC14  F03D         	call	___flsub	;wreg free
 10825  002414  C057  F194         	movff	?___flsub,_powf$1461
 10826  002418  C058  F195         	movff	?___flsub+1,_powf$1461+1
 10827  00241C  C059  F196         	movff	?___flsub+2,_powf$1461+2
 10828  002420  C05A  F197         	movff	?___flsub+3,_powf$1461+3
 10829  002424  C1A0  F0B4         	movff	powf@k,??_powf
 10830  002428  C1A1  F0B5         	movff	powf@k+1,??_powf+1
 10831  00242C  0100               	movlb	0	; () banked
 10832  00242E  90D8               	bcf	status,0,c
 10833  002430  37B4               	rlcf	??_powf& (0+255),f,b
 10834  002432  37B5               	rlcf	(??_powf+1)& (0+255),f,b
 10835  002434  90D8               	bcf	status,0,c
 10836  002436  37B4               	rlcf	??_powf& (0+255),f,b
 10837  002438  37B5               	rlcf	(??_powf+1)& (0+255),f,b
 10838  00243A  0E09               	movlw	low _dp_h
 10839  00243C  25B4               	addwf	??_powf& (0+255),w,b
 10840  00243E  6EF6               	movwf	tblptrl,c
 10841  002440  0E08               	movlw	high _dp_h
 10842  002442  21B5               	addwfc	(??_powf+1)& (0+255),w,b
 10843  002444  6EF7               	movwf	tblptrh,c
 10844  002446                     	if	0	;There are less than 3 active tblptr bytes
 10845  002446                     	endif
 10846  002446  0009               	tblrd		*+
 10847  002448  CFF5 F05B          	movff	tablat,___flsub@a
 10848  00244C  0009               	tblrd		*+
 10849  00244E  CFF5 F05C          	movff	tablat,___flsub@a+1
 10850  002452  0009               	tblrd		*+
 10851  002454  CFF5 F05D          	movff	tablat,___flsub@a+2
 10852  002458  000A               	tblrd		*-
 10853  00245A  CFF5 F05E          	movff	tablat,___flsub@a+3
 10854  00245E  C194  F057         	movff	_powf$1461,___flsub@b
 10855  002462  C195  F058         	movff	_powf$1461+1,___flsub@b+1
 10856  002466  C196  F059         	movff	_powf$1461+2,___flsub@b+2
 10857  00246A  C197  F05A         	movff	_powf$1461+3,___flsub@b+3
 10858  00246E  EC14  F03D         	call	___flsub	;wreg free
 10859  002472  C057  F140         	movff	?___flsub,_powf$1467
 10860  002476  C058  F141         	movff	?___flsub+1,_powf$1467+1
 10861  00247A  C059  F142         	movff	?___flsub+2,_powf$1467+2
 10862  00247E  C05A  F143         	movff	?___flsub+3,_powf$1467+3
 10863  002482  C120  F05B         	movff	powf@z_h,___flsub@a
 10864  002486  C121  F05C         	movff	powf@z_h+1,___flsub@a+1
 10865  00248A  C122  F05D         	movff	powf@z_h+2,___flsub@a+2
 10866  00248E  C123  F05E         	movff	powf@z_h+3,___flsub@a+3
 10867  002492  C140  F057         	movff	_powf$1467,___flsub@b
 10868  002496  C141  F058         	movff	_powf$1467+1,___flsub@b+1
 10869  00249A  C142  F059         	movff	_powf$1467+2,___flsub@b+2
 10870  00249E  C143  F05A         	movff	_powf$1467+3,___flsub@b+3
 10871  0024A2  EC14  F03D         	call	___flsub	;wreg free
 10872  0024A6  C057  F10C         	movff	?___flsub,_powf$1469
 10873  0024AA  C058  F10D         	movff	?___flsub+1,_powf$1469+1
 10874  0024AE  C059  F10E         	movff	?___flsub+2,_powf$1469+2
 10875  0024B2  C05A  F10F         	movff	?___flsub+3,_powf$1469+3
 10876  0024B6  C124  F057         	movff	powf@z_l,___flsub@b
 10877  0024BA  C125  F058         	movff	powf@z_l+1,___flsub@b+1
 10878  0024BE  C126  F059         	movff	powf@z_l+2,___flsub@b+2
 10879  0024C2  C127  F05A         	movff	powf@z_l+3,___flsub@b+3
 10880  0024C6  C10C  F05B         	movff	_powf$1469,___flsub@a
 10881  0024CA  C10D  F05C         	movff	_powf$1469+1,___flsub@a+1
 10882  0024CE  C10E  F05D         	movff	_powf$1469+2,___flsub@a+2
 10883  0024D2  C10F  F05E         	movff	_powf$1469+3,___flsub@a+3
 10884  0024D6  EC14  F03D         	call	___flsub	;wreg free
 10885  0024DA  C057  F11C         	movff	?___flsub,powf@t2
 10886  0024DE  C058  F11D         	movff	?___flsub+1,powf@t2+1
 10887  0024E2  C059  F11E         	movff	?___flsub+2,powf@t2+2
 10888  0024E6  C05A  F11F         	movff	?___flsub+3,powf@t2+3
 10889  0024EA                     l5822:
 10890  0024EA  C0B0  F1B8         	movff	powf@y,powf@__xc8_float_word
 10891  0024EE  C0B1  F1B9         	movff	powf@y+1,powf@__xc8_float_word+1
 10892  0024F2  C0B2  F1BA         	movff	powf@y+2,powf@__xc8_float_word+2
 10893  0024F6  C0B3  F1BB         	movff	powf@y+3,powf@__xc8_float_word+3
 10894  0024FA  C1B8  F190         	movff	powf@__xc8_float_word,powf@is
 10895  0024FE  C1B9  F191         	movff	powf@__xc8_float_word+1,powf@is+1
 10896  002502  C1BA  F192         	movff	powf@__xc8_float_word+2,powf@is+2
 10897  002506  C1BB  F193         	movff	powf@__xc8_float_word+3,powf@is+3
 10898  00250A  0E00               	movlw	0
 10899  00250C  0101               	movlb	1	; () banked
 10900  00250E  1590               	andwf	powf@is& (0+255),w,b
 10901  002510  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 10902  002512  0EF0               	movlw	240
 10903  002514  1591               	andwf	(powf@is+1)& (0+255),w,b
 10904  002516  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 10905  002518  0EFF               	movlw	255
 10906  00251A  1592               	andwf	(powf@is+2)& (0+255),w,b
 10907  00251C  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 10908  00251E  0EFF               	movlw	255
 10909  002520  1593               	andwf	(powf@is+3)& (0+255),w,b
 10910  002522  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 10911  002524                     
 10912                           ; BSR set to: 1
 10913  002524  C1B8  F128         	movff	powf@__xc8_float_word,powf@y1
 10914  002528  C1B9  F129         	movff	powf@__xc8_float_word+1,powf@y1+1
 10915  00252C  C1BA  F12A         	movff	powf@__xc8_float_word+2,powf@y1+2
 10916  002530  C1BB  F12B         	movff	powf@__xc8_float_word+3,powf@y1+3
 10917  002534                     
 10918                           ; BSR set to: 1
 10919  002534  C180  F013         	movff	powf@t1,___flmul@a
 10920  002538  C181  F014         	movff	powf@t1+1,___flmul@a+1
 10921  00253C  C182  F015         	movff	powf@t1+2,___flmul@a+2
 10922  002540  C183  F016         	movff	powf@t1+3,___flmul@a+3
 10923  002544  C128  F05B         	movff	powf@y1,___flsub@a
 10924  002548  C129  F05C         	movff	powf@y1+1,___flsub@a+1
 10925  00254C  C12A  F05D         	movff	powf@y1+2,___flsub@a+2
 10926  002550  C12B  F05E         	movff	powf@y1+3,___flsub@a+3
 10927  002554  C0B0  F057         	movff	powf@y,___flsub@b
 10928  002558  C0B1  F058         	movff	powf@y+1,___flsub@b+1
 10929  00255C  C0B2  F059         	movff	powf@y+2,___flsub@b+2
 10930  002560  C0B3  F05A         	movff	powf@y+3,___flsub@b+3
 10931  002564  EC14  F03D         	call	___flsub	;wreg free
 10932  002568  C057  F00F         	movff	?___flsub,___flmul@b
 10933  00256C  C058  F010         	movff	?___flsub+1,___flmul@b+1
 10934  002570  C059  F011         	movff	?___flsub+2,___flmul@b+2
 10935  002574  C05A  F012         	movff	?___flsub+3,___flmul@b+3
 10936  002578  ECD2  F02A         	call	___flmul	;wreg free
 10937  00257C  C00F  F110         	movff	?___flmul,_powf$1470
 10938  002580  C010  F111         	movff	?___flmul+1,_powf$1470+1
 10939  002584  C011  F112         	movff	?___flmul+2,_powf$1470+2
 10940  002588  C012  F113         	movff	?___flmul+3,_powf$1470+3
 10941  00258C  C110  F047         	movff	_powf$1470,___fladd@b
 10942  002590  C111  F048         	movff	_powf$1470+1,___fladd@b+1
 10943  002594  C112  F049         	movff	_powf$1470+2,___fladd@b+2
 10944  002598  C113  F04A         	movff	_powf$1470+3,___fladd@b+3
 10945  00259C  C11C  F013         	movff	powf@t2,___flmul@a
 10946  0025A0  C11D  F014         	movff	powf@t2+1,___flmul@a+1
 10947  0025A4  C11E  F015         	movff	powf@t2+2,___flmul@a+2
 10948  0025A8  C11F  F016         	movff	powf@t2+3,___flmul@a+3
 10949  0025AC  C0B0  F00F         	movff	powf@y,___flmul@b
 10950  0025B0  C0B1  F010         	movff	powf@y+1,___flmul@b+1
 10951  0025B4  C0B2  F011         	movff	powf@y+2,___flmul@b+2
 10952  0025B8  C0B3  F012         	movff	powf@y+3,___flmul@b+3
 10953  0025BC  ECD2  F02A         	call	___flmul	;wreg free
 10954  0025C0  C00F  F04B         	movff	?___flmul,___fladd@a
 10955  0025C4  C010  F04C         	movff	?___flmul+1,___fladd@a+1
 10956  0025C8  C011  F04D         	movff	?___flmul+2,___fladd@a+2
 10957  0025CC  C012  F04E         	movff	?___flmul+3,___fladd@a+3
 10958  0025D0  EC13  F026         	call	___fladd	;wreg free
 10959  0025D4  C047  F164         	movff	?___fladd,powf@p_l
 10960  0025D8  C048  F165         	movff	?___fladd+1,powf@p_l+1
 10961  0025DC  C049  F166         	movff	?___fladd+2,powf@p_l+2
 10962  0025E0  C04A  F167         	movff	?___fladd+3,powf@p_l+3
 10963  0025E4  C128  F00F         	movff	powf@y1,___flmul@b
 10964  0025E8  C129  F010         	movff	powf@y1+1,___flmul@b+1
 10965  0025EC  C12A  F011         	movff	powf@y1+2,___flmul@b+2
 10966  0025F0  C12B  F012         	movff	powf@y1+3,___flmul@b+3
 10967  0025F4  C180  F013         	movff	powf@t1,___flmul@a
 10968  0025F8  C181  F014         	movff	powf@t1+1,___flmul@a+1
 10969  0025FC  C182  F015         	movff	powf@t1+2,___flmul@a+2
 10970  002600  C183  F016         	movff	powf@t1+3,___flmul@a+3
 10971  002604  ECD2  F02A         	call	___flmul	;wreg free
 10972  002608  C00F  F19C         	movff	?___flmul,powf@p_h
 10973  00260C  C010  F19D         	movff	?___flmul+1,powf@p_h+1
 10974  002610  C011  F19E         	movff	?___flmul+2,powf@p_h+2
 10975  002614  C012  F19F         	movff	?___flmul+3,powf@p_h+3
 10976  002618  C164  F047         	movff	powf@p_l,___fladd@b
 10977  00261C  C165  F048         	movff	powf@p_l+1,___fladd@b+1
 10978  002620  C166  F049         	movff	powf@p_l+2,___fladd@b+2
 10979  002624  C167  F04A         	movff	powf@p_l+3,___fladd@b+3
 10980  002628  C19C  F04B         	movff	powf@p_h,___fladd@a
 10981  00262C  C19D  F04C         	movff	powf@p_h+1,___fladd@a+1
 10982  002630  C19E  F04D         	movff	powf@p_h+2,___fladd@a+2
 10983  002634  C19F  F04E         	movff	powf@p_h+3,___fladd@a+3
 10984  002638  EC13  F026         	call	___fladd	;wreg free
 10985  00263C  C047  F1B4         	movff	?___fladd,powf@z
 10986  002640  C048  F1B5         	movff	?___fladd+1,powf@z+1
 10987  002644  C049  F1B6         	movff	?___fladd+2,powf@z+2
 10988  002648  C04A  F1B7         	movff	?___fladd+3,powf@z+3
 10989  00264C  C1B4  F1B8         	movff	powf@z,powf@__xc8_float_word
 10990  002650  C1B5  F1B9         	movff	powf@z+1,powf@__xc8_float_word+1
 10991  002654  C1B6  F1BA         	movff	powf@z+2,powf@__xc8_float_word+2
 10992  002658  C1B7  F1BB         	movff	powf@z+3,powf@__xc8_float_word+3
 10993  00265C  C1B8  F1AC         	movff	powf@__xc8_float_word,powf@j
 10994  002660  C1B9  F1AD         	movff	powf@__xc8_float_word+1,powf@j+1
 10995  002664  C1BA  F1AE         	movff	powf@__xc8_float_word+2,powf@j+2
 10996  002668  C1BB  F1AF         	movff	powf@__xc8_float_word+3,powf@j+3
 10997  00266C  0101               	movlb	1	; () banked
 10998  00266E  BFAF               	btfsc	(powf@j+3)& (0+255),7,b
 10999  002670  EF46  F013         	goto	u7241
 11000  002674  05AC               	decf	powf@j& (0+255),w,b
 11001  002676  0E00               	movlw	0
 11002  002678  59AD               	subwfb	(powf@j+1)& (0+255),w,b
 11003  00267A  0E00               	movlw	0
 11004  00267C  59AE               	subwfb	(powf@j+2)& (0+255),w,b
 11005  00267E  0E43               	movlw	67
 11006  002680  59AF               	subwfb	(powf@j+3)& (0+255),w,b
 11007  002682  A0D8               	btfss	status,0,c
 11008  002684  EF46  F013         	goto	u7241
 11009  002688  EF48  F013         	goto	u7240
 11010  00268C                     u7241:
 11011  00268C  EF7E  F013         	goto	l5850
 11012  002690                     u7240:
 11013  002690                     
 11014                           ; BSR set to: 1
 11015  002690  0ECA               	movlw	202
 11016  002692  6E13               	movwf	___flmul@a^0,c
 11017  002694  0EF2               	movlw	242
 11018  002696  6E14               	movwf	(___flmul@a+1)^0,c
 11019  002698  0E49               	movlw	73
 11020  00269A  6E15               	movwf	(___flmul@a+2)^0,c
 11021  00269C  0E71               	movlw	113
 11022  00269E  6E16               	movwf	(___flmul@a+3)^0,c
 11023  0026A0  C188  F00F         	movff	powf@sn,___flmul@b
 11024  0026A4  C189  F010         	movff	powf@sn+1,___flmul@b+1
 11025  0026A8  C18A  F011         	movff	powf@sn+2,___flmul@b+2
 11026  0026AC  C18B  F012         	movff	powf@sn+3,___flmul@b+3
 11027  0026B0  ECD2  F02A         	call	___flmul	;wreg free
 11028  0026B4  C00F  F1A4         	movff	?___flmul,_powf$1458
 11029  0026B8  C010  F1A5         	movff	?___flmul+1,_powf$1458+1
 11030  0026BC  C011  F1A6         	movff	?___flmul+2,_powf$1458+2
 11031  0026C0  C012  F1A7         	movff	?___flmul+3,_powf$1458+3
 11032  0026C4  C1A4  F00F         	movff	_powf$1458,___flmul@b
 11033  0026C8  C1A5  F010         	movff	_powf$1458+1,___flmul@b+1
 11034  0026CC  C1A6  F011         	movff	_powf$1458+2,___flmul@b+2
 11035  0026D0  C1A7  F012         	movff	_powf$1458+3,___flmul@b+3
 11036  0026D4  0ECA               	movlw	202
 11037  0026D6  6E13               	movwf	___flmul@a^0,c
 11038  0026D8  0EF2               	movlw	242
 11039  0026DA  6E14               	movwf	(___flmul@a+1)^0,c
 11040  0026DC  0E49               	movlw	73
 11041  0026DE  6E15               	movwf	(___flmul@a+2)^0,c
 11042  0026E0  0E71               	movlw	113
 11043  0026E2  6E16               	movwf	(___flmul@a+3)^0,c
 11044  0026E4  ECD2  F02A         	call	___flmul	;wreg free
 11045  0026E8  C00F  F0AC         	movff	?___flmul,?_powf
 11046  0026EC  C010  F0AD         	movff	?___flmul+1,?_powf+1
 11047  0026F0  C011  F0AE         	movff	?___flmul+2,?_powf+2
 11048  0026F4  C012  F0AF         	movff	?___flmul+3,?_powf+3
 11049  0026F8  EF81  F019         	goto	l1220
 11050  0026FC                     l5850:
 11051                           
 11052                           ; BSR set to: 1
 11053  0026FC  0E43               	movlw	67
 11054  0026FE  19AF               	xorwf	(powf@j+3)& (0+255),w,b
 11055  002700  11AC               	iorwf	powf@j& (0+255),w,b
 11056  002702  11AD               	iorwf	(powf@j+1)& (0+255),w,b
 11057  002704  11AE               	iorwf	(powf@j+2)& (0+255),w,b
 11058  002706  A4D8               	btfss	status,2,c
 11059  002708  EF88  F013         	goto	u7251
 11060  00270C  EF8A  F013         	goto	u7250
 11061  002710                     u7251:
 11062  002710  EFFE  F013         	goto	l5858
 11063  002714                     u7250:
 11064  002714                     
 11065                           ; BSR set to: 1
 11066  002714  C19C  F05B         	movff	powf@p_h,___flsub@a
 11067  002718  C19D  F05C         	movff	powf@p_h+1,___flsub@a+1
 11068  00271C  C19E  F05D         	movff	powf@p_h+2,___flsub@a+2
 11069  002720  C19F  F05E         	movff	powf@p_h+3,___flsub@a+3
 11070  002724  C1B4  F057         	movff	powf@z,___flsub@b
 11071  002728  C1B5  F058         	movff	powf@z+1,___flsub@b+1
 11072  00272C  C1B6  F059         	movff	powf@z+2,___flsub@b+2
 11073  002730  C1B7  F05A         	movff	powf@z+3,___flsub@b+3
 11074  002734  EC14  F03D         	call	___flsub	;wreg free
 11075  002738  C057  F060         	movff	?___flsub,___flge@ff1
 11076  00273C  C058  F061         	movff	?___flsub+1,___flge@ff1+1
 11077  002740  C059  F062         	movff	?___flsub+2,___flge@ff1+2
 11078  002744  C05A  F063         	movff	?___flsub+3,___flge@ff1+3
 11079  002748  0E3C               	movlw	60
 11080  00274A  6E4B               	movwf	___fladd@a^0,c
 11081  00274C  0EAA               	movlw	170
 11082  00274E  6E4C               	movwf	(___fladd@a+1)^0,c
 11083  002750  0E38               	movlw	56
 11084  002752  6E4D               	movwf	(___fladd@a+2)^0,c
 11085  002754  0E33               	movlw	51
 11086  002756  6E4E               	movwf	(___fladd@a+3)^0,c
 11087  002758  C164  F047         	movff	powf@p_l,___fladd@b
 11088  00275C  C165  F048         	movff	powf@p_l+1,___fladd@b+1
 11089  002760  C166  F049         	movff	powf@p_l+2,___fladd@b+2
 11090  002764  C167  F04A         	movff	powf@p_l+3,___fladd@b+3
 11091  002768  EC13  F026         	call	___fladd	;wreg free
 11092  00276C  C047  F064         	movff	?___fladd,___flge@ff2
 11093  002770  C048  F065         	movff	?___fladd+1,___flge@ff2+1
 11094  002774  C049  F066         	movff	?___fladd+2,___flge@ff2+2
 11095  002778  C04A  F067         	movff	?___fladd+3,___flge@ff2+3
 11096  00277C  EC65  F037         	call	___flge	;wreg free
 11097  002780  0100               	movlb	0	; () banked
 11098  002782  B0D8               	btfsc	status,0,c
 11099  002784  EFC6  F013         	goto	u7261
 11100  002788  EFC8  F013         	goto	u7260
 11101  00278C                     u7261:
 11102  00278C  EFC9  F014         	goto	l5874
 11103  002790                     u7260:
 11104  002790                     
 11105                           ; BSR set to: 0
 11106  002790  0ECA               	movlw	202
 11107  002792  6E13               	movwf	___flmul@a^0,c
 11108  002794  0EF2               	movlw	242
 11109  002796  6E14               	movwf	(___flmul@a+1)^0,c
 11110  002798  0E49               	movlw	73
 11111  00279A  6E15               	movwf	(___flmul@a+2)^0,c
 11112  00279C  0E71               	movlw	113
 11113  00279E  6E16               	movwf	(___flmul@a+3)^0,c
 11114  0027A0  C188  F00F         	movff	powf@sn,___flmul@b
 11115  0027A4  C189  F010         	movff	powf@sn+1,___flmul@b+1
 11116  0027A8  C18A  F011         	movff	powf@sn+2,___flmul@b+2
 11117  0027AC  C18B  F012         	movff	powf@sn+3,___flmul@b+3
 11118  0027B0  ECD2  F02A         	call	___flmul	;wreg free
 11119  0027B4  C00F  F1A4         	movff	?___flmul,_powf$1458
 11120  0027B8  C010  F1A5         	movff	?___flmul+1,_powf$1458+1
 11121  0027BC  C011  F1A6         	movff	?___flmul+2,_powf$1458+2
 11122  0027C0  C012  F1A7         	movff	?___flmul+3,_powf$1458+3
 11123  0027C4  C1A4  F00F         	movff	_powf$1458,___flmul@b
 11124  0027C8  C1A5  F010         	movff	_powf$1458+1,___flmul@b+1
 11125  0027CC  C1A6  F011         	movff	_powf$1458+2,___flmul@b+2
 11126  0027D0  C1A7  F012         	movff	_powf$1458+3,___flmul@b+3
 11127  0027D4  0ECA               	movlw	202
 11128  0027D6  6E13               	movwf	___flmul@a^0,c
 11129  0027D8  0EF2               	movlw	242
 11130  0027DA  6E14               	movwf	(___flmul@a+1)^0,c
 11131  0027DC  0E49               	movlw	73
 11132  0027DE  6E15               	movwf	(___flmul@a+2)^0,c
 11133  0027E0  0E71               	movlw	113
 11134  0027E2  6E16               	movwf	(___flmul@a+3)^0,c
 11135  0027E4  ECD2  F02A         	call	___flmul	;wreg free
 11136  0027E8  C00F  F0AC         	movff	?___flmul,?_powf
 11137  0027EC  C010  F0AD         	movff	?___flmul+1,?_powf+1
 11138  0027F0  C011  F0AE         	movff	?___flmul+2,?_powf+2
 11139  0027F4  C012  F0AF         	movff	?___flmul+3,?_powf+3
 11140  0027F8  EF81  F019         	goto	l1220
 11141  0027FC                     l5858:
 11142                           
 11143                           ; BSR set to: 1
 11144  0027FC  0EFF               	movlw	255
 11145  0027FE  15AC               	andwf	powf@j& (0+255),w,b
 11146  002800  0100               	movlb	0	; () banked
 11147  002802  6FB4               	movwf	??_powf& (0+255),b
 11148  002804  0EFF               	movlw	255
 11149  002806  0101               	movlb	1	; () banked
 11150  002808  15AD               	andwf	(powf@j+1)& (0+255),w,b
 11151  00280A  0100               	movlb	0	; () banked
 11152  00280C  6FB5               	movwf	(??_powf+1)& (0+255),b
 11153  00280E  0EFF               	movlw	255
 11154  002810  0101               	movlb	1	; () banked
 11155  002812  15AE               	andwf	(powf@j+2)& (0+255),w,b
 11156  002814  0100               	movlb	0	; () banked
 11157  002816  6FB6               	movwf	(??_powf+2)& (0+255),b
 11158  002818  0E7F               	movlw	127
 11159  00281A  0101               	movlb	1	; () banked
 11160  00281C  15AF               	andwf	(powf@j+3)& (0+255),w,b
 11161  00281E  0100               	movlb	0	; () banked
 11162  002820  6FB7               	movwf	(??_powf+3)& (0+255),b
 11163  002822  BFB7               	btfsc	(??_powf+3)& (0+255),7,b
 11164  002824  EF20  F014         	goto	u7271
 11165  002828  05B4               	decf	??_powf& (0+255),w,b
 11166  00282A  0E00               	movlw	0
 11167  00282C  59B5               	subwfb	(??_powf+1)& (0+255),w,b
 11168  00282E  0E16               	movlw	22
 11169  002830  59B6               	subwfb	(??_powf+2)& (0+255),w,b
 11170  002832  0E43               	movlw	67
 11171  002834  59B7               	subwfb	(??_powf+3)& (0+255),w,b
 11172  002836  A0D8               	btfss	status,0,c
 11173  002838  EF20  F014         	goto	u7271
 11174  00283C  EF22  F014         	goto	u7270
 11175  002840                     u7271:
 11176  002840  EF58  F014         	goto	l5866
 11177  002844                     u7270:
 11178  002844                     
 11179                           ; BSR set to: 0
 11180  002844  0E60               	movlw	96
 11181  002846  6E13               	movwf	___flmul@a^0,c
 11182  002848  0E42               	movlw	66
 11183  00284A  6E14               	movwf	(___flmul@a+1)^0,c
 11184  00284C  0EA2               	movlw	162
 11185  00284E  6E15               	movwf	(___flmul@a+2)^0,c
 11186  002850  0E0D               	movlw	13
 11187  002852  6E16               	movwf	(___flmul@a+3)^0,c
 11188  002854  C188  F00F         	movff	powf@sn,___flmul@b
 11189  002858  C189  F010         	movff	powf@sn+1,___flmul@b+1
 11190  00285C  C18A  F011         	movff	powf@sn+2,___flmul@b+2
 11191  002860  C18B  F012         	movff	powf@sn+3,___flmul@b+3
 11192  002864  ECD2  F02A         	call	___flmul	;wreg free
 11193  002868  C00F  F1A4         	movff	?___flmul,_powf$1458
 11194  00286C  C010  F1A5         	movff	?___flmul+1,_powf$1458+1
 11195  002870  C011  F1A6         	movff	?___flmul+2,_powf$1458+2
 11196  002874  C012  F1A7         	movff	?___flmul+3,_powf$1458+3
 11197  002878  C1A4  F00F         	movff	_powf$1458,___flmul@b
 11198  00287C  C1A5  F010         	movff	_powf$1458+1,___flmul@b+1
 11199  002880  C1A6  F011         	movff	_powf$1458+2,___flmul@b+2
 11200  002884  C1A7  F012         	movff	_powf$1458+3,___flmul@b+3
 11201  002888  0E60               	movlw	96
 11202  00288A  6E13               	movwf	___flmul@a^0,c
 11203  00288C  0E42               	movlw	66
 11204  00288E  6E14               	movwf	(___flmul@a+1)^0,c
 11205  002890  0EA2               	movlw	162
 11206  002892  6E15               	movwf	(___flmul@a+2)^0,c
 11207  002894  0E0D               	movlw	13
 11208  002896  6E16               	movwf	(___flmul@a+3)^0,c
 11209  002898  ECD2  F02A         	call	___flmul	;wreg free
 11210  00289C  C00F  F0AC         	movff	?___flmul,?_powf
 11211  0028A0  C010  F0AD         	movff	?___flmul+1,?_powf+1
 11212  0028A4  C011  F0AE         	movff	?___flmul+2,?_powf+2
 11213  0028A8  C012  F0AF         	movff	?___flmul+3,?_powf+3
 11214  0028AC  EF81  F019         	goto	l1220
 11215  0028B0                     l5866:
 11216                           
 11217                           ; BSR set to: 0
 11218  0028B0  0E16               	movlw	22
 11219  0028B2  0101               	movlb	1	; () banked
 11220  0028B4  19AE               	xorwf	(powf@j+2)& (0+255),w,b
 11221  0028B6  E109               	bnz	u7281
 11222  0028B8  0EC3               	movlw	195
 11223  0028BA  19AF               	xorwf	(powf@j+3)& (0+255),w,b
 11224  0028BC  11AC               	iorwf	powf@j& (0+255),w,b
 11225  0028BE  11AD               	iorwf	(powf@j+1)& (0+255),w,b
 11226  0028C0  A4D8               	btfss	status,2,c
 11227  0028C2  EF65  F014         	goto	u7281
 11228  0028C6  EF67  F014         	goto	u7280
 11229  0028CA                     u7281:
 11230  0028CA  EFC9  F014         	goto	l5874
 11231  0028CE                     u7280:
 11232  0028CE                     
 11233                           ; BSR set to: 1
 11234  0028CE  C19C  F05B         	movff	powf@p_h,___flsub@a
 11235  0028D2  C19D  F05C         	movff	powf@p_h+1,___flsub@a+1
 11236  0028D6  C19E  F05D         	movff	powf@p_h+2,___flsub@a+2
 11237  0028DA  C19F  F05E         	movff	powf@p_h+3,___flsub@a+3
 11238  0028DE  C1B4  F057         	movff	powf@z,___flsub@b
 11239  0028E2  C1B5  F058         	movff	powf@z+1,___flsub@b+1
 11240  0028E6  C1B6  F059         	movff	powf@z+2,___flsub@b+2
 11241  0028EA  C1B7  F05A         	movff	powf@z+3,___flsub@b+3
 11242  0028EE  EC14  F03D         	call	___flsub	;wreg free
 11243  0028F2  C057  F060         	movff	?___flsub,___flge@ff1
 11244  0028F6  C058  F061         	movff	?___flsub+1,___flge@ff1+1
 11245  0028FA  C059  F062         	movff	?___flsub+2,___flge@ff1+2
 11246  0028FE  C05A  F063         	movff	?___flsub+3,___flge@ff1+3
 11247  002902  C164  F064         	movff	powf@p_l,___flge@ff2
 11248  002906  C165  F065         	movff	powf@p_l+1,___flge@ff2+1
 11249  00290A  C166  F066         	movff	powf@p_l+2,___flge@ff2+2
 11250  00290E  C167  F067         	movff	powf@p_l+3,___flge@ff2+3
 11251  002912  EC65  F037         	call	___flge	;wreg free
 11252  002916  0100               	movlb	0	; () banked
 11253  002918  A0D8               	btfss	status,0,c
 11254  00291A  EF91  F014         	goto	u7291
 11255  00291E  EF93  F014         	goto	u7290
 11256  002922                     u7291:
 11257  002922  EFC9  F014         	goto	l5874
 11258  002926                     u7290:
 11259  002926                     
 11260                           ; BSR set to: 0
 11261  002926  0E60               	movlw	96
 11262  002928  6E13               	movwf	___flmul@a^0,c
 11263  00292A  0E42               	movlw	66
 11264  00292C  6E14               	movwf	(___flmul@a+1)^0,c
 11265  00292E  0EA2               	movlw	162
 11266  002930  6E15               	movwf	(___flmul@a+2)^0,c
 11267  002932  0E0D               	movlw	13
 11268  002934  6E16               	movwf	(___flmul@a+3)^0,c
 11269  002936  C188  F00F         	movff	powf@sn,___flmul@b
 11270  00293A  C189  F010         	movff	powf@sn+1,___flmul@b+1
 11271  00293E  C18A  F011         	movff	powf@sn+2,___flmul@b+2
 11272  002942  C18B  F012         	movff	powf@sn+3,___flmul@b+3
 11273  002946  ECD2  F02A         	call	___flmul	;wreg free
 11274  00294A  C00F  F1A4         	movff	?___flmul,_powf$1458
 11275  00294E  C010  F1A5         	movff	?___flmul+1,_powf$1458+1
 11276  002952  C011  F1A6         	movff	?___flmul+2,_powf$1458+2
 11277  002956  C012  F1A7         	movff	?___flmul+3,_powf$1458+3
 11278  00295A  C1A4  F00F         	movff	_powf$1458,___flmul@b
 11279  00295E  C1A5  F010         	movff	_powf$1458+1,___flmul@b+1
 11280  002962  C1A6  F011         	movff	_powf$1458+2,___flmul@b+2
 11281  002966  C1A7  F012         	movff	_powf$1458+3,___flmul@b+3
 11282  00296A  0E60               	movlw	96
 11283  00296C  6E13               	movwf	___flmul@a^0,c
 11284  00296E  0E42               	movlw	66
 11285  002970  6E14               	movwf	(___flmul@a+1)^0,c
 11286  002972  0EA2               	movlw	162
 11287  002974  6E15               	movwf	(___flmul@a+2)^0,c
 11288  002976  0E0D               	movlw	13
 11289  002978  6E16               	movwf	(___flmul@a+3)^0,c
 11290  00297A  ECD2  F02A         	call	___flmul	;wreg free
 11291  00297E  C00F  F0AC         	movff	?___flmul,?_powf
 11292  002982  C010  F0AD         	movff	?___flmul+1,?_powf+1
 11293  002986  C011  F0AE         	movff	?___flmul+2,?_powf+2
 11294  00298A  C012  F0AF         	movff	?___flmul+3,?_powf+3
 11295  00298E  EF81  F019         	goto	l1220
 11296  002992                     l5874:
 11297  002992  0EFF               	movlw	255
 11298  002994  0101               	movlb	1	; () banked
 11299  002996  15AC               	andwf	powf@j& (0+255),w,b
 11300  002998  6F2C               	movwf	powf@i& (0+255),b
 11301  00299A  0EFF               	movlw	255
 11302  00299C  15AD               	andwf	(powf@j+1)& (0+255),w,b
 11303  00299E  6F2D               	movwf	(powf@i+1)& (0+255),b
 11304  0029A0  0EFF               	movlw	255
 11305  0029A2  15AE               	andwf	(powf@j+2)& (0+255),w,b
 11306  0029A4  6F2E               	movwf	(powf@i+2)& (0+255),b
 11307  0029A6  0E7F               	movlw	127
 11308  0029A8  15AF               	andwf	(powf@j+3)& (0+255),w,b
 11309  0029AA  6F2F               	movwf	(powf@i+3)& (0+255),b
 11310  0029AC  0E17               	movlw	23
 11311  0029AE  0100               	movlb	0	; () banked
 11312  0029B0  6FB4               	movwf	??_powf& (0+255),b
 11313  0029B2  C12C  F0B5         	movff	powf@i,??_powf+1
 11314  0029B6  C12D  F0B6         	movff	powf@i+1,??_powf+2
 11315  0029BA  C12E  F0B7         	movff	powf@i+2,??_powf+3
 11316  0029BE  C12F  F0B8         	movff	powf@i+3,??_powf+4
 11317  0029C2                     u7305:
 11318  0029C2  67B4               	tstfsz	??_powf& (0+255),b
 11319  0029C4  EFE6  F014         	goto	u7306
 11320  0029C8  EFEE  F014         	goto	u7307
 11321  0029CC                     u7306:
 11322  0029CC  35B8               	rlcf	(??_powf+4)& (0+255),w,b
 11323  0029CE  33B8               	rrcf	(??_powf+4)& (0+255),f,b
 11324  0029D0  33B7               	rrcf	(??_powf+3)& (0+255),f,b
 11325  0029D2  33B6               	rrcf	(??_powf+2)& (0+255),f,b
 11326  0029D4  33B5               	rrcf	(??_powf+1)& (0+255),f,b
 11327  0029D6  2FB4               	decfsz	??_powf& (0+255),f,b
 11328  0029D8  EFE1  F014         	goto	u7305
 11329  0029DC                     u7307:
 11330  0029DC  0E81               	movlw	129
 11331  0029DE  0100               	movlb	0	; () banked
 11332  0029E0  25B5               	addwf	(??_powf+1)& (0+255),w,b
 11333  0029E2  0101               	movlb	1	; () banked
 11334  0029E4  6FA0               	movwf	powf@k& (0+255),b
 11335  0029E6  0EFF               	movlw	255
 11336  0029E8  0100               	movlb	0	; () banked
 11337  0029EA  21B6               	addwfc	(??_powf+2)& (0+255),w,b
 11338  0029EC  0101               	movlb	1	; () banked
 11339  0029EE  6FA1               	movwf	(powf@k+1)& (0+255),b
 11340  0029F0  0EFF               	movlw	255
 11341  0029F2  0100               	movlb	0	; () banked
 11342  0029F4  21B7               	addwfc	(??_powf+3)& (0+255),w,b
 11343  0029F6  0101               	movlb	1	; () banked
 11344  0029F8  6FA2               	movwf	(powf@k+2)& (0+255),b
 11345  0029FA  0EFF               	movlw	255
 11346  0029FC  0100               	movlb	0	; () banked
 11347  0029FE  21B8               	addwfc	(??_powf+4)& (0+255),w,b
 11348  002A00  0101               	movlb	1	; () banked
 11349  002A02  6FA3               	movwf	(powf@k+3)& (0+255),b
 11350  002A04                     
 11351                           ; BSR set to: 1
 11352  002A04  0E00               	movlw	0
 11353  002A06  6F7C               	movwf	powf@n& (0+255),b
 11354  002A08  0E00               	movlw	0
 11355  002A0A  6F7D               	movwf	(powf@n+1)& (0+255),b
 11356  002A0C  0E00               	movlw	0
 11357  002A0E  6F7E               	movwf	(powf@n+2)& (0+255),b
 11358  002A10  0E00               	movlw	0
 11359  002A12  6F7F               	movwf	(powf@n+3)& (0+255),b
 11360  002A14                     
 11361                           ; BSR set to: 1
 11362  002A14  BF2F               	btfsc	(powf@i+3)& (0+255),7,b
 11363  002A16  EF19  F015         	goto	u7311
 11364  002A1A  052C               	decf	powf@i& (0+255),w,b
 11365  002A1C  0E00               	movlw	0
 11366  002A1E  592D               	subwfb	(powf@i+1)& (0+255),w,b
 11367  002A20  0E00               	movlw	0
 11368  002A22  592E               	subwfb	(powf@i+2)& (0+255),w,b
 11369  002A24  0E3F               	movlw	63
 11370  002A26  592F               	subwfb	(powf@i+3)& (0+255),w,b
 11371  002A28  A0D8               	btfss	status,0,c
 11372  002A2A  EF19  F015         	goto	u7311
 11373  002A2E  EF1B  F015         	goto	u7310
 11374  002A32                     u7311:
 11375  002A32  EF1F  F016         	goto	l5888
 11376  002A36                     u7310:
 11377  002A36                     
 11378                           ; BSR set to: 1
 11379  002A36  C1A0  F0B4         	movff	powf@k,??_powf
 11380  002A3A  0E01               	movlw	1
 11381  002A3C  0100               	movlb	0	; () banked
 11382  002A3E  27B4               	addwf	??_powf& (0+255),f,b
 11383  002A40  0E00               	movlw	0
 11384  002A42  6FB5               	movwf	(??_powf+1)& (0+255),b
 11385  002A44  0E00               	movlw	0
 11386  002A46  6FB6               	movwf	(??_powf+2)& (0+255),b
 11387  002A48  0E80               	movlw	128
 11388  002A4A  6FB7               	movwf	(??_powf+3)& (0+255),b
 11389  002A4C  0E00               	movlw	0
 11390  002A4E  6FB8               	movwf	(??_powf+4)& (0+255),b
 11391  002A50                     u7325:
 11392  002A50  67B4               	tstfsz	??_powf& (0+255),b
 11393  002A52  EF2D  F015         	goto	u7326
 11394  002A56  EF35  F015         	goto	u7327
 11395  002A5A                     u7326:
 11396  002A5A  35B8               	rlcf	(??_powf+4)& (0+255),w,b
 11397  002A5C  33B8               	rrcf	(??_powf+4)& (0+255),f,b
 11398  002A5E  33B7               	rrcf	(??_powf+3)& (0+255),f,b
 11399  002A60  33B6               	rrcf	(??_powf+2)& (0+255),f,b
 11400  002A62  33B5               	rrcf	(??_powf+1)& (0+255),f,b
 11401  002A64  2FB4               	decfsz	??_powf& (0+255),f,b
 11402  002A66  EF28  F015         	goto	u7325
 11403  002A6A                     u7327:
 11404  002A6A  0101               	movlb	1	; () banked
 11405  002A6C  51AC               	movf	powf@j& (0+255),w,b
 11406  002A6E  0100               	movlb	0	; () banked
 11407  002A70  25B5               	addwf	(??_powf+1)& (0+255),w,b
 11408  002A72  0101               	movlb	1	; () banked
 11409  002A74  6F7C               	movwf	powf@n& (0+255),b
 11410  002A76  51AD               	movf	(powf@j+1)& (0+255),w,b
 11411  002A78  0100               	movlb	0	; () banked
 11412  002A7A  21B6               	addwfc	(??_powf+2)& (0+255),w,b
 11413  002A7C  0101               	movlb	1	; () banked
 11414  002A7E  6F7D               	movwf	(powf@n+1)& (0+255),b
 11415  002A80  51AE               	movf	(powf@j+2)& (0+255),w,b
 11416  002A82  0100               	movlb	0	; () banked
 11417  002A84  21B7               	addwfc	(??_powf+3)& (0+255),w,b
 11418  002A86  0101               	movlb	1	; () banked
 11419  002A88  6F7E               	movwf	(powf@n+2)& (0+255),b
 11420  002A8A  51AF               	movf	(powf@j+3)& (0+255),w,b
 11421  002A8C  0100               	movlb	0	; () banked
 11422  002A8E  21B8               	addwfc	(??_powf+4)& (0+255),w,b
 11423  002A90  0101               	movlb	1	; () banked
 11424  002A92  6F7F               	movwf	(powf@n+3)& (0+255),b
 11425  002A94  0E81               	movlw	129
 11426  002A96  0100               	movlb	0	; () banked
 11427  002A98  6FB4               	movwf	??_powf& (0+255),b
 11428  002A9A  0EFF               	movlw	255
 11429  002A9C  6FB5               	movwf	(??_powf+1)& (0+255),b
 11430  002A9E  0EFF               	movlw	255
 11431  002AA0  6FB6               	movwf	(??_powf+2)& (0+255),b
 11432  002AA2  0EFF               	movlw	255
 11433  002AA4  6FB7               	movwf	(??_powf+3)& (0+255),b
 11434  002AA6  0E17               	movlw	23
 11435  002AA8  6FB8               	movwf	(??_powf+4)& (0+255),b
 11436  002AAA  C17C  F0B9         	movff	powf@n,??_powf+5
 11437  002AAE  C17D  F0BA         	movff	powf@n+1,??_powf+6
 11438  002AB2  C17E  F0BB         	movff	powf@n+2,??_powf+7
 11439  002AB6  C17F  F0BC         	movff	powf@n+3,??_powf+8
 11440  002ABA                     u7335:
 11441  002ABA  67B8               	tstfsz	(??_powf+4)& (0+255),b
 11442  002ABC  EF62  F015         	goto	u7336
 11443  002AC0  EF6A  F015         	goto	u7337
 11444  002AC4                     u7336:
 11445  002AC4  35BC               	rlcf	(??_powf+8)& (0+255),w,b
 11446  002AC6  33BC               	rrcf	(??_powf+8)& (0+255),f,b
 11447  002AC8  33BB               	rrcf	(??_powf+7)& (0+255),f,b
 11448  002ACA  33BA               	rrcf	(??_powf+6)& (0+255),f,b
 11449  002ACC  33B9               	rrcf	(??_powf+5)& (0+255),f,b
 11450  002ACE  2FB8               	decfsz	(??_powf+4)& (0+255),f,b
 11451  002AD0  EF5D  F015         	goto	u7335
 11452  002AD4                     u7337:
 11453  002AD4  0100               	movlb	0	; () banked
 11454  002AD6  51B9               	movf	(??_powf+5)& (0+255),w,b
 11455  002AD8  25B4               	addwf	??_powf& (0+255),w,b
 11456  002ADA  0101               	movlb	1	; () banked
 11457  002ADC  6FA0               	movwf	powf@k& (0+255),b
 11458  002ADE  0E00               	movlw	0
 11459  002AE0  0100               	movlb	0	; () banked
 11460  002AE2  21B5               	addwfc	(??_powf+1)& (0+255),w,b
 11461  002AE4  0101               	movlb	1	; () banked
 11462  002AE6  6FA1               	movwf	(powf@k+1)& (0+255),b
 11463  002AE8  0E00               	movlw	0
 11464  002AEA  0100               	movlb	0	; () banked
 11465  002AEC  21B6               	addwfc	(??_powf+2)& (0+255),w,b
 11466  002AEE  0101               	movlb	1	; () banked
 11467  002AF0  6FA2               	movwf	(powf@k+2)& (0+255),b
 11468  002AF2  0E00               	movlw	0
 11469  002AF4  0100               	movlb	0	; () banked
 11470  002AF6  21B7               	addwfc	(??_powf+3)& (0+255),w,b
 11471  002AF8  0101               	movlb	1	; () banked
 11472  002AFA  6FA3               	movwf	(powf@k+3)& (0+255),b
 11473  002AFC                     
 11474                           ; BSR set to: 1
 11475  002AFC  C1A0  F0B4         	movff	powf@k,??_powf
 11476  002B00  0EFF               	movlw	255
 11477  002B02  0100               	movlb	0	; () banked
 11478  002B04  6FB5               	movwf	(??_powf+1)& (0+255),b
 11479  002B06  0EFF               	movlw	255
 11480  002B08  6FB6               	movwf	(??_powf+2)& (0+255),b
 11481  002B0A  0E7F               	movlw	127
 11482  002B0C  6FB7               	movwf	(??_powf+3)& (0+255),b
 11483  002B0E  0E00               	movlw	0
 11484  002B10  6FB8               	movwf	(??_powf+4)& (0+255),b
 11485  002B12                     u7345:
 11486  002B12  67B4               	tstfsz	??_powf& (0+255),b
 11487  002B14  EF8E  F015         	goto	u7346
 11488  002B18  EF96  F015         	goto	u7347
 11489  002B1C                     u7346:
 11490  002B1C  35B8               	rlcf	(??_powf+4)& (0+255),w,b
 11491  002B1E  33B8               	rrcf	(??_powf+4)& (0+255),f,b
 11492  002B20  33B7               	rrcf	(??_powf+3)& (0+255),f,b
 11493  002B22  33B6               	rrcf	(??_powf+2)& (0+255),f,b
 11494  002B24  33B5               	rrcf	(??_powf+1)& (0+255),f,b
 11495  002B26  2FB4               	decfsz	??_powf& (0+255),f,b
 11496  002B28  EF89  F015         	goto	u7345
 11497  002B2C                     u7347:
 11498  002B2C  0100               	movlb	0	; () banked
 11499  002B2E  1DB5               	comf	(??_powf+1)& (0+255),w,b
 11500  002B30  6FB9               	movwf	(??_powf+5)& (0+255),b
 11501  002B32  1DB6               	comf	(??_powf+2)& (0+255),w,b
 11502  002B34  6FBA               	movwf	(??_powf+6)& (0+255),b
 11503  002B36  1DB7               	comf	(??_powf+3)& (0+255),w,b
 11504  002B38  6FBB               	movwf	(??_powf+7)& (0+255),b
 11505  002B3A  1DB8               	comf	(??_powf+4)& (0+255),w,b
 11506  002B3C  6FBC               	movwf	(??_powf+8)& (0+255),b
 11507  002B3E  0101               	movlb	1	; () banked
 11508  002B40  517C               	movf	powf@n& (0+255),w,b
 11509  002B42  0100               	movlb	0	; () banked
 11510  002B44  15B9               	andwf	(??_powf+5)& (0+255),w,b
 11511  002B46  0101               	movlb	1	; () banked
 11512  002B48  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 11513  002B4A  517D               	movf	(powf@n+1)& (0+255),w,b
 11514  002B4C  0100               	movlb	0	; () banked
 11515  002B4E  15BA               	andwf	(??_powf+6)& (0+255),w,b
 11516  002B50  0101               	movlb	1	; () banked
 11517  002B52  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 11518  002B54  517E               	movf	(powf@n+2)& (0+255),w,b
 11519  002B56  0100               	movlb	0	; () banked
 11520  002B58  15BB               	andwf	(??_powf+7)& (0+255),w,b
 11521  002B5A  0101               	movlb	1	; () banked
 11522  002B5C  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 11523  002B5E  517F               	movf	(powf@n+3)& (0+255),w,b
 11524  002B60  0100               	movlb	0	; () banked
 11525  002B62  15BC               	andwf	(??_powf+8)& (0+255),w,b
 11526  002B64  0101               	movlb	1	; () banked
 11527  002B66  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 11528  002B68                     
 11529                           ; BSR set to: 1
 11530  002B68  C1B8  F1B0         	movff	powf@__xc8_float_word,powf@t
 11531  002B6C  C1B9  F1B1         	movff	powf@__xc8_float_word+1,powf@t+1
 11532  002B70  C1BA  F1B2         	movff	powf@__xc8_float_word+2,powf@t+2
 11533  002B74  C1BB  F1B3         	movff	powf@__xc8_float_word+3,powf@t+3
 11534  002B78                     
 11535                           ; BSR set to: 1
 11536  002B78  51A0               	movf	powf@k& (0+255),w,b
 11537  002B7A  0817               	sublw	23
 11538  002B7C  0100               	movlb	0	; () banked
 11539  002B7E  6FB4               	movwf	??_powf& (0+255),b
 11540  002B80  0EFF               	movlw	255
 11541  002B82  0101               	movlb	1	; () banked
 11542  002B84  157C               	andwf	powf@n& (0+255),w,b
 11543  002B86  0100               	movlb	0	; () banked
 11544  002B88  6FB5               	movwf	(??_powf+1)& (0+255),b
 11545  002B8A  0EFF               	movlw	255
 11546  002B8C  0101               	movlb	1	; () banked
 11547  002B8E  157D               	andwf	(powf@n+1)& (0+255),w,b
 11548  002B90  0100               	movlb	0	; () banked
 11549  002B92  6FB6               	movwf	(??_powf+2)& (0+255),b
 11550  002B94  0E7F               	movlw	127
 11551  002B96  0101               	movlb	1	; () banked
 11552  002B98  157E               	andwf	(powf@n+2)& (0+255),w,b
 11553  002B9A  0100               	movlb	0	; () banked
 11554  002B9C  6FB7               	movwf	(??_powf+3)& (0+255),b
 11555  002B9E  0E00               	movlw	0
 11556  002BA0  0101               	movlb	1	; () banked
 11557  002BA2  157F               	andwf	(powf@n+3)& (0+255),w,b
 11558  002BA4  0100               	movlb	0	; () banked
 11559  002BA6  6FB8               	movwf	(??_powf+4)& (0+255),b
 11560  002BA8  0E00               	movlw	0
 11561  002BAA  11B5               	iorwf	(??_powf+1)& (0+255),w,b
 11562  002BAC  6FB9               	movwf	(??_powf+5)& (0+255),b
 11563  002BAE  0E00               	movlw	0
 11564  002BB0  11B6               	iorwf	(??_powf+2)& (0+255),w,b
 11565  002BB2  6FBA               	movwf	(??_powf+6)& (0+255),b
 11566  002BB4  0E80               	movlw	128
 11567  002BB6  11B7               	iorwf	(??_powf+3)& (0+255),w,b
 11568  002BB8  6FBB               	movwf	(??_powf+7)& (0+255),b
 11569  002BBA  0E00               	movlw	0
 11570  002BBC  11B8               	iorwf	(??_powf+4)& (0+255),w,b
 11571  002BBE  6FBC               	movwf	(??_powf+8)& (0+255),b
 11572  002BC0                     u7355:
 11573  002BC0  67B4               	tstfsz	??_powf& (0+255),b
 11574  002BC2  EFE5  F015         	goto	u7356
 11575  002BC6  EFED  F015         	goto	u7357
 11576  002BCA                     u7356:
 11577  002BCA  35BC               	rlcf	(??_powf+8)& (0+255),w,b
 11578  002BCC  33BC               	rrcf	(??_powf+8)& (0+255),f,b
 11579  002BCE  33BB               	rrcf	(??_powf+7)& (0+255),f,b
 11580  002BD0  33BA               	rrcf	(??_powf+6)& (0+255),f,b
 11581  002BD2  33B9               	rrcf	(??_powf+5)& (0+255),f,b
 11582  002BD4  2FB4               	decfsz	??_powf& (0+255),f,b
 11583  002BD6  EFE0  F015         	goto	u7355
 11584  002BDA                     u7357:
 11585  002BDA  C0B9  F17C         	movff	??_powf+5,powf@n
 11586  002BDE  C0BA  F17D         	movff	??_powf+6,powf@n+1
 11587  002BE2  C0BB  F17E         	movff	??_powf+7,powf@n+2
 11588  002BE6  C0BC  F17F         	movff	??_powf+8,powf@n+3
 11589  002BEA  0101               	movlb	1	; () banked
 11590  002BEC  BFAF               	btfsc	(powf@j+3)& (0+255),7,b
 11591  002BEE  EFFD  F015         	goto	u7360
 11592  002BF2  EFFB  F015         	goto	u7361
 11593  002BF6                     u7361:
 11594  002BF6  EF05  F016         	goto	l5886
 11595  002BFA                     u7360:
 11596  002BFA                     
 11597                           ; BSR set to: 1
 11598  002BFA  1F7F               	comf	(powf@n+3)& (0+255),f,b
 11599  002BFC  1F7E               	comf	(powf@n+2)& (0+255),f,b
 11600  002BFE  1F7D               	comf	(powf@n+1)& (0+255),f,b
 11601  002C00  6D7C               	negf	powf@n& (0+255),b
 11602  002C02  0E00               	movlw	0
 11603  002C04  237D               	addwfc	(powf@n+1)& (0+255),f,b
 11604  002C06  237E               	addwfc	(powf@n+2)& (0+255),f,b
 11605  002C08  237F               	addwfc	(powf@n+3)& (0+255),f,b
 11606  002C0A                     l5886:
 11607                           
 11608                           ; BSR set to: 1
 11609  002C0A  C19C  F057         	movff	powf@p_h,___flsub@b
 11610  002C0E  C19D  F058         	movff	powf@p_h+1,___flsub@b+1
 11611  002C12  C19E  F059         	movff	powf@p_h+2,___flsub@b+2
 11612  002C16  C19F  F05A         	movff	powf@p_h+3,___flsub@b+3
 11613  002C1A  C1B0  F05B         	movff	powf@t,___flsub@a
 11614  002C1E  C1B1  F05C         	movff	powf@t+1,___flsub@a+1
 11615  002C22  C1B2  F05D         	movff	powf@t+2,___flsub@a+2
 11616  002C26  C1B3  F05E         	movff	powf@t+3,___flsub@a+3
 11617  002C2A  EC14  F03D         	call	___flsub	;wreg free
 11618  002C2E  C057  F19C         	movff	?___flsub,powf@p_h
 11619  002C32  C058  F19D         	movff	?___flsub+1,powf@p_h+1
 11620  002C36  C059  F19E         	movff	?___flsub+2,powf@p_h+2
 11621  002C3A  C05A  F19F         	movff	?___flsub+3,powf@p_h+3
 11622  002C3E                     l5888:
 11623  002C3E  C164  F047         	movff	powf@p_l,___fladd@b
 11624  002C42  C165  F048         	movff	powf@p_l+1,___fladd@b+1
 11625  002C46  C166  F049         	movff	powf@p_l+2,___fladd@b+2
 11626  002C4A  C167  F04A         	movff	powf@p_l+3,___fladd@b+3
 11627  002C4E  C19C  F04B         	movff	powf@p_h,___fladd@a
 11628  002C52  C19D  F04C         	movff	powf@p_h+1,___fladd@a+1
 11629  002C56  C19E  F04D         	movff	powf@p_h+2,___fladd@a+2
 11630  002C5A  C19F  F04E         	movff	powf@p_h+3,___fladd@a+3
 11631  002C5E  EC13  F026         	call	___fladd	;wreg free
 11632  002C62  C047  F1B0         	movff	?___fladd,powf@t
 11633  002C66  C048  F1B1         	movff	?___fladd+1,powf@t+1
 11634  002C6A  C049  F1B2         	movff	?___fladd+2,powf@t+2
 11635  002C6E  C04A  F1B3         	movff	?___fladd+3,powf@t+3
 11636  002C72  C1B0  F1B8         	movff	powf@t,powf@__xc8_float_word
 11637  002C76  C1B1  F1B9         	movff	powf@t+1,powf@__xc8_float_word+1
 11638  002C7A  C1B2  F1BA         	movff	powf@t+2,powf@__xc8_float_word+2
 11639  002C7E  C1B3  F1BB         	movff	powf@t+3,powf@__xc8_float_word+3
 11640  002C82  C1B8  F190         	movff	powf@__xc8_float_word,powf@is
 11641  002C86  C1B9  F191         	movff	powf@__xc8_float_word+1,powf@is+1
 11642  002C8A  C1BA  F192         	movff	powf@__xc8_float_word+2,powf@is+2
 11643  002C8E  C1BB  F193         	movff	powf@__xc8_float_word+3,powf@is+3
 11644  002C92  0E00               	movlw	0
 11645  002C94  0101               	movlb	1	; () banked
 11646  002C96  1590               	andwf	powf@is& (0+255),w,b
 11647  002C98  6FB8               	movwf	powf@__xc8_float_word& (0+255),b
 11648  002C9A  0E80               	movlw	128
 11649  002C9C  1591               	andwf	(powf@is+1)& (0+255),w,b
 11650  002C9E  6FB9               	movwf	(powf@__xc8_float_word+1)& (0+255),b
 11651  002CA0  0EFF               	movlw	255
 11652  002CA2  1592               	andwf	(powf@is+2)& (0+255),w,b
 11653  002CA4  6FBA               	movwf	(powf@__xc8_float_word+2)& (0+255),b
 11654  002CA6  0EFF               	movlw	255
 11655  002CA8  1593               	andwf	(powf@is+3)& (0+255),w,b
 11656  002CAA  6FBB               	movwf	(powf@__xc8_float_word+3)& (0+255),b
 11657  002CAC                     
 11658                           ; BSR set to: 1
 11659  002CAC  C1B8  F1B0         	movff	powf@__xc8_float_word,powf@t
 11660  002CB0  C1B9  F1B1         	movff	powf@__xc8_float_word+1,powf@t+1
 11661  002CB4  C1BA  F1B2         	movff	powf@__xc8_float_word+2,powf@t+2
 11662  002CB8  C1BB  F1B3         	movff	powf@__xc8_float_word+3,powf@t+3
 11663  002CBC                     
 11664                           ; BSR set to: 1
 11665  002CBC  C1B0  F00F         	movff	powf@t,___flmul@b
 11666  002CC0  C1B1  F010         	movff	powf@t+1,___flmul@b+1
 11667  002CC4  C1B2  F011         	movff	powf@t+2,___flmul@b+2
 11668  002CC8  C1B3  F012         	movff	powf@t+3,___flmul@b+3
 11669  002CCC  0E00               	movlw	0
 11670  002CCE  6E13               	movwf	___flmul@a^0,c
 11671  002CD0  0E72               	movlw	114
 11672  002CD2  6E14               	movwf	(___flmul@a+1)^0,c
 11673  002CD4  0E31               	movlw	49
 11674  002CD6  6E15               	movwf	(___flmul@a+2)^0,c
 11675  002CD8  0E3F               	movlw	63
 11676  002CDA  6E16               	movwf	(___flmul@a+3)^0,c
 11677  002CDC  ECD2  F02A         	call	___flmul	;wreg free
 11678  002CE0  C00F  F174         	movff	?___flmul,powf@u
 11679  002CE4  C010  F175         	movff	?___flmul+1,powf@u+1
 11680  002CE8  C011  F176         	movff	?___flmul+2,powf@u+2
 11681  002CEC  C012  F177         	movff	?___flmul+3,powf@u+3
 11682  002CF0  C19C  F05B         	movff	powf@p_h,___flsub@a
 11683  002CF4  C19D  F05C         	movff	powf@p_h+1,___flsub@a+1
 11684  002CF8  C19E  F05D         	movff	powf@p_h+2,___flsub@a+2
 11685  002CFC  C19F  F05E         	movff	powf@p_h+3,___flsub@a+3
 11686  002D00  C1B0  F057         	movff	powf@t,___flsub@b
 11687  002D04  C1B1  F058         	movff	powf@t+1,___flsub@b+1
 11688  002D08  C1B2  F059         	movff	powf@t+2,___flsub@b+2
 11689  002D0C  C1B3  F05A         	movff	powf@t+3,___flsub@b+3
 11690  002D10  EC14  F03D         	call	___flsub	;wreg free
 11691  002D14  C057  F194         	movff	?___flsub,_powf$1461
 11692  002D18  C058  F195         	movff	?___flsub+1,_powf$1461+1
 11693  002D1C  C059  F196         	movff	?___flsub+2,_powf$1461+2
 11694  002D20  C05A  F197         	movff	?___flsub+3,_powf$1461+3
 11695  002D24  0E18               	movlw	24
 11696  002D26  6E13               	movwf	___flmul@a^0,c
 11697  002D28  0E72               	movlw	114
 11698  002D2A  6E14               	movwf	(___flmul@a+1)^0,c
 11699  002D2C  0E31               	movlw	49
 11700  002D2E  6E15               	movwf	(___flmul@a+2)^0,c
 11701  002D30  0E3F               	movlw	63
 11702  002D32  6E16               	movwf	(___flmul@a+3)^0,c
 11703  002D34  C194  F05B         	movff	_powf$1461,___flsub@a
 11704  002D38  C195  F05C         	movff	_powf$1461+1,___flsub@a+1
 11705  002D3C  C196  F05D         	movff	_powf$1461+2,___flsub@a+2
 11706  002D40  C197  F05E         	movff	_powf$1461+3,___flsub@a+3
 11707  002D44  C164  F057         	movff	powf@p_l,___flsub@b
 11708  002D48  C165  F058         	movff	powf@p_l+1,___flsub@b+1
 11709  002D4C  C166  F059         	movff	powf@p_l+2,___flsub@b+2
 11710  002D50  C167  F05A         	movff	powf@p_l+3,___flsub@b+3
 11711  002D54  EC14  F03D         	call	___flsub	;wreg free
 11712  002D58  C057  F00F         	movff	?___flsub,___flmul@b
 11713  002D5C  C058  F010         	movff	?___flsub+1,___flmul@b+1
 11714  002D60  C059  F011         	movff	?___flsub+2,___flmul@b+2
 11715  002D64  C05A  F012         	movff	?___flsub+3,___flmul@b+3
 11716  002D68  ECD2  F02A         	call	___flmul	;wreg free
 11717  002D6C  C00F  F114         	movff	?___flmul,_powf$1471
 11718  002D70  C010  F115         	movff	?___flmul+1,_powf$1471+1
 11719  002D74  C011  F116         	movff	?___flmul+2,_powf$1471+2
 11720  002D78  C012  F117         	movff	?___flmul+3,_powf$1471+3
 11721  002D7C  C114  F047         	movff	_powf$1471,___fladd@b
 11722  002D80  C115  F048         	movff	_powf$1471+1,___fladd@b+1
 11723  002D84  C116  F049         	movff	_powf$1471+2,___fladd@b+2
 11724  002D88  C117  F04A         	movff	_powf$1471+3,___fladd@b+3
 11725  002D8C  0E8C               	movlw	140
 11726  002D8E  6E13               	movwf	___flmul@a^0,c
 11727  002D90  0EBE               	movlw	190
 11728  002D92  6E14               	movwf	(___flmul@a+1)^0,c
 11729  002D94  0EBF               	movlw	191
 11730  002D96  6E15               	movwf	(___flmul@a+2)^0,c
 11731  002D98  0E35               	movlw	53
 11732  002D9A  6E16               	movwf	(___flmul@a+3)^0,c
 11733  002D9C  C1B0  F00F         	movff	powf@t,___flmul@b
 11734  002DA0  C1B1  F010         	movff	powf@t+1,___flmul@b+1
 11735  002DA4  C1B2  F011         	movff	powf@t+2,___flmul@b+2
 11736  002DA8  C1B3  F012         	movff	powf@t+3,___flmul@b+3
 11737  002DAC  ECD2  F02A         	call	___flmul	;wreg free
 11738  002DB0  C00F  F04B         	movff	?___flmul,___fladd@a
 11739  002DB4  C010  F04C         	movff	?___flmul+1,___fladd@a+1
 11740  002DB8  C011  F04D         	movff	?___flmul+2,___fladd@a+2
 11741  002DBC  C012  F04E         	movff	?___flmul+3,___fladd@a+3
 11742  002DC0  EC13  F026         	call	___fladd	;wreg free
 11743  002DC4  C047  F178         	movff	?___fladd,powf@v
 11744  002DC8  C048  F179         	movff	?___fladd+1,powf@v+1
 11745  002DCC  C049  F17A         	movff	?___fladd+2,powf@v+2
 11746  002DD0  C04A  F17B         	movff	?___fladd+3,powf@v+3
 11747  002DD4  C174  F047         	movff	powf@u,___fladd@b
 11748  002DD8  C175  F048         	movff	powf@u+1,___fladd@b+1
 11749  002DDC  C176  F049         	movff	powf@u+2,___fladd@b+2
 11750  002DE0  C177  F04A         	movff	powf@u+3,___fladd@b+3
 11751  002DE4  C178  F04B         	movff	powf@v,___fladd@a
 11752  002DE8  C179  F04C         	movff	powf@v+1,___fladd@a+1
 11753  002DEC  C17A  F04D         	movff	powf@v+2,___fladd@a+2
 11754  002DF0  C17B  F04E         	movff	powf@v+3,___fladd@a+3
 11755  002DF4  EC13  F026         	call	___fladd	;wreg free
 11756  002DF8  C047  F1B4         	movff	?___fladd,powf@z
 11757  002DFC  C048  F1B5         	movff	?___fladd+1,powf@z+1
 11758  002E00  C049  F1B6         	movff	?___fladd+2,powf@z+2
 11759  002E04  C04A  F1B7         	movff	?___fladd+3,powf@z+3
 11760  002E08  C174  F05B         	movff	powf@u,___flsub@a
 11761  002E0C  C175  F05C         	movff	powf@u+1,___flsub@a+1
 11762  002E10  C176  F05D         	movff	powf@u+2,___flsub@a+2
 11763  002E14  C177  F05E         	movff	powf@u+3,___flsub@a+3
 11764  002E18  C1B4  F057         	movff	powf@z,___flsub@b
 11765  002E1C  C1B5  F058         	movff	powf@z+1,___flsub@b+1
 11766  002E20  C1B6  F059         	movff	powf@z+2,___flsub@b+2
 11767  002E24  C1B7  F05A         	movff	powf@z+3,___flsub@b+3
 11768  002E28  EC14  F03D         	call	___flsub	;wreg free
 11769  002E2C  C057  F194         	movff	?___flsub,_powf$1461
 11770  002E30  C058  F195         	movff	?___flsub+1,_powf$1461+1
 11771  002E34  C059  F196         	movff	?___flsub+2,_powf$1461+2
 11772  002E38  C05A  F197         	movff	?___flsub+3,_powf$1461+3
 11773  002E3C  C178  F057         	movff	powf@v,___flsub@b
 11774  002E40  C179  F058         	movff	powf@v+1,___flsub@b+1
 11775  002E44  C17A  F059         	movff	powf@v+2,___flsub@b+2
 11776  002E48  C17B  F05A         	movff	powf@v+3,___flsub@b+3
 11777  002E4C  C194  F05B         	movff	_powf$1461,___flsub@a
 11778  002E50  C195  F05C         	movff	_powf$1461+1,___flsub@a+1
 11779  002E54  C196  F05D         	movff	_powf$1461+2,___flsub@a+2
 11780  002E58  C197  F05E         	movff	_powf$1461+3,___flsub@a+3
 11781  002E5C  EC14  F03D         	call	___flsub	;wreg free
 11782  002E60  C057  F144         	movff	?___flsub,powf@w
 11783  002E64  C058  F145         	movff	?___flsub+1,powf@w+1
 11784  002E68  C059  F146         	movff	?___flsub+2,powf@w+2
 11785  002E6C  C05A  F147         	movff	?___flsub+3,powf@w+3
 11786  002E70  C1B4  F00F         	movff	powf@z,___flmul@b
 11787  002E74  C1B5  F010         	movff	powf@z+1,___flmul@b+1
 11788  002E78  C1B6  F011         	movff	powf@z+2,___flmul@b+2
 11789  002E7C  C1B7  F012         	movff	powf@z+3,___flmul@b+3
 11790  002E80  C1B4  F013         	movff	powf@z,___flmul@a
 11791  002E84  C1B5  F014         	movff	powf@z+1,___flmul@a+1
 11792  002E88  C1B6  F015         	movff	powf@z+2,___flmul@a+2
 11793  002E8C  C1B7  F016         	movff	powf@z+3,___flmul@a+3
 11794  002E90  ECD2  F02A         	call	___flmul	;wreg free
 11795  002E94  C00F  F1B0         	movff	?___flmul,powf@t
 11796  002E98  C010  F1B1         	movff	?___flmul+1,powf@t+1
 11797  002E9C  C011  F1B2         	movff	?___flmul+2,powf@t+2
 11798  002EA0  C012  F1B3         	movff	?___flmul+3,powf@t+3
 11799  002EA4  0E0E               	movlw	14
 11800  002EA6  6E4B               	movwf	___fladd@a^0,c
 11801  002EA8  0EEA               	movlw	234
 11802  002EAA  6E4C               	movwf	(___fladd@a+1)^0,c
 11803  002EAC  0EDD               	movlw	221
 11804  002EAE  6E4D               	movwf	(___fladd@a+2)^0,c
 11805  002EB0  0EB5               	movlw	181
 11806  002EB2  6E4E               	movwf	(___fladd@a+3)^0,c
 11807  002EB4  0E4C               	movlw	76
 11808  002EB6  6E13               	movwf	___flmul@a^0,c
 11809  002EB8  0EBB               	movlw	187
 11810  002EBA  6E14               	movwf	(___flmul@a+1)^0,c
 11811  002EBC  0E31               	movlw	49
 11812  002EBE  6E15               	movwf	(___flmul@a+2)^0,c
 11813  002EC0  0E33               	movlw	51
 11814  002EC2  6E16               	movwf	(___flmul@a+3)^0,c
 11815  002EC4  C1B0  F00F         	movff	powf@t,___flmul@b
 11816  002EC8  C1B1  F010         	movff	powf@t+1,___flmul@b+1
 11817  002ECC  C1B2  F011         	movff	powf@t+2,___flmul@b+2
 11818  002ED0  C1B3  F012         	movff	powf@t+3,___flmul@b+3
 11819  002ED4  ECD2  F02A         	call	___flmul	;wreg free
 11820  002ED8  C00F  F047         	movff	?___flmul,___fladd@b
 11821  002EDC  C010  F048         	movff	?___flmul+1,___fladd@b+1
 11822  002EE0  C011  F049         	movff	?___flmul+2,___fladd@b+2
 11823  002EE4  C012  F04A         	movff	?___flmul+3,___fladd@b+3
 11824  002EE8  EC13  F026         	call	___fladd	;wreg free
 11825  002EEC  C047  F1A4         	movff	?___fladd,_powf$1458
 11826  002EF0  C048  F1A5         	movff	?___fladd+1,_powf$1458+1
 11827  002EF4  C049  F1A6         	movff	?___fladd+2,_powf$1458+2
 11828  002EF8  C04A  F1A7         	movff	?___fladd+3,_powf$1458+3
 11829  002EFC  0E55               	movlw	85
 11830  002EFE  6E4B               	movwf	___fladd@a^0,c
 11831  002F00  0EB3               	movlw	179
 11832  002F02  6E4C               	movwf	(___fladd@a+1)^0,c
 11833  002F04  0E8A               	movlw	138
 11834  002F06  6E4D               	movwf	(___fladd@a+2)^0,c
 11835  002F08  0E38               	movlw	56
 11836  002F0A  6E4E               	movwf	(___fladd@a+3)^0,c
 11837  002F0C  C1B0  F013         	movff	powf@t,___flmul@a
 11838  002F10  C1B1  F014         	movff	powf@t+1,___flmul@a+1
 11839  002F14  C1B2  F015         	movff	powf@t+2,___flmul@a+2
 11840  002F18  C1B3  F016         	movff	powf@t+3,___flmul@a+3
 11841  002F1C  C1A4  F00F         	movff	_powf$1458,___flmul@b
 11842  002F20  C1A5  F010         	movff	_powf$1458+1,___flmul@b+1
 11843  002F24  C1A6  F011         	movff	_powf$1458+2,___flmul@b+2
 11844  002F28  C1A7  F012         	movff	_powf$1458+3,___flmul@b+3
 11845  002F2C  ECD2  F02A         	call	___flmul	;wreg free
 11846  002F30  C00F  F047         	movff	?___flmul,___fladd@b
 11847  002F34  C010  F048         	movff	?___flmul+1,___fladd@b+1
 11848  002F38  C011  F049         	movff	?___flmul+2,___fladd@b+2
 11849  002F3C  C012  F04A         	movff	?___flmul+3,___fladd@b+3
 11850  002F40  EC13  F026         	call	___fladd	;wreg free
 11851  002F44  C047  F154         	movff	?___fladd,_powf$1459
 11852  002F48  C048  F155         	movff	?___fladd+1,_powf$1459+1
 11853  002F4C  C049  F156         	movff	?___fladd+2,_powf$1459+2
 11854  002F50  C04A  F157         	movff	?___fladd+3,_powf$1459+3
 11855  002F54  0E61               	movlw	97
 11856  002F56  6E4B               	movwf	___fladd@a^0,c
 11857  002F58  0E0B               	movlw	11
 11858  002F5A  6E4C               	movwf	(___fladd@a+1)^0,c
 11859  002F5C  0E36               	movlw	54
 11860  002F5E  6E4D               	movwf	(___fladd@a+2)^0,c
 11861  002F60  0EBB               	movlw	187
 11862  002F62  6E4E               	movwf	(___fladd@a+3)^0,c
 11863  002F64  C1B0  F013         	movff	powf@t,___flmul@a
 11864  002F68  C1B1  F014         	movff	powf@t+1,___flmul@a+1
 11865  002F6C  C1B2  F015         	movff	powf@t+2,___flmul@a+2
 11866  002F70  C1B3  F016         	movff	powf@t+3,___flmul@a+3
 11867  002F74  C154  F00F         	movff	_powf$1459,___flmul@b
 11868  002F78  C155  F010         	movff	_powf$1459+1,___flmul@b+1
 11869  002F7C  C156  F011         	movff	_powf$1459+2,___flmul@b+2
 11870  002F80  C157  F012         	movff	_powf$1459+3,___flmul@b+3
 11871  002F84  ECD2  F02A         	call	___flmul	;wreg free
 11872  002F88  C00F  F047         	movff	?___flmul,___fladd@b
 11873  002F8C  C010  F048         	movff	?___flmul+1,___fladd@b+1
 11874  002F90  C011  F049         	movff	?___flmul+2,___fladd@b+2
 11875  002F94  C012  F04A         	movff	?___flmul+3,___fladd@b+3
 11876  002F98  EC13  F026         	call	___fladd	;wreg free
 11877  002F9C  C047  F148         	movff	?___fladd,_powf$1460
 11878  002FA0  C048  F149         	movff	?___fladd+1,_powf$1460+1
 11879  002FA4  C049  F14A         	movff	?___fladd+2,_powf$1460+2
 11880  002FA8  C04A  F14B         	movff	?___fladd+3,_powf$1460+3
 11881  002FAC  0EAB               	movlw	171
 11882  002FAE  6E4B               	movwf	___fladd@a^0,c
 11883  002FB0  0EAA               	movlw	170
 11884  002FB2  6E4C               	movwf	(___fladd@a+1)^0,c
 11885  002FB4  0E2A               	movlw	42
 11886  002FB6  6E4D               	movwf	(___fladd@a+2)^0,c
 11887  002FB8  0E3E               	movlw	62
 11888  002FBA  6E4E               	movwf	(___fladd@a+3)^0,c
 11889  002FBC  C1B0  F013         	movff	powf@t,___flmul@a
 11890  002FC0  C1B1  F014         	movff	powf@t+1,___flmul@a+1
 11891  002FC4  C1B2  F015         	movff	powf@t+2,___flmul@a+2
 11892  002FC8  C1B3  F016         	movff	powf@t+3,___flmul@a+3
 11893  002FCC  C148  F00F         	movff	_powf$1460,___flmul@b
 11894  002FD0  C149  F010         	movff	_powf$1460+1,___flmul@b+1
 11895  002FD4  C14A  F011         	movff	_powf$1460+2,___flmul@b+2
 11896  002FD8  C14B  F012         	movff	_powf$1460+3,___flmul@b+3
 11897  002FDC  ECD2  F02A         	call	___flmul	;wreg free
 11898  002FE0  C00F  F047         	movff	?___flmul,___fladd@b
 11899  002FE4  C010  F048         	movff	?___flmul+1,___fladd@b+1
 11900  002FE8  C011  F049         	movff	?___flmul+2,___fladd@b+2
 11901  002FEC  C012  F04A         	movff	?___flmul+3,___fladd@b+3
 11902  002FF0  EC13  F026         	call	___fladd	;wreg free
 11903  002FF4  C047  F138         	movff	?___fladd,_powf$1462
 11904  002FF8  C048  F139         	movff	?___fladd+1,_powf$1462+1
 11905  002FFC  C049  F13A         	movff	?___fladd+2,_powf$1462+2
 11906  003000  C04A  F13B         	movff	?___fladd+3,_powf$1462+3
 11907  003004  C1B4  F057         	movff	powf@z,___flsub@b
 11908  003008  C1B5  F058         	movff	powf@z+1,___flsub@b+1
 11909  00300C  C1B6  F059         	movff	powf@z+2,___flsub@b+2
 11910  003010  C1B7  F05A         	movff	powf@z+3,___flsub@b+3
 11911  003014  C1B0  F013         	movff	powf@t,___flmul@a
 11912  003018  C1B1  F014         	movff	powf@t+1,___flmul@a+1
 11913  00301C  C1B2  F015         	movff	powf@t+2,___flmul@a+2
 11914  003020  C1B3  F016         	movff	powf@t+3,___flmul@a+3
 11915  003024  C138  F00F         	movff	_powf$1462,___flmul@b
 11916  003028  C139  F010         	movff	_powf$1462+1,___flmul@b+1
 11917  00302C  C13A  F011         	movff	_powf$1462+2,___flmul@b+2
 11918  003030  C13B  F012         	movff	_powf$1462+3,___flmul@b+3
 11919  003034  ECD2  F02A         	call	___flmul	;wreg free
 11920  003038  C00F  F05B         	movff	?___flmul,___flsub@a
 11921  00303C  C010  F05C         	movff	?___flmul+1,___flsub@a+1
 11922  003040  C011  F05D         	movff	?___flmul+2,___flsub@a+2
 11923  003044  C012  F05E         	movff	?___flmul+3,___flsub@a+3
 11924  003048  EC14  F03D         	call	___flsub	;wreg free
 11925  00304C  C057  F180         	movff	?___flsub,powf@t1
 11926  003050  C058  F181         	movff	?___flsub+1,powf@t1+1
 11927  003054  C059  F182         	movff	?___flsub+2,powf@t1+2
 11928  003058  C05A  F183         	movff	?___flsub+3,powf@t1+3
 11929  00305C  0E00               	movlw	0
 11930  00305E  6E4B               	movwf	___fladd@a^0,c
 11931  003060  0E00               	movlw	0
 11932  003062  6E4C               	movwf	(___fladd@a+1)^0,c
 11933  003064  0E00               	movlw	0
 11934  003066  6E4D               	movwf	(___fladd@a+2)^0,c
 11935  003068  0EC0               	movlw	192
 11936  00306A  6E4E               	movwf	(___fladd@a+3)^0,c
 11937  00306C  C180  F047         	movff	powf@t1,___fladd@b
 11938  003070  C181  F048         	movff	powf@t1+1,___fladd@b+1
 11939  003074  C182  F049         	movff	powf@t1+2,___fladd@b+2
 11940  003078  C183  F04A         	movff	powf@t1+3,___fladd@b+3
 11941  00307C  EC13  F026         	call	___fladd	;wreg free
 11942  003080  C047  F02C         	movff	?___fladd,___fldiv@a
 11943  003084  C048  F02D         	movff	?___fladd+1,___fldiv@a+1
 11944  003088  C049  F02E         	movff	?___fladd+2,___fldiv@a+2
 11945  00308C  C04A  F02F         	movff	?___fladd+3,___fldiv@a+3
 11946  003090  C180  F013         	movff	powf@t1,___flmul@a
 11947  003094  C181  F014         	movff	powf@t1+1,___flmul@a+1
 11948  003098  C182  F015         	movff	powf@t1+2,___flmul@a+2
 11949  00309C  C183  F016         	movff	powf@t1+3,___flmul@a+3
 11950  0030A0  C1B4  F00F         	movff	powf@z,___flmul@b
 11951  0030A4  C1B5  F010         	movff	powf@z+1,___flmul@b+1
 11952  0030A8  C1B6  F011         	movff	powf@z+2,___flmul@b+2
 11953  0030AC  C1B7  F012         	movff	powf@z+3,___flmul@b+3
 11954  0030B0  ECD2  F02A         	call	___flmul	;wreg free
 11955  0030B4  C00F  F028         	movff	?___flmul,___fldiv@b
 11956  0030B8  C010  F029         	movff	?___flmul+1,___fldiv@b+1
 11957  0030BC  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
 11958  0030C0  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
 11959  0030C4  ECE7  F02C         	call	___fldiv	;wreg free
 11960  0030C8  C028  F13C         	movff	?___fldiv,_powf$1466
 11961  0030CC  C029  F13D         	movff	?___fldiv+1,_powf$1466+1
 11962  0030D0  C02A  F13E         	movff	?___fldiv+2,_powf$1466+2
 11963  0030D4  C02B  F13F         	movff	?___fldiv+3,_powf$1466+3
 11964  0030D8  C144  F04B         	movff	powf@w,___fladd@a
 11965  0030DC  C145  F04C         	movff	powf@w+1,___fladd@a+1
 11966  0030E0  C146  F04D         	movff	powf@w+2,___fladd@a+2
 11967  0030E4  C147  F04E         	movff	powf@w+3,___fladd@a+3
 11968  0030E8  C144  F013         	movff	powf@w,___flmul@a
 11969  0030EC  C145  F014         	movff	powf@w+1,___flmul@a+1
 11970  0030F0  C146  F015         	movff	powf@w+2,___flmul@a+2
 11971  0030F4  C147  F016         	movff	powf@w+3,___flmul@a+3
 11972  0030F8  C1B4  F00F         	movff	powf@z,___flmul@b
 11973  0030FC  C1B5  F010         	movff	powf@z+1,___flmul@b+1
 11974  003100  C1B6  F011         	movff	powf@z+2,___flmul@b+2
 11975  003104  C1B7  F012         	movff	powf@z+3,___flmul@b+3
 11976  003108  ECD2  F02A         	call	___flmul	;wreg free
 11977  00310C  C00F  F047         	movff	?___flmul,___fladd@b
 11978  003110  C010  F048         	movff	?___flmul+1,___fladd@b+1
 11979  003114  C011  F049         	movff	?___flmul+2,___fladd@b+2
 11980  003118  C012  F04A         	movff	?___flmul+3,___fladd@b+3
 11981  00311C  EC13  F026         	call	___fladd	;wreg free
 11982  003120  C047  F118         	movff	?___fladd,_powf$1472
 11983  003124  C048  F119         	movff	?___fladd+1,_powf$1472+1
 11984  003128  C049  F11A         	movff	?___fladd+2,_powf$1472+2
 11985  00312C  C04A  F11B         	movff	?___fladd+3,_powf$1472+3
 11986  003130  C13C  F057         	movff	_powf$1466,___flsub@b
 11987  003134  C13D  F058         	movff	_powf$1466+1,___flsub@b+1
 11988  003138  C13E  F059         	movff	_powf$1466+2,___flsub@b+2
 11989  00313C  C13F  F05A         	movff	_powf$1466+3,___flsub@b+3
 11990  003140  C118  F05B         	movff	_powf$1472,___flsub@a
 11991  003144  C119  F05C         	movff	_powf$1472+1,___flsub@a+1
 11992  003148  C11A  F05D         	movff	_powf$1472+2,___flsub@a+2
 11993  00314C  C11B  F05E         	movff	_powf$1472+3,___flsub@a+3
 11994  003150  EC14  F03D         	call	___flsub	;wreg free
 11995  003154  C057  F14C         	movff	?___flsub,powf@r
 11996  003158  C058  F14D         	movff	?___flsub+1,powf@r+1
 11997  00315C  C059  F14E         	movff	?___flsub+2,powf@r+2
 11998  003160  C05A  F14F         	movff	?___flsub+3,powf@r+3
 11999  003164  C1B4  F05B         	movff	powf@z,___flsub@a
 12000  003168  C1B5  F05C         	movff	powf@z+1,___flsub@a+1
 12001  00316C  C1B6  F05D         	movff	powf@z+2,___flsub@a+2
 12002  003170  C1B7  F05E         	movff	powf@z+3,___flsub@a+3
 12003  003174  C14C  F057         	movff	powf@r,___flsub@b
 12004  003178  C14D  F058         	movff	powf@r+1,___flsub@b+1
 12005  00317C  C14E  F059         	movff	powf@r+2,___flsub@b+2
 12006  003180  C14F  F05A         	movff	powf@r+3,___flsub@b+3
 12007  003184  EC14  F03D         	call	___flsub	;wreg free
 12008  003188  C057  F194         	movff	?___flsub,_powf$1461
 12009  00318C  C058  F195         	movff	?___flsub+1,_powf$1461+1
 12010  003190  C059  F196         	movff	?___flsub+2,_powf$1461+2
 12011  003194  C05A  F197         	movff	?___flsub+3,_powf$1461+3
 12012  003198  0E00               	movlw	0
 12013  00319A  6E57               	movwf	___flsub@b^0,c
 12014  00319C  0E00               	movlw	0
 12015  00319E  6E58               	movwf	(___flsub@b+1)^0,c
 12016  0031A0  0E80               	movlw	128
 12017  0031A2  6E59               	movwf	(___flsub@b+2)^0,c
 12018  0031A4  0E3F               	movlw	63
 12019  0031A6  6E5A               	movwf	(___flsub@b+3)^0,c
 12020  0031A8  C194  F05B         	movff	_powf$1461,___flsub@a
 12021  0031AC  C195  F05C         	movff	_powf$1461+1,___flsub@a+1
 12022  0031B0  C196  F05D         	movff	_powf$1461+2,___flsub@a+2
 12023  0031B4  C197  F05E         	movff	_powf$1461+3,___flsub@a+3
 12024  0031B8  EC14  F03D         	call	___flsub	;wreg free
 12025  0031BC  C057  F1B4         	movff	?___flsub,powf@z
 12026  0031C0  C058  F1B5         	movff	?___flsub+1,powf@z+1
 12027  0031C4  C059  F1B6         	movff	?___flsub+2,powf@z+2
 12028  0031C8  C05A  F1B7         	movff	?___flsub+3,powf@z+3
 12029  0031CC  C1B4  F1B8         	movff	powf@z,powf@__xc8_float_word
 12030  0031D0  C1B5  F1B9         	movff	powf@z+1,powf@__xc8_float_word+1
 12031  0031D4  C1B6  F1BA         	movff	powf@z+2,powf@__xc8_float_word+2
 12032  0031D8  C1B7  F1BB         	movff	powf@z+3,powf@__xc8_float_word+3
 12033  0031DC  C1B8  F1AC         	movff	powf@__xc8_float_word,powf@j
 12034  0031E0  C1B9  F1AD         	movff	powf@__xc8_float_word+1,powf@j+1
 12035  0031E4  C1BA  F1AE         	movff	powf@__xc8_float_word+2,powf@j+2
 12036  0031E8  C1BB  F1AF         	movff	powf@__xc8_float_word+3,powf@j+3
 12037  0031EC  C17C  F0B4         	movff	powf@n,??_powf
 12038  0031F0  C17D  F0B5         	movff	powf@n+1,??_powf+1
 12039  0031F4  C17E  F0B6         	movff	powf@n+2,??_powf+2
 12040  0031F8  C17F  F0B7         	movff	powf@n+3,??_powf+3
 12041  0031FC  0E17               	movlw	23
 12042  0031FE                     u7375:
 12043  0031FE  90D8               	bcf	status,0,c
 12044  003200  0100               	movlb	0	; () banked
 12045  003202  37B4               	rlcf	??_powf& (0+255),f,b
 12046  003204  37B5               	rlcf	(??_powf+1)& (0+255),f,b
 12047  003206  37B6               	rlcf	(??_powf+2)& (0+255),f,b
 12048  003208  37B7               	rlcf	(??_powf+3)& (0+255),f,b
 12049  00320A  2EE8               	decfsz	wreg,f,c
 12050  00320C  EFFF  F018         	goto	u7375
 12051  003210  51B4               	movf	??_powf& (0+255),w,b
 12052  003212  0101               	movlb	1	; () banked
 12053  003214  27AC               	addwf	powf@j& (0+255),f,b
 12054  003216  0100               	movlb	0	; () banked
 12055  003218  51B5               	movf	(??_powf+1)& (0+255),w,b
 12056  00321A  0101               	movlb	1	; () banked
 12057  00321C  23AD               	addwfc	(powf@j+1)& (0+255),f,b
 12058  00321E  0100               	movlb	0	; () banked
 12059  003220  51B6               	movf	(??_powf+2)& (0+255),w,b
 12060  003222  0101               	movlb	1	; () banked
 12061  003224  23AE               	addwfc	(powf@j+2)& (0+255),f,b
 12062  003226  0100               	movlb	0	; () banked
 12063  003228  51B7               	movf	(??_powf+3)& (0+255),w,b
 12064  00322A  0101               	movlb	1	; () banked
 12065  00322C  23AF               	addwfc	(powf@j+3)& (0+255),f,b
 12066  00322E                     
 12067                           ; BSR set to: 1
 12068  00322E  0E17               	movlw	23
 12069  003230  0100               	movlb	0	; () banked
 12070  003232  6FB4               	movwf	??_powf& (0+255),b
 12071  003234  C1AC  F0B5         	movff	powf@j,??_powf+1
 12072  003238  C1AD  F0B6         	movff	powf@j+1,??_powf+2
 12073  00323C  C1AE  F0B7         	movff	powf@j+2,??_powf+3
 12074  003240  C1AF  F0B8         	movff	powf@j+3,??_powf+4
 12075  003244                     u7385:
 12076  003244  67B4               	tstfsz	??_powf& (0+255),b
 12077  003246  EF27  F019         	goto	u7386
 12078  00324A  EF2F  F019         	goto	u7387
 12079  00324E                     u7386:
 12080  00324E  35B8               	rlcf	(??_powf+4)& (0+255),w,b
 12081  003250  33B8               	rrcf	(??_powf+4)& (0+255),f,b
 12082  003252  33B7               	rrcf	(??_powf+3)& (0+255),f,b
 12083  003254  33B6               	rrcf	(??_powf+2)& (0+255),f,b
 12084  003256  33B5               	rrcf	(??_powf+1)& (0+255),f,b
 12085  003258  2FB4               	decfsz	??_powf& (0+255),f,b
 12086  00325A  EF22  F019         	goto	u7385
 12087  00325E                     u7387:
 12088  00325E  0100               	movlb	0	; () banked
 12089  003260  BFB8               	btfsc	(??_powf+4)& (0+255),7,b
 12090  003262  EF3F  F019         	goto	u7390
 12091  003266  51B8               	movf	(??_powf+4)& (0+255),w,b
 12092  003268  11B7               	iorwf	(??_powf+3)& (0+255),w,b
 12093  00326A  11B6               	iorwf	(??_powf+2)& (0+255),w,b
 12094  00326C  E106               	bnz	u7391
 12095  00326E  05B5               	decf	(??_powf+1)& (0+255),w,b
 12096  003270  B0D8               	btfsc	status,0,c
 12097  003272  EF3D  F019         	goto	u7391
 12098  003276  EF3F  F019         	goto	u7390
 12099  00327A                     u7391:
 12100  00327A  EF57  F019         	goto	l1332
 12101  00327E                     u7390:
 12102  00327E                     
 12103                           ; BSR set to: 0
 12104  00327E  C1B4  F028         	movff	powf@z,scalbnf@x
 12105  003282  C1B5  F029         	movff	powf@z+1,scalbnf@x+1
 12106  003286  C1B6  F02A         	movff	powf@z+2,scalbnf@x+2
 12107  00328A  C1B7  F02B         	movff	powf@z+3,scalbnf@x+3
 12108  00328E  C17C  F02C         	movff	powf@n,scalbnf@n
 12109  003292  C17D  F02D         	movff	powf@n+1,scalbnf@n+1
 12110  003296  EC26  F030         	call	_scalbnf	;wreg free
 12111  00329A  C028  F1B4         	movff	?_scalbnf,powf@z
 12112  00329E  C029  F1B5         	movff	?_scalbnf+1,powf@z+1
 12113  0032A2  C02A  F1B6         	movff	?_scalbnf+2,powf@z+2
 12114  0032A6  C02B  F1B7         	movff	?_scalbnf+3,powf@z+3
 12115  0032AA  EF67  F019         	goto	l5944
 12116  0032AE                     l1332:
 12117                           
 12118                           ; BSR set to: 0
 12119  0032AE  C1AC  F1B8         	movff	powf@j,powf@__xc8_float_word
 12120  0032B2  C1AD  F1B9         	movff	powf@j+1,powf@__xc8_float_word+1
 12121  0032B6  C1AE  F1BA         	movff	powf@j+2,powf@__xc8_float_word+2
 12122  0032BA  C1AF  F1BB         	movff	powf@j+3,powf@__xc8_float_word+3
 12123  0032BE  C1B8  F1B4         	movff	powf@__xc8_float_word,powf@z
 12124  0032C2  C1B9  F1B5         	movff	powf@__xc8_float_word+1,powf@z+1
 12125  0032C6  C1BA  F1B6         	movff	powf@__xc8_float_word+2,powf@z+2
 12126  0032CA  C1BB  F1B7         	movff	powf@__xc8_float_word+3,powf@z+3
 12127  0032CE                     l5944:
 12128  0032CE  C188  F00F         	movff	powf@sn,___flmul@b
 12129  0032D2  C189  F010         	movff	powf@sn+1,___flmul@b+1
 12130  0032D6  C18A  F011         	movff	powf@sn+2,___flmul@b+2
 12131  0032DA  C18B  F012         	movff	powf@sn+3,___flmul@b+3
 12132  0032DE  C1B4  F013         	movff	powf@z,___flmul@a
 12133  0032E2  C1B5  F014         	movff	powf@z+1,___flmul@a+1
 12134  0032E6  C1B6  F015         	movff	powf@z+2,___flmul@a+2
 12135  0032EA  C1B7  F016         	movff	powf@z+3,___flmul@a+3
 12136  0032EE  ECD2  F02A         	call	___flmul	;wreg free
 12137  0032F2  C00F  F0AC         	movff	?___flmul,?_powf
 12138  0032F6  C010  F0AD         	movff	?___flmul+1,?_powf+1
 12139  0032FA  C011  F0AE         	movff	?___flmul+2,?_powf+2
 12140  0032FE  C012  F0AF         	movff	?___flmul+3,?_powf+3
 12141  003302                     l1220:
 12142  003302  0012               	return		;funcret
 12143  003304                     __end_of_powf:
 12144                           	callstack 0
 12145                           
 12146 ;; *************** function _sqrtf *****************
 12147 ;; Defined at:
 12148 ;;		line 22 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sqrtf.c"
 12149 ;; Parameters:    Size  Location     Type
 12150 ;;  x               4   12[BANK0 ] float 
 12151 ;; Auto vars:     Size  Location     Type
 12152 ;;  ix              4   57[BANK0 ] long 
 12153 ;;  r               4   53[BANK0 ] unsigned long 
 12154 ;;  m               4   49[BANK0 ] long 
 12155 ;;  z               4   45[BANK0 ] float 
 12156 ;;  t               4   41[BANK0 ] long 
 12157 ;;  q               4   37[BANK0 ] long 
 12158 ;;  __xc8_float_    4   33[BANK0 ] struct .
 12159 ;;  i               4   29[BANK0 ] long 
 12160 ;;  s               4   25[BANK0 ] long 
 12161 ;;  sign            4    0        long 
 12162 ;; Return value:  Size  Location     Type
 12163 ;;                  4   12[BANK0 ] float 
 12164 ;; Registers used:
 12165 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12166 ;; Tracked objects:
 12167 ;;		On entry : 0/0
 12168 ;;		On exit  : 0/0
 12169 ;;		Unchanged: 0/0
 12170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12171 ;;      Params:         0       4       0       0       0       0       0       0       0
 12172 ;;      Locals:         0      40       0       0       0       0       0       0       0
 12173 ;;      Temps:          0       5       0       0       0       0       0       0       0
 12174 ;;      Totals:         0      49       0       0       0       0       0       0       0
 12175 ;;Total ram usage:       49 bytes
 12176 ;; Hardware stack levels used:    1
 12177 ;; Hardware stack levels required when called:    1
 12178 ;; This function calls:
 12179 ;;		___fladd
 12180 ;;		___flge
 12181 ;;		___flmul
 12182 ;;		_nanf
 12183 ;; This function is called by:
 12184 ;;		_powf
 12185 ;; This function uses a non-reentrant model
 12186 ;;
 12187                           
 12188                           	psect	text32
 12189  0050E6                     __ptext32:
 12190                           	callstack 0
 12191  0050E6                     _sqrtf:
 12192                           	callstack 27
 12193  0050E6  C06C  F081         	movff	sqrtf@x,sqrtf@__xc8_float_word
 12194  0050EA  C06D  F082         	movff	sqrtf@x+1,sqrtf@__xc8_float_word+1
 12195  0050EE  C06E  F083         	movff	sqrtf@x+2,sqrtf@__xc8_float_word+2
 12196  0050F2  C06F  F084         	movff	sqrtf@x+3,sqrtf@__xc8_float_word+3
 12197  0050F6  C081  F099         	movff	sqrtf@__xc8_float_word,sqrtf@ix
 12198  0050FA  C082  F09A         	movff	sqrtf@__xc8_float_word+1,sqrtf@ix+1
 12199  0050FE  C083  F09B         	movff	sqrtf@__xc8_float_word+2,sqrtf@ix+2
 12200  005102  C084  F09C         	movff	sqrtf@__xc8_float_word+3,sqrtf@ix+3
 12201  005106  0E00               	movlw	0
 12202  005108  0100               	movlb	0	; () banked
 12203  00510A  1599               	andwf	sqrtf@ix& (0+255),w,b
 12204  00510C  6F70               	movwf	??_sqrtf& (0+255),b
 12205  00510E  0E00               	movlw	0
 12206  005110  159A               	andwf	(sqrtf@ix+1)& (0+255),w,b
 12207  005112  6F71               	movwf	(??_sqrtf+1)& (0+255),b
 12208  005114  0E80               	movlw	128
 12209  005116  159B               	andwf	(sqrtf@ix+2)& (0+255),w,b
 12210  005118  6F72               	movwf	(??_sqrtf+2)& (0+255),b
 12211  00511A  0E7F               	movlw	127
 12212  00511C  159C               	andwf	(sqrtf@ix+3)& (0+255),w,b
 12213  00511E  6F73               	movwf	(??_sqrtf+3)& (0+255),b
 12214  005120  0E80               	movlw	128
 12215  005122  1972               	xorwf	(??_sqrtf+2)& (0+255),w,b
 12216  005124  E109               	bnz	u6431
 12217  005126  0E7F               	movlw	127
 12218  005128  1973               	xorwf	(??_sqrtf+3)& (0+255),w,b
 12219  00512A  1170               	iorwf	??_sqrtf& (0+255),w,b
 12220  00512C  1171               	iorwf	(??_sqrtf+1)& (0+255),w,b
 12221  00512E  A4D8               	btfss	status,2,c
 12222  005130  EF9C  F028         	goto	u6431
 12223  005134  EF9E  F028         	goto	u6430
 12224  005138                     u6431:
 12225  005138  EFCC  F028         	goto	l5270
 12226  00513C                     u6430:
 12227  00513C                     
 12228                           ; BSR set to: 0
 12229  00513C  C06C  F013         	movff	sqrtf@x,___flmul@a
 12230  005140  C06D  F014         	movff	sqrtf@x+1,___flmul@a+1
 12231  005144  C06E  F015         	movff	sqrtf@x+2,___flmul@a+2
 12232  005148  C06F  F016         	movff	sqrtf@x+3,___flmul@a+3
 12233  00514C  C06C  F00F         	movff	sqrtf@x,___flmul@b
 12234  005150  C06D  F010         	movff	sqrtf@x+1,___flmul@b+1
 12235  005154  C06E  F011         	movff	sqrtf@x+2,___flmul@b+2
 12236  005158  C06F  F012         	movff	sqrtf@x+3,___flmul@b+3
 12237  00515C  ECD2  F02A         	call	___flmul	;wreg free
 12238  005160  C00F  F047         	movff	?___flmul,___fladd@b
 12239  005164  C010  F048         	movff	?___flmul+1,___fladd@b+1
 12240  005168  C011  F049         	movff	?___flmul+2,___fladd@b+2
 12241  00516C  C012  F04A         	movff	?___flmul+3,___fladd@b+3
 12242  005170  C06C  F04B         	movff	sqrtf@x,___fladd@a
 12243  005174  C06D  F04C         	movff	sqrtf@x+1,___fladd@a+1
 12244  005178  C06E  F04D         	movff	sqrtf@x+2,___fladd@a+2
 12245  00517C  C06F  F04E         	movff	sqrtf@x+3,___fladd@a+3
 12246  005180  EC13  F026         	call	___fladd	;wreg free
 12247  005184  C047  F06C         	movff	?___fladd,?_sqrtf
 12248  005188  C048  F06D         	movff	?___fladd+1,?_sqrtf+1
 12249  00518C  C049  F06E         	movff	?___fladd+2,?_sqrtf+2
 12250  005190  C04A  F06F         	movff	?___fladd+3,?_sqrtf+3
 12251  005194  EFD1  F02A         	goto	l1363
 12252  005198                     l5270:
 12253                           
 12254                           ; BSR set to: 0
 12255  005198  BF9C               	btfsc	(sqrtf@ix+3)& (0+255),7,b
 12256  00519A  EFDB  F028         	goto	u6440
 12257  00519E  519C               	movf	(sqrtf@ix+3)& (0+255),w,b
 12258  0051A0  119B               	iorwf	(sqrtf@ix+2)& (0+255),w,b
 12259  0051A2  119A               	iorwf	(sqrtf@ix+1)& (0+255),w,b
 12260  0051A4  E106               	bnz	u6441
 12261  0051A6  0599               	decf	sqrtf@ix& (0+255),w,b
 12262  0051A8  B0D8               	btfsc	status,0,c
 12263  0051AA  EFD9  F028         	goto	u6441
 12264  0051AE  EFDB  F028         	goto	u6440
 12265  0051B2                     u6441:
 12266  0051B2  EF18  F029         	goto	l5284
 12267  0051B6                     u6440:
 12268  0051B6                     
 12269                           ; BSR set to: 0
 12270  0051B6  0EFF               	movlw	255
 12271  0051B8  1599               	andwf	sqrtf@ix& (0+255),w,b
 12272  0051BA  6F70               	movwf	??_sqrtf& (0+255),b
 12273  0051BC  0EFF               	movlw	255
 12274  0051BE  159A               	andwf	(sqrtf@ix+1)& (0+255),w,b
 12275  0051C0  6F71               	movwf	(??_sqrtf+1)& (0+255),b
 12276  0051C2  0EFF               	movlw	255
 12277  0051C4  159B               	andwf	(sqrtf@ix+2)& (0+255),w,b
 12278  0051C6  6F72               	movwf	(??_sqrtf+2)& (0+255),b
 12279  0051C8  0E7F               	movlw	127
 12280  0051CA  159C               	andwf	(sqrtf@ix+3)& (0+255),w,b
 12281  0051CC  6F73               	movwf	(??_sqrtf+3)& (0+255),b
 12282  0051CE  5170               	movf	??_sqrtf& (0+255),w,b
 12283  0051D0  1171               	iorwf	(??_sqrtf+1)& (0+255),w,b
 12284  0051D2  1172               	iorwf	(??_sqrtf+2)& (0+255),w,b
 12285  0051D4  1173               	iorwf	(??_sqrtf+3)& (0+255),w,b
 12286  0051D6  A4D8               	btfss	status,2,c
 12287  0051D8  EFF0  F028         	goto	u6451
 12288  0051DC  EFF2  F028         	goto	u6450
 12289  0051E0                     u6451:
 12290  0051E0  EFFC  F028         	goto	l5276
 12291  0051E4                     u6450:
 12292  0051E4                     
 12293                           ; BSR set to: 0
 12294  0051E4  C06C  F06C         	movff	sqrtf@x,?_sqrtf
 12295  0051E8  C06D  F06D         	movff	sqrtf@x+1,?_sqrtf+1
 12296  0051EC  C06E  F06E         	movff	sqrtf@x+2,?_sqrtf+2
 12297  0051F0  C06F  F06F         	movff	sqrtf@x+3,?_sqrtf+3
 12298  0051F4  EFD1  F02A         	goto	l1363
 12299  0051F8                     l5276:
 12300                           
 12301                           ; BSR set to: 0
 12302  0051F8  BF9C               	btfsc	(sqrtf@ix+3)& (0+255),7,b
 12303  0051FA  EF03  F029         	goto	u6460
 12304  0051FE  EF01  F029         	goto	u6461
 12305  005202                     u6461:
 12306  005202  EF18  F029         	goto	l5284
 12307  005206                     u6460:
 12308  005206                     
 12309                           ; BSR set to: 0
 12310  005206  0E00               	movlw	0
 12311  005208  0102               	movlb	2	; () banked
 12312  00520A  6F11               	movwf	(_errno+1)& (0+255),b
 12313  00520C  0E21               	movlw	33
 12314  00520E  6F10               	movwf	_errno& (0+255),b
 12315  005210                     
 12316                           ; BSR set to: 2
 12317  005210  0EC6               	movlw	low (STR_2+6)
 12318  005212  6E01               	movwf	nanf@s^0,c
 12319  005214  0E08               	movlw	high (STR_2+6)
 12320  005216  6E02               	movwf	(nanf@s+1)^0,c
 12321  005218  EC72  F03E         	call	_nanf	;wreg free
 12322  00521C  C001  F06C         	movff	?_nanf,?_sqrtf
 12323  005220  C002  F06D         	movff	?_nanf+1,?_sqrtf+1
 12324  005224  C003  F06E         	movff	?_nanf+2,?_sqrtf+2
 12325  005228  C004  F06F         	movff	?_nanf+3,?_sqrtf+3
 12326  00522C  EFD1  F02A         	goto	l1363
 12327  005230                     l5284:
 12328                           
 12329                           ; BSR set to: 0
 12330  005230  0E17               	movlw	23
 12331  005232  6F70               	movwf	??_sqrtf& (0+255),b
 12332  005234  C099  F071         	movff	sqrtf@ix,??_sqrtf+1
 12333  005238  C09A  F072         	movff	sqrtf@ix+1,??_sqrtf+2
 12334  00523C  C09B  F073         	movff	sqrtf@ix+2,??_sqrtf+3
 12335  005240  C09C  F074         	movff	sqrtf@ix+3,??_sqrtf+4
 12336  005244                     u6475:
 12337  005244  6770               	tstfsz	??_sqrtf& (0+255),b
 12338  005246  EF27  F029         	goto	u6476
 12339  00524A  EF2F  F029         	goto	u6477
 12340  00524E                     u6476:
 12341  00524E  3574               	rlcf	(??_sqrtf+4)& (0+255),w,b
 12342  005250  3374               	rrcf	(??_sqrtf+4)& (0+255),f,b
 12343  005252  3373               	rrcf	(??_sqrtf+3)& (0+255),f,b
 12344  005254  3372               	rrcf	(??_sqrtf+2)& (0+255),f,b
 12345  005256  3371               	rrcf	(??_sqrtf+1)& (0+255),f,b
 12346  005258  2F70               	decfsz	??_sqrtf& (0+255),f,b
 12347  00525A  EF22  F029         	goto	u6475
 12348  00525E                     u6477:
 12349  00525E  C071  F091         	movff	??_sqrtf+1,sqrtf@m
 12350  005262  C072  F092         	movff	??_sqrtf+2,sqrtf@m+1
 12351  005266  C073  F093         	movff	??_sqrtf+3,sqrtf@m+2
 12352  00526A  C074  F094         	movff	??_sqrtf+4,sqrtf@m+3
 12353  00526E  0100               	movlb	0	; () banked
 12354  005270  5191               	movf	sqrtf@m& (0+255),w,b
 12355  005272  1192               	iorwf	(sqrtf@m+1)& (0+255),w,b
 12356  005274  1193               	iorwf	(sqrtf@m+2)& (0+255),w,b
 12357  005276  1194               	iorwf	(sqrtf@m+3)& (0+255),w,b
 12358  005278  A4D8               	btfss	status,2,c
 12359  00527A  EF41  F029         	goto	u6481
 12360  00527E  EF43  F029         	goto	u6480
 12361  005282                     u6481:
 12362  005282  EF73  F029         	goto	l1367
 12363  005286                     u6480:
 12364  005286                     
 12365                           ; BSR set to: 0
 12366  005286  0E00               	movlw	0
 12367  005288  6F7D               	movwf	sqrtf@i& (0+255),b
 12368  00528A  0E00               	movlw	0
 12369  00528C  6F7E               	movwf	(sqrtf@i+1)& (0+255),b
 12370  00528E  0E00               	movlw	0
 12371  005290  6F7F               	movwf	(sqrtf@i+2)& (0+255),b
 12372  005292  0E00               	movlw	0
 12373  005294  6F80               	movwf	(sqrtf@i+3)& (0+255),b
 12374  005296  EF58  F029         	goto	l5292
 12375  00529A                     l5288:
 12376                           
 12377                           ; BSR set to: 0
 12378  00529A  90D8               	bcf	status,0,c
 12379  00529C  3799               	rlcf	sqrtf@ix& (0+255),f,b
 12380  00529E  379A               	rlcf	(sqrtf@ix+1)& (0+255),f,b
 12381  0052A0  379B               	rlcf	(sqrtf@ix+2)& (0+255),f,b
 12382  0052A2  379C               	rlcf	(sqrtf@ix+3)& (0+255),f,b
 12383  0052A4                     
 12384                           ; BSR set to: 0
 12385  0052A4  0E01               	movlw	1
 12386  0052A6  277D               	addwf	sqrtf@i& (0+255),f,b
 12387  0052A8  0E00               	movlw	0
 12388  0052AA  237E               	addwfc	(sqrtf@i+1)& (0+255),f,b
 12389  0052AC  237F               	addwfc	(sqrtf@i+2)& (0+255),f,b
 12390  0052AE  2380               	addwfc	(sqrtf@i+3)& (0+255),f,b
 12391  0052B0                     l5292:
 12392                           
 12393                           ; BSR set to: 0
 12394  0052B0  AF9B               	btfss	(sqrtf@ix+2)& (0+255),7,b
 12395  0052B2  EF5D  F029         	goto	u6491
 12396  0052B6  EF5F  F029         	goto	u6490
 12397  0052BA                     u6491:
 12398  0052BA  EF4D  F029         	goto	l5288
 12399  0052BE                     u6490:
 12400  0052BE                     
 12401                           ; BSR set to: 0
 12402  0052BE  0EFF               	movlw	255
 12403  0052C0  257D               	addwf	sqrtf@i& (0+255),w,b
 12404  0052C2  6F70               	movwf	??_sqrtf& (0+255),b
 12405  0052C4  0EFF               	movlw	255
 12406  0052C6  217E               	addwfc	(sqrtf@i+1)& (0+255),w,b
 12407  0052C8  6F71               	movwf	(??_sqrtf+1)& (0+255),b
 12408  0052CA  0EFF               	movlw	255
 12409  0052CC  217F               	addwfc	(sqrtf@i+2)& (0+255),w,b
 12410  0052CE  6F72               	movwf	(??_sqrtf+2)& (0+255),b
 12411  0052D0  0EFF               	movlw	255
 12412  0052D2  2180               	addwfc	(sqrtf@i+3)& (0+255),w,b
 12413  0052D4  6F73               	movwf	(??_sqrtf+3)& (0+255),b
 12414  0052D6  5170               	movf	??_sqrtf& (0+255),w,b
 12415  0052D8  5F91               	subwf	sqrtf@m& (0+255),f,b
 12416  0052DA  5171               	movf	(??_sqrtf+1)& (0+255),w,b
 12417  0052DC  5B92               	subwfb	(sqrtf@m+1)& (0+255),f,b
 12418  0052DE  5172               	movf	(??_sqrtf+2)& (0+255),w,b
 12419  0052E0  5B93               	subwfb	(sqrtf@m+2)& (0+255),f,b
 12420  0052E2  5173               	movf	(??_sqrtf+3)& (0+255),w,b
 12421  0052E4  5B94               	subwfb	(sqrtf@m+3)& (0+255),f,b
 12422  0052E6                     l1367:
 12423                           
 12424                           ; BSR set to: 0
 12425  0052E6  0E81               	movlw	129
 12426  0052E8  2791               	addwf	sqrtf@m& (0+255),f,b
 12427  0052EA  0EFF               	movlw	255
 12428  0052EC  2392               	addwfc	(sqrtf@m+1)& (0+255),f,b
 12429  0052EE  0EFF               	movlw	255
 12430  0052F0  2393               	addwfc	(sqrtf@m+2)& (0+255),f,b
 12431  0052F2  0EFF               	movlw	255
 12432  0052F4  2394               	addwfc	(sqrtf@m+3)& (0+255),f,b
 12433  0052F6  0EFF               	movlw	255
 12434  0052F8  1599               	andwf	sqrtf@ix& (0+255),w,b
 12435  0052FA  6F70               	movwf	??_sqrtf& (0+255),b
 12436  0052FC  0EFF               	movlw	255
 12437  0052FE  159A               	andwf	(sqrtf@ix+1)& (0+255),w,b
 12438  005300  6F71               	movwf	(??_sqrtf+1)& (0+255),b
 12439  005302  0E7F               	movlw	127
 12440  005304  159B               	andwf	(sqrtf@ix+2)& (0+255),w,b
 12441  005306  6F72               	movwf	(??_sqrtf+2)& (0+255),b
 12442  005308  0E00               	movlw	0
 12443  00530A  159C               	andwf	(sqrtf@ix+3)& (0+255),w,b
 12444  00530C  6F73               	movwf	(??_sqrtf+3)& (0+255),b
 12445  00530E  0E00               	movlw	0
 12446  005310  1170               	iorwf	??_sqrtf& (0+255),w,b
 12447  005312  6F99               	movwf	sqrtf@ix& (0+255),b
 12448  005314  0E00               	movlw	0
 12449  005316  1171               	iorwf	(??_sqrtf+1)& (0+255),w,b
 12450  005318  6F9A               	movwf	(sqrtf@ix+1)& (0+255),b
 12451  00531A  0E80               	movlw	128
 12452  00531C  1172               	iorwf	(??_sqrtf+2)& (0+255),w,b
 12453  00531E  6F9B               	movwf	(sqrtf@ix+2)& (0+255),b
 12454  005320  0E00               	movlw	0
 12455  005322  1173               	iorwf	(??_sqrtf+3)& (0+255),w,b
 12456  005324  6F9C               	movwf	(sqrtf@ix+3)& (0+255),b
 12457  005326                     
 12458                           ; BSR set to: 0
 12459  005326  A191               	btfss	sqrtf@m& (0+255),0,b
 12460  005328  EF98  F029         	goto	u6501
 12461  00532C  EF9A  F029         	goto	u6500
 12462  005330                     u6501:
 12463  005330  EFA2  F029         	goto	l1371
 12464  005334                     u6500:
 12465  005334                     
 12466                           ; BSR set to: 0
 12467  005334  5199               	movf	sqrtf@ix& (0+255),w,b
 12468  005336  2799               	addwf	sqrtf@ix& (0+255),f,b
 12469  005338  519A               	movf	(sqrtf@ix+1)& (0+255),w,b
 12470  00533A  239A               	addwfc	(sqrtf@ix+1)& (0+255),f,b
 12471  00533C  519B               	movf	(sqrtf@ix+2)& (0+255),w,b
 12472  00533E  239B               	addwfc	(sqrtf@ix+2)& (0+255),f,b
 12473  005340  519C               	movf	(sqrtf@ix+3)& (0+255),w,b
 12474  005342  239C               	addwfc	(sqrtf@ix+3)& (0+255),f,b
 12475  005344                     l1371:
 12476                           
 12477                           ; BSR set to: 0
 12478  005344  3594               	rlcf	(sqrtf@m+3)& (0+255),w,b
 12479  005346  3394               	rrcf	(sqrtf@m+3)& (0+255),f,b
 12480  005348  3393               	rrcf	(sqrtf@m+2)& (0+255),f,b
 12481  00534A  3392               	rrcf	(sqrtf@m+1)& (0+255),f,b
 12482  00534C  3391               	rrcf	sqrtf@m& (0+255),f,b
 12483  00534E  5199               	movf	sqrtf@ix& (0+255),w,b
 12484  005350  2799               	addwf	sqrtf@ix& (0+255),f,b
 12485  005352  519A               	movf	(sqrtf@ix+1)& (0+255),w,b
 12486  005354  239A               	addwfc	(sqrtf@ix+1)& (0+255),f,b
 12487  005356  519B               	movf	(sqrtf@ix+2)& (0+255),w,b
 12488  005358  239B               	addwfc	(sqrtf@ix+2)& (0+255),f,b
 12489  00535A  519C               	movf	(sqrtf@ix+3)& (0+255),w,b
 12490  00535C  239C               	addwfc	(sqrtf@ix+3)& (0+255),f,b
 12491  00535E                     
 12492                           ; BSR set to: 0
 12493  00535E  0E00               	movlw	0
 12494  005360  6F79               	movwf	sqrtf@s& (0+255),b
 12495  005362  0E00               	movlw	0
 12496  005364  6F7A               	movwf	(sqrtf@s+1)& (0+255),b
 12497  005366  0E00               	movlw	0
 12498  005368  6F7B               	movwf	(sqrtf@s+2)& (0+255),b
 12499  00536A  0E00               	movlw	0
 12500  00536C  6F7C               	movwf	(sqrtf@s+3)& (0+255),b
 12501  00536E  C079  F085         	movff	sqrtf@s,sqrtf@q
 12502  005372  C07A  F086         	movff	sqrtf@s+1,sqrtf@q+1
 12503  005376  C07B  F087         	movff	sqrtf@s+2,sqrtf@q+2
 12504  00537A  C07C  F088         	movff	sqrtf@s+3,sqrtf@q+3
 12505  00537E                     
 12506                           ; BSR set to: 0
 12507  00537E  0E00               	movlw	0
 12508  005380  6F95               	movwf	sqrtf@r& (0+255),b
 12509  005382  0E00               	movlw	0
 12510  005384  6F96               	movwf	(sqrtf@r+1)& (0+255),b
 12511  005386  0E00               	movlw	0
 12512  005388  6F97               	movwf	(sqrtf@r+2)& (0+255),b
 12513  00538A  0E01               	movlw	1
 12514  00538C  6F98               	movwf	(sqrtf@r+3)& (0+255),b
 12515  00538E  EF11  F02A         	goto	l5310
 12516  005392                     l5304:
 12517                           
 12518                           ; BSR set to: 0
 12519  005392  5179               	movf	sqrtf@s& (0+255),w,b
 12520  005394  2595               	addwf	sqrtf@r& (0+255),w,b
 12521  005396  6F89               	movwf	sqrtf@t& (0+255),b
 12522  005398  517A               	movf	(sqrtf@s+1)& (0+255),w,b
 12523  00539A  2196               	addwfc	(sqrtf@r+1)& (0+255),w,b
 12524  00539C  6F8A               	movwf	(sqrtf@t+1)& (0+255),b
 12525  00539E  517B               	movf	(sqrtf@s+2)& (0+255),w,b
 12526  0053A0  2197               	addwfc	(sqrtf@r+2)& (0+255),w,b
 12527  0053A2  6F8B               	movwf	(sqrtf@t+2)& (0+255),b
 12528  0053A4  517C               	movf	(sqrtf@s+3)& (0+255),w,b
 12529  0053A6  2198               	addwfc	(sqrtf@r+3)& (0+255),w,b
 12530  0053A8  6F8C               	movwf	(sqrtf@t+3)& (0+255),b
 12531  0053AA  5189               	movf	sqrtf@t& (0+255),w,b
 12532  0053AC  5D99               	subwf	sqrtf@ix& (0+255),w,b
 12533  0053AE  518A               	movf	(sqrtf@t+1)& (0+255),w,b
 12534  0053B0  599A               	subwfb	(sqrtf@ix+1)& (0+255),w,b
 12535  0053B2  518B               	movf	(sqrtf@t+2)& (0+255),w,b
 12536  0053B4  599B               	subwfb	(sqrtf@ix+2)& (0+255),w,b
 12537  0053B6  519C               	movf	(sqrtf@ix+3)& (0+255),w,b
 12538  0053B8  0A80               	xorlw	128
 12539  0053BA  6F70               	movwf	??_sqrtf& (0+255),b
 12540  0053BC  518C               	movf	(sqrtf@t+3)& (0+255),w,b
 12541  0053BE  0A80               	xorlw	128
 12542  0053C0  5970               	subwfb	??_sqrtf& (0+255),w,b
 12543  0053C2  A0D8               	btfss	status,0,c
 12544  0053C4  EFE6  F029         	goto	u6511
 12545  0053C8  EFE8  F029         	goto	u6510
 12546  0053CC                     u6511:
 12547  0053CC  EF04  F02A         	goto	l1374
 12548  0053D0                     u6510:
 12549  0053D0                     
 12550                           ; BSR set to: 0
 12551  0053D0  5189               	movf	sqrtf@t& (0+255),w,b
 12552  0053D2  2595               	addwf	sqrtf@r& (0+255),w,b
 12553  0053D4  6F79               	movwf	sqrtf@s& (0+255),b
 12554  0053D6  518A               	movf	(sqrtf@t+1)& (0+255),w,b
 12555  0053D8  2196               	addwfc	(sqrtf@r+1)& (0+255),w,b
 12556  0053DA  6F7A               	movwf	(sqrtf@s+1)& (0+255),b
 12557  0053DC  518B               	movf	(sqrtf@t+2)& (0+255),w,b
 12558  0053DE  2197               	addwfc	(sqrtf@r+2)& (0+255),w,b
 12559  0053E0  6F7B               	movwf	(sqrtf@s+2)& (0+255),b
 12560  0053E2  518C               	movf	(sqrtf@t+3)& (0+255),w,b
 12561  0053E4  2198               	addwfc	(sqrtf@r+3)& (0+255),w,b
 12562  0053E6  6F7C               	movwf	(sqrtf@s+3)& (0+255),b
 12563  0053E8  5189               	movf	sqrtf@t& (0+255),w,b
 12564  0053EA  5F99               	subwf	sqrtf@ix& (0+255),f,b
 12565  0053EC  518A               	movf	(sqrtf@t+1)& (0+255),w,b
 12566  0053EE  5B9A               	subwfb	(sqrtf@ix+1)& (0+255),f,b
 12567  0053F0  518B               	movf	(sqrtf@t+2)& (0+255),w,b
 12568  0053F2  5B9B               	subwfb	(sqrtf@ix+2)& (0+255),f,b
 12569  0053F4  518C               	movf	(sqrtf@t+3)& (0+255),w,b
 12570  0053F6  5B9C               	subwfb	(sqrtf@ix+3)& (0+255),f,b
 12571  0053F8  5195               	movf	sqrtf@r& (0+255),w,b
 12572  0053FA  2785               	addwf	sqrtf@q& (0+255),f,b
 12573  0053FC  5196               	movf	(sqrtf@r+1)& (0+255),w,b
 12574  0053FE  2386               	addwfc	(sqrtf@q+1)& (0+255),f,b
 12575  005400  5197               	movf	(sqrtf@r+2)& (0+255),w,b
 12576  005402  2387               	addwfc	(sqrtf@q+2)& (0+255),f,b
 12577  005404  5198               	movf	(sqrtf@r+3)& (0+255),w,b
 12578  005406  2388               	addwfc	(sqrtf@q+3)& (0+255),f,b
 12579  005408                     l1374:
 12580                           
 12581                           ; BSR set to: 0
 12582  005408  5199               	movf	sqrtf@ix& (0+255),w,b
 12583  00540A  2799               	addwf	sqrtf@ix& (0+255),f,b
 12584  00540C  519A               	movf	(sqrtf@ix+1)& (0+255),w,b
 12585  00540E  239A               	addwfc	(sqrtf@ix+1)& (0+255),f,b
 12586  005410  519B               	movf	(sqrtf@ix+2)& (0+255),w,b
 12587  005412  239B               	addwfc	(sqrtf@ix+2)& (0+255),f,b
 12588  005414  519C               	movf	(sqrtf@ix+3)& (0+255),w,b
 12589  005416  239C               	addwfc	(sqrtf@ix+3)& (0+255),f,b
 12590  005418                     
 12591                           ; BSR set to: 0
 12592  005418  90D8               	bcf	status,0,c
 12593  00541A  3398               	rrcf	(sqrtf@r+3)& (0+255),f,b
 12594  00541C  3397               	rrcf	(sqrtf@r+2)& (0+255),f,b
 12595  00541E  3396               	rrcf	(sqrtf@r+1)& (0+255),f,b
 12596  005420  3395               	rrcf	sqrtf@r& (0+255),f,b
 12597  005422                     l5310:
 12598                           
 12599                           ; BSR set to: 0
 12600  005422  5195               	movf	sqrtf@r& (0+255),w,b
 12601  005424  1196               	iorwf	(sqrtf@r+1)& (0+255),w,b
 12602  005426  1197               	iorwf	(sqrtf@r+2)& (0+255),w,b
 12603  005428  1198               	iorwf	(sqrtf@r+3)& (0+255),w,b
 12604  00542A  A4D8               	btfss	status,2,c
 12605  00542C  EF1A  F02A         	goto	u6521
 12606  005430  EF1C  F02A         	goto	u6520
 12607  005434                     u6521:
 12608  005434  EFC9  F029         	goto	l5304
 12609  005438                     u6520:
 12610  005438                     
 12611                           ; BSR set to: 0
 12612  005438  5199               	movf	sqrtf@ix& (0+255),w,b
 12613  00543A  119A               	iorwf	(sqrtf@ix+1)& (0+255),w,b
 12614  00543C  119B               	iorwf	(sqrtf@ix+2)& (0+255),w,b
 12615  00543E  119C               	iorwf	(sqrtf@ix+3)& (0+255),w,b
 12616  005440  B4D8               	btfsc	status,2,c
 12617  005442  EF25  F02A         	goto	u6531
 12618  005446  EF27  F02A         	goto	u6530
 12619  00544A                     u6531:
 12620  00544A  EF87  F02A         	goto	l1376
 12621  00544E                     u6530:
 12622  00544E                     
 12623                           ; BSR set to: 0
 12624  00544E  0E00               	movlw	0
 12625  005450  6F8D               	movwf	sqrtf@z& (0+255),b
 12626  005452  0E00               	movlw	0
 12627  005454  6F8E               	movwf	(sqrtf@z+1)& (0+255),b
 12628  005456  0E80               	movlw	128
 12629  005458  6F8F               	movwf	(sqrtf@z+2)& (0+255),b
 12630  00545A  0E3F               	movlw	63
 12631  00545C  6F90               	movwf	(sqrtf@z+3)& (0+255),b
 12632  00545E                     
 12633                           ; BSR set to: 0
 12634  00545E  C08D  F060         	movff	sqrtf@z,___flge@ff1
 12635  005462  C08E  F061         	movff	sqrtf@z+1,___flge@ff1+1
 12636  005466  C08F  F062         	movff	sqrtf@z+2,___flge@ff1+2
 12637  00546A  C090  F063         	movff	sqrtf@z+3,___flge@ff1+3
 12638  00546E  0E00               	movlw	0
 12639  005470  6F64               	movwf	___flge@ff2& (0+255),b
 12640  005472  0E00               	movlw	0
 12641  005474  6F65               	movwf	(___flge@ff2+1)& (0+255),b
 12642  005476  0E80               	movlw	128
 12643  005478  6F66               	movwf	(___flge@ff2+2)& (0+255),b
 12644  00547A  0E3F               	movlw	63
 12645  00547C  6F67               	movwf	(___flge@ff2+3)& (0+255),b
 12646  00547E  EC65  F037         	call	___flge	;wreg free
 12647  005482  0100               	movlb	0	; () banked
 12648  005484  A0D8               	btfss	status,0,c
 12649  005486  EF47  F02A         	goto	u6541
 12650  00548A  EF49  F02A         	goto	u6540
 12651  00548E                     u6541:
 12652  00548E  EF87  F02A         	goto	l1376
 12653  005492                     u6540:
 12654  005492                     
 12655                           ; BSR set to: 0
 12656  005492  0E00               	movlw	0
 12657  005494  6F8D               	movwf	sqrtf@z& (0+255),b
 12658  005496  0E00               	movlw	0
 12659  005498  6F8E               	movwf	(sqrtf@z+1)& (0+255),b
 12660  00549A  0E80               	movlw	128
 12661  00549C  6F8F               	movwf	(sqrtf@z+2)& (0+255),b
 12662  00549E  0E3F               	movlw	63
 12663  0054A0  6F90               	movwf	(sqrtf@z+3)& (0+255),b
 12664  0054A2                     
 12665                           ; BSR set to: 0
 12666  0054A2  0E00               	movlw	0
 12667  0054A4  6F60               	movwf	___flge@ff1& (0+255),b
 12668  0054A6  0E00               	movlw	0
 12669  0054A8  6F61               	movwf	(___flge@ff1+1)& (0+255),b
 12670  0054AA  0E80               	movlw	128
 12671  0054AC  6F62               	movwf	(___flge@ff1+2)& (0+255),b
 12672  0054AE  0E3F               	movlw	63
 12673  0054B0  6F63               	movwf	(___flge@ff1+3)& (0+255),b
 12674  0054B2  C08D  F064         	movff	sqrtf@z,___flge@ff2
 12675  0054B6  C08E  F065         	movff	sqrtf@z+1,___flge@ff2+1
 12676  0054BA  C08F  F066         	movff	sqrtf@z+2,___flge@ff2+2
 12677  0054BE  C090  F067         	movff	sqrtf@z+3,___flge@ff2+3
 12678  0054C2  EC65  F037         	call	___flge	;wreg free
 12679  0054C6  0100               	movlb	0	; () banked
 12680  0054C8  B0D8               	btfsc	status,0,c
 12681  0054CA  EF69  F02A         	goto	u6551
 12682  0054CE  EF6B  F02A         	goto	u6550
 12683  0054D2                     u6551:
 12684  0054D2  EF73  F02A         	goto	l5324
 12685  0054D6                     u6550:
 12686  0054D6                     
 12687                           ; BSR set to: 0
 12688  0054D6  0E02               	movlw	2
 12689  0054D8  2785               	addwf	sqrtf@q& (0+255),f,b
 12690  0054DA  0E00               	movlw	0
 12691  0054DC  2386               	addwfc	(sqrtf@q+1)& (0+255),f,b
 12692  0054DE  2387               	addwfc	(sqrtf@q+2)& (0+255),f,b
 12693  0054E0  2388               	addwfc	(sqrtf@q+3)& (0+255),f,b
 12694  0054E2  EF87  F02A         	goto	l1376
 12695  0054E6                     l5324:
 12696                           
 12697                           ; BSR set to: 0
 12698  0054E6  0E01               	movlw	1
 12699  0054E8  1585               	andwf	sqrtf@q& (0+255),w,b
 12700  0054EA  6F70               	movwf	??_sqrtf& (0+255),b
 12701  0054EC  0E00               	movlw	0
 12702  0054EE  1586               	andwf	(sqrtf@q+1)& (0+255),w,b
 12703  0054F0  6F71               	movwf	(??_sqrtf+1)& (0+255),b
 12704  0054F2  0E00               	movlw	0
 12705  0054F4  1587               	andwf	(sqrtf@q+2)& (0+255),w,b
 12706  0054F6  6F72               	movwf	(??_sqrtf+2)& (0+255),b
 12707  0054F8  0E00               	movlw	0
 12708  0054FA  1588               	andwf	(sqrtf@q+3)& (0+255),w,b
 12709  0054FC  6F73               	movwf	(??_sqrtf+3)& (0+255),b
 12710  0054FE  5170               	movf	??_sqrtf& (0+255),w,b
 12711  005500  2785               	addwf	sqrtf@q& (0+255),f,b
 12712  005502  5171               	movf	(??_sqrtf+1)& (0+255),w,b
 12713  005504  2386               	addwfc	(sqrtf@q+1)& (0+255),f,b
 12714  005506  5172               	movf	(??_sqrtf+2)& (0+255),w,b
 12715  005508  2387               	addwfc	(sqrtf@q+2)& (0+255),f,b
 12716  00550A  5173               	movf	(??_sqrtf+3)& (0+255),w,b
 12717  00550C  2388               	addwfc	(sqrtf@q+3)& (0+255),f,b
 12718  00550E                     l1376:
 12719                           
 12720                           ; BSR set to: 0
 12721  00550E  C085  F070         	movff	sqrtf@q,??_sqrtf
 12722  005512  C086  F071         	movff	sqrtf@q+1,??_sqrtf+1
 12723  005516  C087  F072         	movff	sqrtf@q+2,??_sqrtf+2
 12724  00551A  C088  F073         	movff	sqrtf@q+3,??_sqrtf+3
 12725  00551E  3573               	rlcf	(??_sqrtf+3)& (0+255),w,b
 12726  005520  3373               	rrcf	(??_sqrtf+3)& (0+255),f,b
 12727  005522  3372               	rrcf	(??_sqrtf+2)& (0+255),f,b
 12728  005524  3371               	rrcf	(??_sqrtf+1)& (0+255),f,b
 12729  005526  3370               	rrcf	??_sqrtf& (0+255),f,b
 12730  005528  0E00               	movlw	0
 12731  00552A  2570               	addwf	??_sqrtf& (0+255),w,b
 12732  00552C  6F99               	movwf	sqrtf@ix& (0+255),b
 12733  00552E  0E00               	movlw	0
 12734  005530  2171               	addwfc	(??_sqrtf+1)& (0+255),w,b
 12735  005532  6F9A               	movwf	(sqrtf@ix+1)& (0+255),b
 12736  005534  0E00               	movlw	0
 12737  005536  2172               	addwfc	(??_sqrtf+2)& (0+255),w,b
 12738  005538  6F9B               	movwf	(sqrtf@ix+2)& (0+255),b
 12739  00553A  0E3F               	movlw	63
 12740  00553C  2173               	addwfc	(??_sqrtf+3)& (0+255),w,b
 12741  00553E  6F9C               	movwf	(sqrtf@ix+3)& (0+255),b
 12742  005540  C091  F070         	movff	sqrtf@m,??_sqrtf
 12743  005544  C092  F071         	movff	sqrtf@m+1,??_sqrtf+1
 12744  005548  C093  F072         	movff	sqrtf@m+2,??_sqrtf+2
 12745  00554C  C094  F073         	movff	sqrtf@m+3,??_sqrtf+3
 12746  005550  0E17               	movlw	23
 12747  005552                     u6565:
 12748  005552  90D8               	bcf	status,0,c
 12749  005554  3770               	rlcf	??_sqrtf& (0+255),f,b
 12750  005556  3771               	rlcf	(??_sqrtf+1)& (0+255),f,b
 12751  005558  3772               	rlcf	(??_sqrtf+2)& (0+255),f,b
 12752  00555A  3773               	rlcf	(??_sqrtf+3)& (0+255),f,b
 12753  00555C  2EE8               	decfsz	wreg,f,c
 12754  00555E  EFA9  F02A         	goto	u6565
 12755  005562  5170               	movf	??_sqrtf& (0+255),w,b
 12756  005564  2799               	addwf	sqrtf@ix& (0+255),f,b
 12757  005566  5171               	movf	(??_sqrtf+1)& (0+255),w,b
 12758  005568  239A               	addwfc	(sqrtf@ix+1)& (0+255),f,b
 12759  00556A  5172               	movf	(??_sqrtf+2)& (0+255),w,b
 12760  00556C  239B               	addwfc	(sqrtf@ix+2)& (0+255),f,b
 12761  00556E  5173               	movf	(??_sqrtf+3)& (0+255),w,b
 12762  005570  239C               	addwfc	(sqrtf@ix+3)& (0+255),f,b
 12763  005572                     
 12764                           ; BSR set to: 0
 12765  005572  C099  F081         	movff	sqrtf@ix,sqrtf@__xc8_float_word
 12766  005576  C09A  F082         	movff	sqrtf@ix+1,sqrtf@__xc8_float_word+1
 12767  00557A  C09B  F083         	movff	sqrtf@ix+2,sqrtf@__xc8_float_word+2
 12768  00557E  C09C  F084         	movff	sqrtf@ix+3,sqrtf@__xc8_float_word+3
 12769  005582                     
 12770                           ; BSR set to: 0
 12771  005582  C081  F08D         	movff	sqrtf@__xc8_float_word,sqrtf@z
 12772  005586  C082  F08E         	movff	sqrtf@__xc8_float_word+1,sqrtf@z+1
 12773  00558A  C083  F08F         	movff	sqrtf@__xc8_float_word+2,sqrtf@z+2
 12774  00558E  C084  F090         	movff	sqrtf@__xc8_float_word+3,sqrtf@z+3
 12775  005592                     
 12776                           ; BSR set to: 0
 12777  005592  C08D  F06C         	movff	sqrtf@z,?_sqrtf
 12778  005596  C08E  F06D         	movff	sqrtf@z+1,?_sqrtf+1
 12779  00559A  C08F  F06E         	movff	sqrtf@z+2,?_sqrtf+2
 12780  00559E  C090  F06F         	movff	sqrtf@z+3,?_sqrtf+3
 12781  0055A2                     l1363:
 12782  0055A2  0012               	return		;funcret
 12783  0055A4                     __end_of_sqrtf:
 12784                           	callstack 0
 12785                           
 12786 ;; *************** function _nanf *****************
 12787 ;; Defined at:
 12788 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nanf.c"
 12789 ;; Parameters:    Size  Location     Type
 12790 ;;  s               2    0[COMRAM] PTR const unsigned char 
 12791 ;;		 -> STR_24(1), 
 12792 ;; Auto vars:     Size  Location     Type
 12793 ;;  u               4    4[COMRAM] struct .
 12794 ;; Return value:  Size  Location     Type
 12795 ;;                  4    0[COMRAM] float 
 12796 ;; Registers used:
 12797 ;;		wreg, status,2
 12798 ;; Tracked objects:
 12799 ;;		On entry : 0/0
 12800 ;;		On exit  : 0/0
 12801 ;;		Unchanged: 0/0
 12802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12803 ;;      Params:         4       0       0       0       0       0       0       0       0
 12804 ;;      Locals:         4       0       0       0       0       0       0       0       0
 12805 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12806 ;;      Totals:         8       0       0       0       0       0       0       0       0
 12807 ;;Total ram usage:        8 bytes
 12808 ;; Hardware stack levels used:    1
 12809 ;; This function calls:
 12810 ;;		Nothing
 12811 ;; This function is called by:
 12812 ;;		_sqrtf
 12813 ;; This function uses a non-reentrant model
 12814 ;;
 12815                           
 12816                           	psect	text33
 12817  007CE4                     __ptext33:
 12818                           	callstack 0
 12819  007CE4                     _nanf:
 12820                           	callstack 27
 12821  007CE4  0EFF               	movlw	255
 12822  007CE6  6E05               	movwf	nanf@u^0,c
 12823  007CE8  0EFF               	movlw	255
 12824  007CEA  6E06               	movwf	(nanf@u+1)^0,c
 12825  007CEC  0EFF               	movlw	255
 12826  007CEE  6E07               	movwf	(nanf@u+2)^0,c
 12827  007CF0  0E7F               	movlw	127
 12828  007CF2  6E08               	movwf	(nanf@u+3)^0,c
 12829  007CF4  C005  F001         	movff	nanf@u,?_nanf
 12830  007CF8  C006  F002         	movff	nanf@u+1,?_nanf+1
 12831  007CFC  C007  F003         	movff	nanf@u+2,?_nanf+2
 12832  007D00  C008  F004         	movff	nanf@u+3,?_nanf+3
 12833  007D04  0012               	return		;funcret
 12834  007D06                     __end_of_nanf:
 12835                           	callstack 0
 12836                           
 12837 ;; *************** function ___flge *****************
 12838 ;; Defined at:
 12839 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\flge.c"
 12840 ;; Parameters:    Size  Location     Type
 12841 ;;  ff1             4    0[BANK0 ] float 
 12842 ;;  ff2             4    4[BANK0 ] float 
 12843 ;; Auto vars:     Size  Location     Type
 12844 ;;		None
 12845 ;; Return value:  Size  Location     Type
 12846 ;;		None               void
 12847 ;; Registers used:
 12848 ;;		wreg, status,2, status,0
 12849 ;; Tracked objects:
 12850 ;;		On entry : 0/0
 12851 ;;		On exit  : 0/0
 12852 ;;		Unchanged: 0/0
 12853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12854 ;;      Params:         0       8       0       0       0       0       0       0       0
 12855 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12856 ;;      Temps:          0       4       0       0       0       0       0       0       0
 12857 ;;      Totals:         0      12       0       0       0       0       0       0       0
 12858 ;;Total ram usage:       12 bytes
 12859 ;; Hardware stack levels used:    1
 12860 ;; This function calls:
 12861 ;;		Nothing
 12862 ;; This function is called by:
 12863 ;;		_efgtoa
 12864 ;;		_powf
 12865 ;;		_sqrtf
 12866 ;; This function uses a non-reentrant model
 12867 ;;
 12868                           
 12869                           	psect	text34
 12870  006ECA                     __ptext34:
 12871                           	callstack 0
 12872  006ECA                     ___flge:
 12873                           	callstack 26
 12874  006ECA  0E00               	movlw	0
 12875  006ECC  0100               	movlb	0	; () banked
 12876  006ECE  1560               	andwf	___flge@ff1& (0+255),w,b
 12877  006ED0  6F68               	movwf	??___flge& (0+255),b
 12878  006ED2  0E00               	movlw	0
 12879  006ED4  1561               	andwf	(___flge@ff1+1)& (0+255),w,b
 12880  006ED6  6F69               	movwf	(??___flge+1)& (0+255),b
 12881  006ED8  0E80               	movlw	128
 12882  006EDA  1562               	andwf	(___flge@ff1+2)& (0+255),w,b
 12883  006EDC  6F6A               	movwf	(??___flge+2)& (0+255),b
 12884  006EDE  0E7F               	movlw	127
 12885  006EE0  1563               	andwf	(___flge@ff1+3)& (0+255),w,b
 12886  006EE2  6F6B               	movwf	(??___flge+3)& (0+255),b
 12887  006EE4  5168               	movf	??___flge& (0+255),w,b
 12888  006EE6  1169               	iorwf	(??___flge+1)& (0+255),w,b
 12889  006EE8  116A               	iorwf	(??___flge+2)& (0+255),w,b
 12890  006EEA  116B               	iorwf	(??___flge+3)& (0+255),w,b
 12891  006EEC  A4D8               	btfss	status,2,c
 12892  006EEE  EF7B  F037         	goto	u4901
 12893  006EF2  EF7D  F037         	goto	u4900
 12894  006EF6                     u4901:
 12895  006EF6  EF85  F037         	goto	l4470
 12896  006EFA                     u4900:
 12897  006EFA                     
 12898                           ; BSR set to: 0
 12899  006EFA  0E00               	movlw	0
 12900  006EFC  6F60               	movwf	___flge@ff1& (0+255),b
 12901  006EFE  0E00               	movlw	0
 12902  006F00  6F61               	movwf	(___flge@ff1+1)& (0+255),b
 12903  006F02  0E00               	movlw	0
 12904  006F04  6F62               	movwf	(___flge@ff1+2)& (0+255),b
 12905  006F06  0E00               	movlw	0
 12906  006F08  6F63               	movwf	(___flge@ff1+3)& (0+255),b
 12907  006F0A                     l4470:
 12908                           
 12909                           ; BSR set to: 0
 12910  006F0A  0E00               	movlw	0
 12911  006F0C  1564               	andwf	___flge@ff2& (0+255),w,b
 12912  006F0E  6F68               	movwf	??___flge& (0+255),b
 12913  006F10  0E00               	movlw	0
 12914  006F12  1565               	andwf	(___flge@ff2+1)& (0+255),w,b
 12915  006F14  6F69               	movwf	(??___flge+1)& (0+255),b
 12916  006F16  0E80               	movlw	128
 12917  006F18  1566               	andwf	(___flge@ff2+2)& (0+255),w,b
 12918  006F1A  6F6A               	movwf	(??___flge+2)& (0+255),b
 12919  006F1C  0E7F               	movlw	127
 12920  006F1E  1567               	andwf	(___flge@ff2+3)& (0+255),w,b
 12921  006F20  6F6B               	movwf	(??___flge+3)& (0+255),b
 12922  006F22  5168               	movf	??___flge& (0+255),w,b
 12923  006F24  1169               	iorwf	(??___flge+1)& (0+255),w,b
 12924  006F26  116A               	iorwf	(??___flge+2)& (0+255),w,b
 12925  006F28  116B               	iorwf	(??___flge+3)& (0+255),w,b
 12926  006F2A  A4D8               	btfss	status,2,c
 12927  006F2C  EF9A  F037         	goto	u4911
 12928  006F30  EF9C  F037         	goto	u4910
 12929  006F34                     u4911:
 12930  006F34  EFA4  F037         	goto	l4474
 12931  006F38                     u4910:
 12932  006F38                     
 12933                           ; BSR set to: 0
 12934  006F38  0E00               	movlw	0
 12935  006F3A  6F64               	movwf	___flge@ff2& (0+255),b
 12936  006F3C  0E00               	movlw	0
 12937  006F3E  6F65               	movwf	(___flge@ff2+1)& (0+255),b
 12938  006F40  0E00               	movlw	0
 12939  006F42  6F66               	movwf	(___flge@ff2+2)& (0+255),b
 12940  006F44  0E00               	movlw	0
 12941  006F46  6F67               	movwf	(___flge@ff2+3)& (0+255),b
 12942  006F48                     l4474:
 12943                           
 12944                           ; BSR set to: 0
 12945  006F48  AF63               	btfss	(___flge@ff1+3)& (0+255),7,b
 12946  006F4A  EFA9  F037         	goto	u4921
 12947  006F4E  EFAB  F037         	goto	u4920
 12948  006F52                     u4921:
 12949  006F52  EFB4  F037         	goto	l4478
 12950  006F56                     u4920:
 12951  006F56                     
 12952                           ; BSR set to: 0
 12953  006F56  6D60               	negf	___flge@ff1& (0+255),b
 12954  006F58  1F61               	comf	(___flge@ff1+1)& (0+255),f,b
 12955  006F5A  B0D8               	btfsc	status,0,c
 12956  006F5C  2B61               	incf	(___flge@ff1+1)& (0+255),f,b
 12957  006F5E  1F62               	comf	(___flge@ff1+2)& (0+255),f,b
 12958  006F60  B0D8               	btfsc	status,0,c
 12959  006F62  2B62               	incf	(___flge@ff1+2)& (0+255),f,b
 12960  006F64  0E80               	movlw	128
 12961  006F66  5763               	subfwb	(___flge@ff1+3)& (0+255),f,b
 12962  006F68                     l4478:
 12963                           
 12964                           ; BSR set to: 0
 12965  006F68  AF67               	btfss	(___flge@ff2+3)& (0+255),7,b
 12966  006F6A  EFB9  F037         	goto	u4931
 12967  006F6E  EFBB  F037         	goto	u4930
 12968  006F72                     u4931:
 12969  006F72  EFC4  F037         	goto	l406
 12970  006F76                     u4930:
 12971  006F76                     
 12972                           ; BSR set to: 0
 12973  006F76  6D64               	negf	___flge@ff2& (0+255),b
 12974  006F78  1F65               	comf	(___flge@ff2+1)& (0+255),f,b
 12975  006F7A  B0D8               	btfsc	status,0,c
 12976  006F7C  2B65               	incf	(___flge@ff2+1)& (0+255),f,b
 12977  006F7E  1F66               	comf	(___flge@ff2+2)& (0+255),f,b
 12978  006F80  B0D8               	btfsc	status,0,c
 12979  006F82  2B66               	incf	(___flge@ff2+2)& (0+255),f,b
 12980  006F84  0E80               	movlw	128
 12981  006F86  5767               	subfwb	(___flge@ff2+3)& (0+255),f,b
 12982  006F88                     l406:
 12983                           
 12984                           ; BSR set to: 0
 12985  006F88  0E00               	movlw	0
 12986  006F8A  1B60               	xorwf	___flge@ff1& (0+255),f,b
 12987  006F8C  0E00               	movlw	0
 12988  006F8E  1B61               	xorwf	(___flge@ff1+1)& (0+255),f,b
 12989  006F90  0E00               	movlw	0
 12990  006F92  1B62               	xorwf	(___flge@ff1+2)& (0+255),f,b
 12991  006F94  0E80               	movlw	128
 12992  006F96  1B63               	xorwf	(___flge@ff1+3)& (0+255),f,b
 12993  006F98  0E00               	movlw	0
 12994  006F9A  1B64               	xorwf	___flge@ff2& (0+255),f,b
 12995  006F9C  0E00               	movlw	0
 12996  006F9E  1B65               	xorwf	(___flge@ff2+1)& (0+255),f,b
 12997  006FA0  0E00               	movlw	0
 12998  006FA2  1B66               	xorwf	(___flge@ff2+2)& (0+255),f,b
 12999  006FA4  0E80               	movlw	128
 13000  006FA6  1B67               	xorwf	(___flge@ff2+3)& (0+255),f,b
 13001  006FA8  5164               	movf	___flge@ff2& (0+255),w,b
 13002  006FAA  5D60               	subwf	___flge@ff1& (0+255),w,b
 13003  006FAC  5165               	movf	(___flge@ff2+1)& (0+255),w,b
 13004  006FAE  5961               	subwfb	(___flge@ff1+1)& (0+255),w,b
 13005  006FB0  5166               	movf	(___flge@ff2+2)& (0+255),w,b
 13006  006FB2  5962               	subwfb	(___flge@ff1+2)& (0+255),w,b
 13007  006FB4  5167               	movf	(___flge@ff2+3)& (0+255),w,b
 13008  006FB6  5963               	subwfb	(___flge@ff1+3)& (0+255),w,b
 13009  006FB8  B0D8               	btfsc	status,0,c
 13010  006FBA  EFE1  F037         	goto	u4941
 13011  006FBE  EFE3  F037         	goto	u4940
 13012  006FC2                     u4941:
 13013  006FC2  EFE6  F037         	goto	l4484
 13014  006FC6                     u4940:
 13015  006FC6                     
 13016                           ; BSR set to: 0
 13017  006FC6  90D8               	bcf	status,0,c
 13018  006FC8  EFE7  F037         	goto	l411
 13019  006FCC                     l4484:
 13020                           
 13021                           ; BSR set to: 0
 13022  006FCC  80D8               	bsf	status,0,c
 13023  006FCE                     l411:
 13024                           
 13025                           ; BSR set to: 0
 13026  006FCE  0012               	return		;funcret
 13027  006FD0                     __end_of___flge:
 13028                           	callstack 0
 13029                           
 13030 ;; *************** function _scalbnf *****************
 13031 ;; Defined at:
 13032 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\scalbnf.c"
 13033 ;; Parameters:    Size  Location     Type
 13034 ;;  x               4   39[COMRAM] float 
 13035 ;;  n               2   43[COMRAM] int 
 13036 ;; Auto vars:     Size  Location     Type
 13037 ;;  y               4   53[COMRAM] float 
 13038 ;;  u               4   49[COMRAM] struct .
 13039 ;; Return value:  Size  Location     Type
 13040 ;;                  4   39[COMRAM] float 
 13041 ;; Registers used:
 13042 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13043 ;; Tracked objects:
 13044 ;;		On entry : 0/0
 13045 ;;		On exit  : 0/0
 13046 ;;		Unchanged: 0/0
 13047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13048 ;;      Params:         6       0       0       0       0       0       0       0       0
 13049 ;;      Locals:         8       0       0       0       0       0       0       0       0
 13050 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13051 ;;      Totals:        18       0       0       0       0       0       0       0       0
 13052 ;;Total ram usage:       18 bytes
 13053 ;; Hardware stack levels used:    1
 13054 ;; Hardware stack levels required when called:    1
 13055 ;; This function calls:
 13056 ;;		___flmul
 13057 ;; This function is called by:
 13058 ;;		_powf
 13059 ;; This function uses a non-reentrant model
 13060 ;;
 13061                           
 13062                           	psect	text35
 13063  00604C                     __ptext35:
 13064                           	callstack 0
 13065  00604C                     _scalbnf:
 13066                           	callstack 27
 13067  00604C  C028  F036         	movff	scalbnf@x,scalbnf@y
 13068  006050  C029  F037         	movff	scalbnf@x+1,scalbnf@y+1
 13069  006054  C02A  F038         	movff	scalbnf@x+2,scalbnf@y+2
 13070  006058  C02B  F039         	movff	scalbnf@x+3,scalbnf@y+3
 13071  00605C  BE2D               	btfsc	(scalbnf@n+1)^0,7,c
 13072  00605E  EF3A  F030         	goto	u6571
 13073  006062  502D               	movf	(scalbnf@n+1)^0,w,c
 13074  006064  E109               	bnz	u6570
 13075  006066  0E80               	movlw	128
 13076  006068  5C2C               	subwf	scalbnf@n^0,w,c
 13077  00606A  A0D8               	btfss	status,0,c
 13078  00606C  EF3A  F030         	goto	u6571
 13079  006070  EF3C  F030         	goto	u6570
 13080  006074                     u6571:
 13081  006074  EF9A  F030         	goto	l5360
 13082  006078                     u6570:
 13083  006078  C036  F00F         	movff	scalbnf@y,___flmul@b
 13084  00607C  C037  F010         	movff	scalbnf@y+1,___flmul@b+1
 13085  006080  C038  F011         	movff	scalbnf@y+2,___flmul@b+2
 13086  006084  C039  F012         	movff	scalbnf@y+3,___flmul@b+3
 13087  006088  0E00               	movlw	0
 13088  00608A  6E13               	movwf	___flmul@a^0,c
 13089  00608C  0E00               	movlw	0
 13090  00608E  6E14               	movwf	(___flmul@a+1)^0,c
 13091  006090  0E00               	movlw	0
 13092  006092  6E15               	movwf	(___flmul@a+2)^0,c
 13093  006094  0E7F               	movlw	127
 13094  006096  6E16               	movwf	(___flmul@a+3)^0,c
 13095  006098  ECD2  F02A         	call	___flmul	;wreg free
 13096  00609C  C00F  F036         	movff	?___flmul,scalbnf@y
 13097  0060A0  C010  F037         	movff	?___flmul+1,scalbnf@y+1
 13098  0060A4  C011  F038         	movff	?___flmul+2,scalbnf@y+2
 13099  0060A8  C012  F039         	movff	?___flmul+3,scalbnf@y+3
 13100  0060AC  0E81               	movlw	129
 13101  0060AE  262C               	addwf	scalbnf@n^0,f,c
 13102  0060B0  0EFF               	movlw	255
 13103  0060B2  222D               	addwfc	(scalbnf@n+1)^0,f,c
 13104  0060B4  BE2D               	btfsc	(scalbnf@n+1)^0,7,c
 13105  0060B6  EF66  F030         	goto	u6581
 13106  0060BA  502D               	movf	(scalbnf@n+1)^0,w,c
 13107  0060BC  E109               	bnz	u6580
 13108  0060BE  0E80               	movlw	128
 13109  0060C0  5C2C               	subwf	scalbnf@n^0,w,c
 13110  0060C2  A0D8               	btfss	status,0,c
 13111  0060C4  EF66  F030         	goto	u6581
 13112  0060C8  EF68  F030         	goto	u6580
 13113  0060CC                     u6581:
 13114  0060CC  EF04  F031         	goto	l5376
 13115  0060D0                     u6580:
 13116  0060D0  C036  F00F         	movff	scalbnf@y,___flmul@b
 13117  0060D4  C037  F010         	movff	scalbnf@y+1,___flmul@b+1
 13118  0060D8  C038  F011         	movff	scalbnf@y+2,___flmul@b+2
 13119  0060DC  C039  F012         	movff	scalbnf@y+3,___flmul@b+3
 13120  0060E0  0E00               	movlw	0
 13121  0060E2  6E13               	movwf	___flmul@a^0,c
 13122  0060E4  0E00               	movlw	0
 13123  0060E6  6E14               	movwf	(___flmul@a+1)^0,c
 13124  0060E8  0E00               	movlw	0
 13125  0060EA  6E15               	movwf	(___flmul@a+2)^0,c
 13126  0060EC  0E7F               	movlw	127
 13127  0060EE  6E16               	movwf	(___flmul@a+3)^0,c
 13128  0060F0  ECD2  F02A         	call	___flmul	;wreg free
 13129  0060F4  C00F  F036         	movff	?___flmul,scalbnf@y
 13130  0060F8  C010  F037         	movff	?___flmul+1,scalbnf@y+1
 13131  0060FC  C011  F038         	movff	?___flmul+2,scalbnf@y+2
 13132  006100  C012  F039         	movff	?___flmul+3,scalbnf@y+3
 13133  006104  0E81               	movlw	129
 13134  006106  262C               	addwf	scalbnf@n^0,f,c
 13135  006108  0EFF               	movlw	255
 13136  00610A  222D               	addwfc	(scalbnf@n+1)^0,f,c
 13137  00610C  BE2D               	btfsc	(scalbnf@n+1)^0,7,c
 13138  00610E  EF92  F030         	goto	u6591
 13139  006112  502D               	movf	(scalbnf@n+1)^0,w,c
 13140  006114  E109               	bnz	u6590
 13141  006116  0E80               	movlw	128
 13142  006118  5C2C               	subwf	scalbnf@n^0,w,c
 13143  00611A  A0D8               	btfss	status,0,c
 13144  00611C  EF92  F030         	goto	u6591
 13145  006120  EF94  F030         	goto	u6590
 13146  006124                     u6591:
 13147  006124  EF04  F031         	goto	l5376
 13148  006128                     u6590:
 13149  006128  0E00               	movlw	0
 13150  00612A  6E2D               	movwf	(scalbnf@n+1)^0,c
 13151  00612C  0E7F               	movlw	127
 13152  00612E  6E2C               	movwf	scalbnf@n^0,c
 13153  006130  EF04  F031         	goto	l5376
 13154  006134                     l5360:
 13155  006134  AE2D               	btfss	(scalbnf@n+1)^0,7,c
 13156  006136  EFA6  F030         	goto	u6601
 13157  00613A  0E82               	movlw	130
 13158  00613C  5C2C               	subwf	scalbnf@n^0,w,c
 13159  00613E  0EFF               	movlw	255
 13160  006140  582D               	subwfb	(scalbnf@n+1)^0,w,c
 13161  006142  B0D8               	btfsc	status,0,c
 13162  006144  EFA6  F030         	goto	u6601
 13163  006148  EFA8  F030         	goto	u6600
 13164  00614C                     u6601:
 13165  00614C  EF04  F031         	goto	l5376
 13166  006150                     u6600:
 13167  006150  C036  F00F         	movff	scalbnf@y,___flmul@b
 13168  006154  C037  F010         	movff	scalbnf@y+1,___flmul@b+1
 13169  006158  C038  F011         	movff	scalbnf@y+2,___flmul@b+2
 13170  00615C  C039  F012         	movff	scalbnf@y+3,___flmul@b+3
 13171  006160  0E00               	movlw	0
 13172  006162  6E13               	movwf	___flmul@a^0,c
 13173  006164  0E00               	movlw	0
 13174  006166  6E14               	movwf	(___flmul@a+1)^0,c
 13175  006168  0E80               	movlw	128
 13176  00616A  6E15               	movwf	(___flmul@a+2)^0,c
 13177  00616C  0E0C               	movlw	12
 13178  00616E  6E16               	movwf	(___flmul@a+3)^0,c
 13179  006170  ECD2  F02A         	call	___flmul	;wreg free
 13180  006174  C00F  F036         	movff	?___flmul,scalbnf@y
 13181  006178  C010  F037         	movff	?___flmul+1,scalbnf@y+1
 13182  00617C  C011  F038         	movff	?___flmul+2,scalbnf@y+2
 13183  006180  C012  F039         	movff	?___flmul+3,scalbnf@y+3
 13184  006184  0E66               	movlw	102
 13185  006186  262C               	addwf	scalbnf@n^0,f,c
 13186  006188  0E00               	movlw	0
 13187  00618A  222D               	addwfc	(scalbnf@n+1)^0,f,c
 13188  00618C  AE2D               	btfss	(scalbnf@n+1)^0,7,c
 13189  00618E  EFD2  F030         	goto	u6611
 13190  006192  0E82               	movlw	130
 13191  006194  5C2C               	subwf	scalbnf@n^0,w,c
 13192  006196  0EFF               	movlw	255
 13193  006198  582D               	subwfb	(scalbnf@n+1)^0,w,c
 13194  00619A  B0D8               	btfsc	status,0,c
 13195  00619C  EFD2  F030         	goto	u6611
 13196  0061A0  EFD4  F030         	goto	u6610
 13197  0061A4                     u6611:
 13198  0061A4  EF04  F031         	goto	l5376
 13199  0061A8                     u6610:
 13200  0061A8  C036  F00F         	movff	scalbnf@y,___flmul@b
 13201  0061AC  C037  F010         	movff	scalbnf@y+1,___flmul@b+1
 13202  0061B0  C038  F011         	movff	scalbnf@y+2,___flmul@b+2
 13203  0061B4  C039  F012         	movff	scalbnf@y+3,___flmul@b+3
 13204  0061B8  0E00               	movlw	0
 13205  0061BA  6E13               	movwf	___flmul@a^0,c
 13206  0061BC  0E00               	movlw	0
 13207  0061BE  6E14               	movwf	(___flmul@a+1)^0,c
 13208  0061C0  0E80               	movlw	128
 13209  0061C2  6E15               	movwf	(___flmul@a+2)^0,c
 13210  0061C4  0E0C               	movlw	12
 13211  0061C6  6E16               	movwf	(___flmul@a+3)^0,c
 13212  0061C8  ECD2  F02A         	call	___flmul	;wreg free
 13213  0061CC  C00F  F036         	movff	?___flmul,scalbnf@y
 13214  0061D0  C010  F037         	movff	?___flmul+1,scalbnf@y+1
 13215  0061D4  C011  F038         	movff	?___flmul+2,scalbnf@y+2
 13216  0061D8  C012  F039         	movff	?___flmul+3,scalbnf@y+3
 13217  0061DC  0E66               	movlw	102
 13218  0061DE  262C               	addwf	scalbnf@n^0,f,c
 13219  0061E0  0E00               	movlw	0
 13220  0061E2  222D               	addwfc	(scalbnf@n+1)^0,f,c
 13221  0061E4  AE2D               	btfss	(scalbnf@n+1)^0,7,c
 13222  0061E6  EFFE  F030         	goto	u6621
 13223  0061EA  0E82               	movlw	130
 13224  0061EC  5C2C               	subwf	scalbnf@n^0,w,c
 13225  0061EE  0EFF               	movlw	255
 13226  0061F0  582D               	subwfb	(scalbnf@n+1)^0,w,c
 13227  0061F2  B0D8               	btfsc	status,0,c
 13228  0061F4  EFFE  F030         	goto	u6621
 13229  0061F8  EF00  F031         	goto	u6620
 13230  0061FC                     u6621:
 13231  0061FC  EF04  F031         	goto	l5376
 13232  006200                     u6620:
 13233  006200  0EFF               	movlw	255
 13234  006202  6E2D               	movwf	(scalbnf@n+1)^0,c
 13235  006204  0E82               	movlw	130
 13236  006206  6E2C               	movwf	scalbnf@n^0,c
 13237  006208                     l5376:
 13238  006208  0E7F               	movlw	127
 13239  00620A  242C               	addwf	scalbnf@n^0,w,c
 13240  00620C  6E2E               	movwf	??_scalbnf^0,c
 13241  00620E  0E00               	movlw	0
 13242  006210  202D               	addwfc	(scalbnf@n+1)^0,w,c
 13243  006212  6E2F               	movwf	(??_scalbnf+1)^0,c
 13244  006214  6A30               	clrf	(??_scalbnf+2)^0,c
 13245  006216  6A31               	clrf	(??_scalbnf+3)^0,c
 13246  006218  0E17               	movlw	23
 13247  00621A                     u6635:
 13248  00621A  90D8               	bcf	status,0,c
 13249  00621C  362E               	rlcf	??_scalbnf^0,f,c
 13250  00621E  362F               	rlcf	(??_scalbnf+1)^0,f,c
 13251  006220  3630               	rlcf	(??_scalbnf+2)^0,f,c
 13252  006222  3631               	rlcf	(??_scalbnf+3)^0,f,c
 13253  006224  2EE8               	decfsz	wreg,f,c
 13254  006226  EF0D  F031         	goto	u6635
 13255  00622A  C02E  F032         	movff	??_scalbnf,scalbnf@u
 13256  00622E  C02F  F033         	movff	??_scalbnf+1,scalbnf@u+1
 13257  006232  C030  F034         	movff	??_scalbnf+2,scalbnf@u+2
 13258  006236  C031  F035         	movff	??_scalbnf+3,scalbnf@u+3
 13259  00623A  C032  F00F         	movff	scalbnf@u,___flmul@b
 13260  00623E  C033  F010         	movff	scalbnf@u+1,___flmul@b+1
 13261  006242  C034  F011         	movff	scalbnf@u+2,___flmul@b+2
 13262  006246  C035  F012         	movff	scalbnf@u+3,___flmul@b+3
 13263  00624A  C036  F013         	movff	scalbnf@y,___flmul@a
 13264  00624E  C037  F014         	movff	scalbnf@y+1,___flmul@a+1
 13265  006252  C038  F015         	movff	scalbnf@y+2,___flmul@a+2
 13266  006256  C039  F016         	movff	scalbnf@y+3,___flmul@a+3
 13267  00625A  ECD2  F02A         	call	___flmul	;wreg free
 13268  00625E  C00F  F028         	movff	?___flmul,scalbnf@x
 13269  006262  C010  F029         	movff	?___flmul+1,scalbnf@x+1
 13270  006266  C011  F02A         	movff	?___flmul+2,scalbnf@x+2
 13271  00626A  C012  F02B         	movff	?___flmul+3,scalbnf@x+3
 13272  00626E  C028  F028         	movff	scalbnf@x,?_scalbnf
 13273  006272  C029  F029         	movff	scalbnf@x+1,?_scalbnf+1
 13274  006276  C02A  F02A         	movff	scalbnf@x+2,?_scalbnf+2
 13275  00627A  C02B  F02B         	movff	scalbnf@x+3,?_scalbnf+3
 13276  00627E  0012               	return		;funcret
 13277  006280                     __end_of_scalbnf:
 13278                           	callstack 0
 13279                           
 13280 ;; *************** function _fabsf *****************
 13281 ;; Defined at:
 13282 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fabsf.c"
 13283 ;; Parameters:    Size  Location     Type
 13284 ;;  x               4    0[COMRAM] float 
 13285 ;; Auto vars:     Size  Location     Type
 13286 ;;  u               4    4[COMRAM] struct .
 13287 ;; Return value:  Size  Location     Type
 13288 ;;                  4    0[COMRAM] float 
 13289 ;; Registers used:
 13290 ;;		status,2, status,0
 13291 ;; Tracked objects:
 13292 ;;		On entry : 0/0
 13293 ;;		On exit  : 0/0
 13294 ;;		Unchanged: 0/0
 13295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13296 ;;      Params:         4       0       0       0       0       0       0       0       0
 13297 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13298 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13299 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13300 ;;Total ram usage:        8 bytes
 13301 ;; Hardware stack levels used:    1
 13302 ;; This function calls:
 13303 ;;		Nothing
 13304 ;; This function is called by:
 13305 ;;		_powf
 13306 ;; This function uses a non-reentrant model
 13307 ;;
 13308                           
 13309                           	psect	text36
 13310  007C10                     __ptext36:
 13311                           	callstack 0
 13312  007C10                     _fabsf:
 13313                           	callstack 28
 13314  007C10  C200  F005         	movff	fabsf@F465,fabsf@u
 13315  007C14  C201  F006         	movff	fabsf@F465+1,fabsf@u+1
 13316  007C18  C202  F007         	movff	fabsf@F465+2,fabsf@u+2
 13317  007C1C  C203  F008         	movff	fabsf@F465+3,fabsf@u+3
 13318  007C20  C001  F005         	movff	fabsf@x,fabsf@u
 13319  007C24  C002  F006         	movff	fabsf@x+1,fabsf@u+1
 13320  007C28  C003  F007         	movff	fabsf@x+2,fabsf@u+2
 13321  007C2C  C004  F008         	movff	fabsf@x+3,fabsf@u+3
 13322  007C30  9E08               	bcf	(fabsf@u+3)^0,7,c
 13323  007C32  C005  F001         	movff	fabsf@u,?_fabsf
 13324  007C36  C006  F002         	movff	fabsf@u+1,?_fabsf+1
 13325  007C3A  C007  F003         	movff	fabsf@u+2,?_fabsf+2
 13326  007C3E  C008  F004         	movff	fabsf@u+3,?_fabsf+3
 13327  007C42  0012               	return		;funcret
 13328  007C44                     __end_of_fabsf:
 13329                           	callstack 0
 13330                           
 13331 ;; *************** function ___flneg *****************
 13332 ;; Defined at:
 13333 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\flneg.c"
 13334 ;; Parameters:    Size  Location     Type
 13335 ;;  f1              4    0[COMRAM] float 
 13336 ;; Auto vars:     Size  Location     Type
 13337 ;;		None
 13338 ;; Return value:  Size  Location     Type
 13339 ;;                  4    0[COMRAM] float 
 13340 ;; Registers used:
 13341 ;;		wreg, status,2, status,0
 13342 ;; Tracked objects:
 13343 ;;		On entry : 0/0
 13344 ;;		On exit  : 0/0
 13345 ;;		Unchanged: 0/0
 13346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13347 ;;      Params:         4       0       0       0       0       0       0       0       0
 13348 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13349 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13350 ;;      Totals:         4       0       0       0       0       0       0       0       0
 13351 ;;Total ram usage:        4 bytes
 13352 ;; Hardware stack levels used:    1
 13353 ;; This function calls:
 13354 ;;		Nothing
 13355 ;; This function is called by:
 13356 ;;		_efgtoa
 13357 ;;		_powf
 13358 ;; This function uses a non-reentrant model
 13359 ;;
 13360                           
 13361                           	psect	text37
 13362  007BA2                     __ptext37:
 13363                           	callstack 0
 13364  007BA2                     ___flneg:
 13365                           	callstack 26
 13366  007BA2  5001               	movf	___flneg@f1^0,w,c
 13367  007BA4  1002               	iorwf	(___flneg@f1+1)^0,w,c
 13368  007BA6  1003               	iorwf	(___flneg@f1+2)^0,w,c
 13369  007BA8  1004               	iorwf	(___flneg@f1+3)^0,w,c
 13370  007BAA  B4D8               	btfsc	status,2,c
 13371  007BAC  EFDA  F03D         	goto	u4951
 13372  007BB0  EFDC  F03D         	goto	u4950
 13373  007BB4                     u4951:
 13374  007BB4  EFE4  F03D         	goto	l4492
 13375  007BB8                     u4950:
 13376  007BB8  0E00               	movlw	0
 13377  007BBA  1A01               	xorwf	___flneg@f1^0,f,c
 13378  007BBC  0E00               	movlw	0
 13379  007BBE  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 13380  007BC0  0E00               	movlw	0
 13381  007BC2  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 13382  007BC4  0E80               	movlw	128
 13383  007BC6  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 13384  007BC8                     l4492:
 13385  007BC8  C001  F001         	movff	___flneg@f1,?___flneg
 13386  007BCC  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 13387  007BD0  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 13388  007BD4  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 13389  007BD8  0012               	return		;funcret
 13390  007BDA                     __end_of___flneg:
 13391                           	callstack 0
 13392                           
 13393 ;; *************** function _logf *****************
 13394 ;; Defined at:
 13395 ;;		line 29 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\logf.c"
 13396 ;; Parameters:    Size  Location     Type
 13397 ;;  x               4    0[BANK0 ] float 
 13398 ;; Auto vars:     Size  Location     Type
 13399 ;;  ix              4   72[BANK0 ] unsigned long 
 13400 ;;  f               4   68[BANK0 ] float 
 13401 ;;  u               4   64[BANK0 ] struct .
 13402 ;;  w               4   56[BANK0 ] float 
 13403 ;;  z               4   52[BANK0 ] float 
 13404 ;;  s               4   48[BANK0 ] float 
 13405 ;;  dk              4   44[BANK0 ] float 
 13406 ;;  hfsq            4   40[BANK0 ] float 
 13407 ;;  t2              4   18[BANK0 ] float 
 13408 ;;  t1              4   14[BANK0 ] float 
 13409 ;;  R               4   10[BANK0 ] float 
 13410 ;;  k               2   38[BANK0 ] int 
 13411 ;; Return value:  Size  Location     Type
 13412 ;;                  4    0[BANK0 ] float 
 13413 ;; Registers used:
 13414 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13415 ;; Tracked objects:
 13416 ;;		On entry : 0/0
 13417 ;;		On exit  : 0/0
 13418 ;;		Unchanged: 0/0
 13419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13420 ;;      Params:         0       4       0       0       0       0       0       0       0
 13421 ;;      Locals:         0      66       0       0       0       0       0       0       0
 13422 ;;      Temps:          0       6       0       0       0       0       0       0       0
 13423 ;;      Totals:         0      76       0       0       0       0       0       0       0
 13424 ;;Total ram usage:       76 bytes
 13425 ;; Hardware stack levels used:    1
 13426 ;; Hardware stack levels required when called:    2
 13427 ;; This function calls:
 13428 ;;		___fladd
 13429 ;;		___fldiv
 13430 ;;		___flmul
 13431 ;;		___flsub
 13432 ;;		___xxtofl
 13433 ;; This function is called by:
 13434 ;;		_gas_plot_log_scale
 13435 ;; This function uses a non-reentrant model
 13436 ;;
 13437                           
 13438                           	psect	text38
 13439  003FA0                     __ptext38:
 13440                           	callstack 0
 13441  003FA0                     _logf:
 13442                           	callstack 27
 13443  003FA0  C20C  F0A0         	movff	logf@F472,logf@u
 13444  003FA4  C20D  F0A1         	movff	logf@F472+1,logf@u+1
 13445  003FA8  C20E  F0A2         	movff	logf@F472+2,logf@u+2
 13446  003FAC  C20F  F0A3         	movff	logf@F472+3,logf@u+3
 13447  003FB0  C060  F0A0         	movff	logf@x,logf@u
 13448  003FB4  C061  F0A1         	movff	logf@x+1,logf@u+1
 13449  003FB8  C062  F0A2         	movff	logf@x+2,logf@u+2
 13450  003FBC  C063  F0A3         	movff	logf@x+3,logf@u+3
 13451  003FC0  C0A0  F0A8         	movff	logf@u,logf@ix
 13452  003FC4  C0A1  F0A9         	movff	logf@u+1,logf@ix+1
 13453  003FC8  C0A2  F0AA         	movff	logf@u+2,logf@ix+2
 13454  003FCC  C0A3  F0AB         	movff	logf@u+3,logf@ix+3
 13455  003FD0  0E00               	movlw	0
 13456  003FD2  0100               	movlb	0	; () banked
 13457  003FD4  6F87               	movwf	(logf@k+1)& (0+255),b
 13458  003FD6  0E00               	movlw	0
 13459  003FD8  6F86               	movwf	logf@k& (0+255),b
 13460  003FDA                     
 13461                           ; BSR set to: 0
 13462  003FDA  51AB               	movf	(logf@ix+3)& (0+255),w,b
 13463  003FDC  E109               	bnz	u6740
 13464  003FDE  0E80               	movlw	128
 13465  003FE0  5DAA               	subwf	(logf@ix+2)& (0+255),w,b
 13466  003FE2  A0D8               	btfss	status,0,c
 13467  003FE4  EFF6  F01F         	goto	u6741
 13468  003FE8  EFF8  F01F         	goto	u6740
 13469  003FEC                     u6741:
 13470  003FEC  EF16  F020         	goto	l5424
 13471  003FF0                     u6740:
 13472  003FF0                     
 13473                           ; BSR set to: 0
 13474  003FF0  C0A8  F064         	movff	logf@ix,??_logf
 13475  003FF4  C0A9  F065         	movff	logf@ix+1,??_logf+1
 13476  003FF8  C0AA  F066         	movff	logf@ix+2,??_logf+2
 13477  003FFC  C0AB  F067         	movff	logf@ix+3,??_logf+3
 13478  004000  0E20               	movlw	32
 13479  004002  EF08  F020         	goto	u6750
 13480  004006                     u6755:
 13481  004006  90D8               	bcf	status,0,c
 13482  004008  3367               	rrcf	(??_logf+3)& (0+255),f,b
 13483  00400A  3366               	rrcf	(??_logf+2)& (0+255),f,b
 13484  00400C  3365               	rrcf	(??_logf+1)& (0+255),f,b
 13485  00400E  3364               	rrcf	??_logf& (0+255),f,b
 13486  004010                     u6750:
 13487  004010  2EE8               	decfsz	wreg,f,c
 13488  004012  EF03  F020         	goto	u6755
 13489  004016  5164               	movf	??_logf& (0+255),w,b
 13490  004018  1165               	iorwf	(??_logf+1)& (0+255),w,b
 13491  00401A  1166               	iorwf	(??_logf+2)& (0+255),w,b
 13492  00401C  1167               	iorwf	(??_logf+3)& (0+255),w,b
 13493  00401E  B4D8               	btfsc	status,2,c
 13494  004020  EF14  F020         	goto	u6761
 13495  004024  EF16  F020         	goto	u6760
 13496  004028                     u6761:
 13497  004028  EFD9  F020         	goto	l5446
 13498  00402C                     u6760:
 13499  00402C                     l5424:
 13500                           
 13501                           ; BSR set to: 0
 13502  00402C  90D8               	bcf	status,0,c
 13503  00402E  35A8               	rlcf	logf@ix& (0+255),w,b
 13504  004030  6F64               	movwf	??_logf& (0+255),b
 13505  004032  35A9               	rlcf	(logf@ix+1)& (0+255),w,b
 13506  004034  6F65               	movwf	(??_logf+1)& (0+255),b
 13507  004036  35AA               	rlcf	(logf@ix+2)& (0+255),w,b
 13508  004038  6F66               	movwf	(??_logf+2)& (0+255),b
 13509  00403A  35AB               	rlcf	(logf@ix+3)& (0+255),w,b
 13510  00403C  6F67               	movwf	(??_logf+3)& (0+255),b
 13511  00403E  5164               	movf	??_logf& (0+255),w,b
 13512  004040  1165               	iorwf	(??_logf+1)& (0+255),w,b
 13513  004042  1166               	iorwf	(??_logf+2)& (0+255),w,b
 13514  004044  1167               	iorwf	(??_logf+3)& (0+255),w,b
 13515  004046  A4D8               	btfss	status,2,c
 13516  004048  EF28  F020         	goto	u6771
 13517  00404C  EF2A  F020         	goto	u6770
 13518  004050                     u6771:
 13519  004050  EF58  F020         	goto	l5430
 13520  004054                     u6770:
 13521  004054                     
 13522                           ; BSR set to: 0
 13523  004054  0E00               	movlw	0
 13524  004056  6E28               	movwf	___fldiv@b^0,c
 13525  004058  0E00               	movlw	0
 13526  00405A  6E29               	movwf	(___fldiv@b+1)^0,c
 13527  00405C  0E80               	movlw	128
 13528  00405E  6E2A               	movwf	(___fldiv@b+2)^0,c
 13529  004060  0EBF               	movlw	191
 13530  004062  6E2B               	movwf	(___fldiv@b+3)^0,c
 13531  004064  C060  F013         	movff	logf@x,___flmul@a
 13532  004068  C061  F014         	movff	logf@x+1,___flmul@a+1
 13533  00406C  C062  F015         	movff	logf@x+2,___flmul@a+2
 13534  004070  C063  F016         	movff	logf@x+3,___flmul@a+3
 13535  004074  C060  F00F         	movff	logf@x,___flmul@b
 13536  004078  C061  F010         	movff	logf@x+1,___flmul@b+1
 13537  00407C  C062  F011         	movff	logf@x+2,___flmul@b+2
 13538  004080  C063  F012         	movff	logf@x+3,___flmul@b+3
 13539  004084  ECD2  F02A         	call	___flmul	;wreg free
 13540  004088  C00F  F02C         	movff	?___flmul,___fldiv@a
 13541  00408C  C010  F02D         	movff	?___flmul+1,___fldiv@a+1
 13542  004090  C011  F02E         	movff	?___flmul+2,___fldiv@a+2
 13543  004094  C012  F02F         	movff	?___flmul+3,___fldiv@a+3
 13544  004098  ECE7  F02C         	call	___fldiv	;wreg free
 13545  00409C  C028  F060         	movff	?___fldiv,?_logf
 13546  0040A0  C029  F061         	movff	?___fldiv+1,?_logf+1
 13547  0040A4  C02A  F062         	movff	?___fldiv+2,?_logf+2
 13548  0040A8  C02B  F063         	movff	?___fldiv+3,?_logf+3
 13549  0040AC  EF76  F023         	goto	l835
 13550  0040B0                     l5430:
 13551                           
 13552                           ; BSR set to: 0
 13553  0040B0  C0A8  F064         	movff	logf@ix,??_logf
 13554  0040B4  C0A9  F065         	movff	logf@ix+1,??_logf+1
 13555  0040B8  C0AA  F066         	movff	logf@ix+2,??_logf+2
 13556  0040BC  C0AB  F067         	movff	logf@ix+3,??_logf+3
 13557  0040C0  0E20               	movlw	32
 13558  0040C2  EF68  F020         	goto	u6780
 13559  0040C6                     u6785:
 13560  0040C6  90D8               	bcf	status,0,c
 13561  0040C8  3367               	rrcf	(??_logf+3)& (0+255),f,b
 13562  0040CA  3366               	rrcf	(??_logf+2)& (0+255),f,b
 13563  0040CC  3365               	rrcf	(??_logf+1)& (0+255),f,b
 13564  0040CE  3364               	rrcf	??_logf& (0+255),f,b
 13565  0040D0                     u6780:
 13566  0040D0  2EE8               	decfsz	wreg,f,c
 13567  0040D2  EF63  F020         	goto	u6785
 13568  0040D6  5164               	movf	??_logf& (0+255),w,b
 13569  0040D8  1165               	iorwf	(??_logf+1)& (0+255),w,b
 13570  0040DA  1166               	iorwf	(??_logf+2)& (0+255),w,b
 13571  0040DC  1167               	iorwf	(??_logf+3)& (0+255),w,b
 13572  0040DE  B4D8               	btfsc	status,2,c
 13573  0040E0  EF74  F020         	goto	u6791
 13574  0040E4  EF76  F020         	goto	u6790
 13575  0040E8                     u6791:
 13576  0040E8  EFA9  F020         	goto	l5438
 13577  0040EC                     u6790:
 13578  0040EC                     
 13579                           ; BSR set to: 0
 13580  0040EC  0E00               	movlw	0
 13581  0040EE  0102               	movlb	2	; () banked
 13582  0040F0  6F11               	movwf	(_errno+1)& (0+255),b
 13583  0040F2  0E21               	movlw	33
 13584  0040F4  6F10               	movwf	_errno& (0+255),b
 13585  0040F6                     
 13586                           ; BSR set to: 2
 13587  0040F6  C060  F05B         	movff	logf@x,___flsub@a
 13588  0040FA  C061  F05C         	movff	logf@x+1,___flsub@a+1
 13589  0040FE  C062  F05D         	movff	logf@x+2,___flsub@a+2
 13590  004102  C063  F05E         	movff	logf@x+3,___flsub@a+3
 13591  004106  C060  F057         	movff	logf@x,___flsub@b
 13592  00410A  C061  F058         	movff	logf@x+1,___flsub@b+1
 13593  00410E  C062  F059         	movff	logf@x+2,___flsub@b+2
 13594  004112  C063  F05A         	movff	logf@x+3,___flsub@b+3
 13595  004116  EC14  F03D         	call	___flsub	;wreg free
 13596  00411A  C057  F028         	movff	?___flsub,___fldiv@b
 13597  00411E  C058  F029         	movff	?___flsub+1,___fldiv@b+1
 13598  004122  C059  F02A         	movff	?___flsub+2,___fldiv@b+2
 13599  004126  C05A  F02B         	movff	?___flsub+3,___fldiv@b+3
 13600  00412A  0E00               	movlw	0
 13601  00412C  6E2C               	movwf	___fldiv@a^0,c
 13602  00412E  0E00               	movlw	0
 13603  004130  6E2D               	movwf	(___fldiv@a+1)^0,c
 13604  004132  0E00               	movlw	0
 13605  004134  6E2E               	movwf	(___fldiv@a+2)^0,c
 13606  004136  0E00               	movlw	0
 13607  004138  6E2F               	movwf	(___fldiv@a+3)^0,c
 13608  00413A  ECE7  F02C         	call	___fldiv	;wreg free
 13609  00413E  C028  F060         	movff	?___fldiv,?_logf
 13610  004142  C029  F061         	movff	?___fldiv+1,?_logf+1
 13611  004146  C02A  F062         	movff	?___fldiv+2,?_logf+2
 13612  00414A  C02B  F063         	movff	?___fldiv+3,?_logf+3
 13613  00414E  EF76  F023         	goto	l835
 13614  004152                     l5438:
 13615                           
 13616                           ; BSR set to: 0
 13617  004152  0EE7               	movlw	231
 13618  004154  2786               	addwf	logf@k& (0+255),f,b
 13619  004156  0EFF               	movlw	255
 13620  004158  2387               	addwfc	(logf@k+1)& (0+255),f,b
 13621  00415A                     
 13622                           ; BSR set to: 0
 13623  00415A  C060  F00F         	movff	logf@x,___flmul@b
 13624  00415E  C061  F010         	movff	logf@x+1,___flmul@b+1
 13625  004162  C062  F011         	movff	logf@x+2,___flmul@b+2
 13626  004166  C063  F012         	movff	logf@x+3,___flmul@b+3
 13627  00416A  0E00               	movlw	0
 13628  00416C  6E13               	movwf	___flmul@a^0,c
 13629  00416E  0E00               	movlw	0
 13630  004170  6E14               	movwf	(___flmul@a+1)^0,c
 13631  004172  0E00               	movlw	0
 13632  004174  6E15               	movwf	(___flmul@a+2)^0,c
 13633  004176  0E4C               	movlw	76
 13634  004178  6E16               	movwf	(___flmul@a+3)^0,c
 13635  00417A  ECD2  F02A         	call	___flmul	;wreg free
 13636  00417E  C00F  F060         	movff	?___flmul,logf@x
 13637  004182  C010  F061         	movff	?___flmul+1,logf@x+1
 13638  004186  C011  F062         	movff	?___flmul+2,logf@x+2
 13639  00418A  C012  F063         	movff	?___flmul+3,logf@x+3
 13640  00418E  C060  F0A0         	movff	logf@x,logf@u
 13641  004192  C061  F0A1         	movff	logf@x+1,logf@u+1
 13642  004196  C062  F0A2         	movff	logf@x+2,logf@u+2
 13643  00419A  C063  F0A3         	movff	logf@x+3,logf@u+3
 13644  00419E  C0A0  F0A8         	movff	logf@u,logf@ix
 13645  0041A2  C0A1  F0A9         	movff	logf@u+1,logf@ix+1
 13646  0041A6  C0A2  F0AA         	movff	logf@u+2,logf@ix+2
 13647  0041AA  C0A3  F0AB         	movff	logf@u+3,logf@ix+3
 13648  0041AE  EF06  F021         	goto	l5458
 13649  0041B2                     l5446:
 13650                           
 13651                           ; BSR set to: 0
 13652  0041B2  0E80               	movlw	128
 13653  0041B4  5DAA               	subwf	(logf@ix+2)& (0+255),w,b
 13654  0041B6  0E7F               	movlw	127
 13655  0041B8  59AB               	subwfb	(logf@ix+3)& (0+255),w,b
 13656  0041BA  A0D8               	btfss	status,0,c
 13657  0041BC  EFE2  F020         	goto	u6801
 13658  0041C0  EFE4  F020         	goto	u6800
 13659  0041C4                     u6801:
 13660  0041C4  EFEE  F020         	goto	l5452
 13661  0041C8                     u6800:
 13662  0041C8                     
 13663                           ; BSR set to: 0
 13664  0041C8  C060  F060         	movff	logf@x,?_logf
 13665  0041CC  C061  F061         	movff	logf@x+1,?_logf+1
 13666  0041D0  C062  F062         	movff	logf@x+2,?_logf+2
 13667  0041D4  C063  F063         	movff	logf@x+3,?_logf+3
 13668  0041D8  EF76  F023         	goto	l835
 13669  0041DC                     l5452:
 13670                           
 13671                           ; BSR set to: 0
 13672  0041DC  0E80               	movlw	128
 13673  0041DE  19AA               	xorwf	(logf@ix+2)& (0+255),w,b
 13674  0041E0  E109               	bnz	u6811
 13675  0041E2  0E3F               	movlw	63
 13676  0041E4  19AB               	xorwf	(logf@ix+3)& (0+255),w,b
 13677  0041E6  11A8               	iorwf	logf@ix& (0+255),w,b
 13678  0041E8  11A9               	iorwf	(logf@ix+1)& (0+255),w,b
 13679  0041EA  A4D8               	btfss	status,2,c
 13680  0041EC  EFFA  F020         	goto	u6811
 13681  0041F0  EFFC  F020         	goto	u6810
 13682  0041F4                     u6811:
 13683  0041F4  EF06  F021         	goto	l5458
 13684  0041F8                     u6810:
 13685  0041F8                     
 13686                           ; BSR set to: 0
 13687  0041F8  0E00               	movlw	0
 13688  0041FA  6F60               	movwf	?_logf& (0+255),b
 13689  0041FC  0E00               	movlw	0
 13690  0041FE  6F61               	movwf	(?_logf+1)& (0+255),b
 13691  004200  0E00               	movlw	0
 13692  004202  6F62               	movwf	(?_logf+2)& (0+255),b
 13693  004204  0E00               	movlw	0
 13694  004206  6F63               	movwf	(?_logf+3)& (0+255),b
 13695  004208  EF76  F023         	goto	l835
 13696  00420C                     l5458:
 13697  00420C  0E0D               	movlw	13
 13698  00420E  0100               	movlb	0	; () banked
 13699  004210  27A8               	addwf	logf@ix& (0+255),f,b
 13700  004212  0EFB               	movlw	251
 13701  004214  23A9               	addwfc	(logf@ix+1)& (0+255),f,b
 13702  004216  0E4A               	movlw	74
 13703  004218  23AA               	addwfc	(logf@ix+2)& (0+255),f,b
 13704  00421A  0E00               	movlw	0
 13705  00421C  23AB               	addwfc	(logf@ix+3)& (0+255),f,b
 13706  00421E  0E81               	movlw	129
 13707  004220  6F64               	movwf	??_logf& (0+255),b
 13708  004222  0EFF               	movlw	255
 13709  004224  6F65               	movwf	(??_logf+1)& (0+255),b
 13710  004226  C0A8  F066         	movff	logf@ix,??_logf+2
 13711  00422A  C0A9  F067         	movff	logf@ix+1,??_logf+3
 13712  00422E  C0AA  F068         	movff	logf@ix+2,??_logf+4
 13713  004232  C0AB  F069         	movff	logf@ix+3,??_logf+5
 13714  004236  0E18               	movlw	24
 13715  004238  EF23  F021         	goto	u6820
 13716  00423C                     u6825:
 13717  00423C  90D8               	bcf	status,0,c
 13718  00423E  3369               	rrcf	(??_logf+5)& (0+255),f,b
 13719  004240  3368               	rrcf	(??_logf+4)& (0+255),f,b
 13720  004242  3367               	rrcf	(??_logf+3)& (0+255),f,b
 13721  004244  3366               	rrcf	(??_logf+2)& (0+255),f,b
 13722  004246                     u6820:
 13723  004246  2EE8               	decfsz	wreg,f,c
 13724  004248  EF1E  F021         	goto	u6825
 13725  00424C  5164               	movf	??_logf& (0+255),w,b
 13726  00424E  2766               	addwf	(??_logf+2)& (0+255),f,b
 13727  004250  5165               	movf	(??_logf+1)& (0+255),w,b
 13728  004252  2367               	addwfc	(??_logf+3)& (0+255),f,b
 13729  004254  5166               	movf	(??_logf+2)& (0+255),w,b
 13730  004256  2786               	addwf	logf@k& (0+255),f,b
 13731  004258  5167               	movf	(??_logf+3)& (0+255),w,b
 13732  00425A  2387               	addwfc	(logf@k+1)& (0+255),f,b
 13733  00425C  0EFF               	movlw	255
 13734  00425E  15A8               	andwf	logf@ix& (0+255),w,b
 13735  004260  6F64               	movwf	??_logf& (0+255),b
 13736  004262  0EFF               	movlw	255
 13737  004264  15A9               	andwf	(logf@ix+1)& (0+255),w,b
 13738  004266  6F65               	movwf	(??_logf+1)& (0+255),b
 13739  004268  0E7F               	movlw	127
 13740  00426A  15AA               	andwf	(logf@ix+2)& (0+255),w,b
 13741  00426C  6F66               	movwf	(??_logf+2)& (0+255),b
 13742  00426E  0E00               	movlw	0
 13743  004270  15AB               	andwf	(logf@ix+3)& (0+255),w,b
 13744  004272  6F67               	movwf	(??_logf+3)& (0+255),b
 13745  004274  0EF3               	movlw	243
 13746  004276  2564               	addwf	??_logf& (0+255),w,b
 13747  004278  6FA8               	movwf	logf@ix& (0+255),b
 13748  00427A  0E04               	movlw	4
 13749  00427C  2165               	addwfc	(??_logf+1)& (0+255),w,b
 13750  00427E  6FA9               	movwf	(logf@ix+1)& (0+255),b
 13751  004280  0E35               	movlw	53
 13752  004282  2166               	addwfc	(??_logf+2)& (0+255),w,b
 13753  004284  6FAA               	movwf	(logf@ix+2)& (0+255),b
 13754  004286  0E3F               	movlw	63
 13755  004288  2167               	addwfc	(??_logf+3)& (0+255),w,b
 13756  00428A  6FAB               	movwf	(logf@ix+3)& (0+255),b
 13757  00428C                     
 13758                           ; BSR set to: 0
 13759  00428C  C0A8  F0A0         	movff	logf@ix,logf@u
 13760  004290  C0A9  F0A1         	movff	logf@ix+1,logf@u+1
 13761  004294  C0AA  F0A2         	movff	logf@ix+2,logf@u+2
 13762  004298  C0AB  F0A3         	movff	logf@ix+3,logf@u+3
 13763  00429C                     
 13764                           ; BSR set to: 0
 13765  00429C  C0A0  F060         	movff	logf@u,logf@x
 13766  0042A0  C0A1  F061         	movff	logf@u+1,logf@x+1
 13767  0042A4  C0A2  F062         	movff	logf@u+2,logf@x+2
 13768  0042A8  C0A3  F063         	movff	logf@u+3,logf@x+3
 13769  0042AC                     
 13770                           ; BSR set to: 0
 13771  0042AC  C060  F047         	movff	logf@x,___fladd@b
 13772  0042B0  C061  F048         	movff	logf@x+1,___fladd@b+1
 13773  0042B4  C062  F049         	movff	logf@x+2,___fladd@b+2
 13774  0042B8  C063  F04A         	movff	logf@x+3,___fladd@b+3
 13775  0042BC  0E00               	movlw	0
 13776  0042BE  6E4B               	movwf	___fladd@a^0,c
 13777  0042C0  0E00               	movlw	0
 13778  0042C2  6E4C               	movwf	(___fladd@a+1)^0,c
 13779  0042C4  0E80               	movlw	128
 13780  0042C6  6E4D               	movwf	(___fladd@a+2)^0,c
 13781  0042C8  0EBF               	movlw	191
 13782  0042CA  6E4E               	movwf	(___fladd@a+3)^0,c
 13783  0042CC  EC13  F026         	call	___fladd	;wreg free
 13784  0042D0  C047  F0A4         	movff	?___fladd,logf@f
 13785  0042D4  C048  F0A5         	movff	?___fladd+1,logf@f+1
 13786  0042D8  C049  F0A6         	movff	?___fladd+2,logf@f+2
 13787  0042DC  C04A  F0A7         	movff	?___fladd+3,logf@f+3
 13788  0042E0  C0A4  F028         	movff	logf@f,___fldiv@b
 13789  0042E4  C0A5  F029         	movff	logf@f+1,___fldiv@b+1
 13790  0042E8  C0A6  F02A         	movff	logf@f+2,___fldiv@b+2
 13791  0042EC  C0A7  F02B         	movff	logf@f+3,___fldiv@b+3
 13792  0042F0  0E00               	movlw	0
 13793  0042F2  6E4B               	movwf	___fladd@a^0,c
 13794  0042F4  0E00               	movlw	0
 13795  0042F6  6E4C               	movwf	(___fladd@a+1)^0,c
 13796  0042F8  0E00               	movlw	0
 13797  0042FA  6E4D               	movwf	(___fladd@a+2)^0,c
 13798  0042FC  0E40               	movlw	64
 13799  0042FE  6E4E               	movwf	(___fladd@a+3)^0,c
 13800  004300  C0A4  F047         	movff	logf@f,___fladd@b
 13801  004304  C0A5  F048         	movff	logf@f+1,___fladd@b+1
 13802  004308  C0A6  F049         	movff	logf@f+2,___fladd@b+2
 13803  00430C  C0A7  F04A         	movff	logf@f+3,___fladd@b+3
 13804  004310  EC13  F026         	call	___fladd	;wreg free
 13805  004314  C047  F02C         	movff	?___fladd,___fldiv@a
 13806  004318  C048  F02D         	movff	?___fladd+1,___fldiv@a+1
 13807  00431C  C049  F02E         	movff	?___fladd+2,___fldiv@a+2
 13808  004320  C04A  F02F         	movff	?___fladd+3,___fldiv@a+3
 13809  004324  ECE7  F02C         	call	___fldiv	;wreg free
 13810  004328  C028  F090         	movff	?___fldiv,logf@s
 13811  00432C  C029  F091         	movff	?___fldiv+1,logf@s+1
 13812  004330  C02A  F092         	movff	?___fldiv+2,logf@s+2
 13813  004334  C02B  F093         	movff	?___fldiv+3,logf@s+3
 13814  004338  C090  F00F         	movff	logf@s,___flmul@b
 13815  00433C  C091  F010         	movff	logf@s+1,___flmul@b+1
 13816  004340  C092  F011         	movff	logf@s+2,___flmul@b+2
 13817  004344  C093  F012         	movff	logf@s+3,___flmul@b+3
 13818  004348  C090  F013         	movff	logf@s,___flmul@a
 13819  00434C  C091  F014         	movff	logf@s+1,___flmul@a+1
 13820  004350  C092  F015         	movff	logf@s+2,___flmul@a+2
 13821  004354  C093  F016         	movff	logf@s+3,___flmul@a+3
 13822  004358  ECD2  F02A         	call	___flmul	;wreg free
 13823  00435C  C00F  F094         	movff	?___flmul,logf@z
 13824  004360  C010  F095         	movff	?___flmul+1,logf@z+1
 13825  004364  C011  F096         	movff	?___flmul+2,logf@z+2
 13826  004368  C012  F097         	movff	?___flmul+3,logf@z+3
 13827  00436C  C094  F00F         	movff	logf@z,___flmul@b
 13828  004370  C095  F010         	movff	logf@z+1,___flmul@b+1
 13829  004374  C096  F011         	movff	logf@z+2,___flmul@b+2
 13830  004378  C097  F012         	movff	logf@z+3,___flmul@b+3
 13831  00437C  C094  F013         	movff	logf@z,___flmul@a
 13832  004380  C095  F014         	movff	logf@z+1,___flmul@a+1
 13833  004384  C096  F015         	movff	logf@z+2,___flmul@a+2
 13834  004388  C097  F016         	movff	logf@z+3,___flmul@a+3
 13835  00438C  ECD2  F02A         	call	___flmul	;wreg free
 13836  004390  C00F  F098         	movff	?___flmul,logf@w
 13837  004394  C010  F099         	movff	?___flmul+1,logf@w+1
 13838  004398  C011  F09A         	movff	?___flmul+2,logf@w+2
 13839  00439C  C012  F09B         	movff	?___flmul+3,logf@w+3
 13840  0043A0  0E13               	movlw	19
 13841  0043A2  6E4B               	movwf	___fladd@a^0,c
 13842  0043A4  0ECE               	movlw	206
 13843  0043A6  6E4C               	movwf	(___fladd@a+1)^0,c
 13844  0043A8  0ECC               	movlw	204
 13845  0043AA  6E4D               	movwf	(___fladd@a+2)^0,c
 13846  0043AC  0E3E               	movlw	62
 13847  0043AE  6E4E               	movwf	(___fladd@a+3)^0,c
 13848  0043B0  0E26               	movlw	38
 13849  0043B2  6E13               	movwf	___flmul@a^0,c
 13850  0043B4  0E9E               	movlw	158
 13851  0043B6  6E14               	movwf	(___flmul@a+1)^0,c
 13852  0043B8  0E78               	movlw	120
 13853  0043BA  6E15               	movwf	(___flmul@a+2)^0,c
 13854  0043BC  0E3E               	movlw	62
 13855  0043BE  6E16               	movwf	(___flmul@a+3)^0,c
 13856  0043C0  C098  F00F         	movff	logf@w,___flmul@b
 13857  0043C4  C099  F010         	movff	logf@w+1,___flmul@b+1
 13858  0043C8  C09A  F011         	movff	logf@w+2,___flmul@b+2
 13859  0043CC  C09B  F012         	movff	logf@w+3,___flmul@b+3
 13860  0043D0  ECD2  F02A         	call	___flmul	;wreg free
 13861  0043D4  C00F  F047         	movff	?___flmul,___fladd@b
 13862  0043D8  C010  F048         	movff	?___flmul+1,___fladd@b+1
 13863  0043DC  C011  F049         	movff	?___flmul+2,___fladd@b+2
 13864  0043E0  C012  F04A         	movff	?___flmul+3,___fladd@b+3
 13865  0043E4  EC13  F026         	call	___fladd	;wreg free
 13866  0043E8  C047  F09C         	movff	?___fladd,_logf$1453
 13867  0043EC  C048  F09D         	movff	?___fladd+1,_logf$1453+1
 13868  0043F0  C049  F09E         	movff	?___fladd+2,_logf$1453+2
 13869  0043F4  C04A  F09F         	movff	?___fladd+3,_logf$1453+3
 13870  0043F8  C09C  F00F         	movff	_logf$1453,___flmul@b
 13871  0043FC  C09D  F010         	movff	_logf$1453+1,___flmul@b+1
 13872  004400  C09E  F011         	movff	_logf$1453+2,___flmul@b+2
 13873  004404  C09F  F012         	movff	_logf$1453+3,___flmul@b+3
 13874  004408  C098  F013         	movff	logf@w,___flmul@a
 13875  00440C  C099  F014         	movff	logf@w+1,___flmul@a+1
 13876  004410  C09A  F015         	movff	logf@w+2,___flmul@a+2
 13877  004414  C09B  F016         	movff	logf@w+3,___flmul@a+3
 13878  004418  ECD2  F02A         	call	___flmul	;wreg free
 13879  00441C  C00F  F06E         	movff	?___flmul,logf@t1
 13880  004420  C010  F06F         	movff	?___flmul+1,logf@t1+1
 13881  004424  C011  F070         	movff	?___flmul+2,logf@t1+2
 13882  004428  C012  F071         	movff	?___flmul+3,logf@t1+3
 13883  00442C  0EAA               	movlw	170
 13884  00442E  6E4B               	movwf	___fladd@a^0,c
 13885  004430  0EAA               	movlw	170
 13886  004432  6E4C               	movwf	(___fladd@a+1)^0,c
 13887  004434  0E2A               	movlw	42
 13888  004436  6E4D               	movwf	(___fladd@a+2)^0,c
 13889  004438  0E3F               	movlw	63
 13890  00443A  6E4E               	movwf	(___fladd@a+3)^0,c
 13891  00443C  0EEE               	movlw	238
 13892  00443E  6E13               	movwf	___flmul@a^0,c
 13893  004440  0EE9               	movlw	233
 13894  004442  6E14               	movwf	(___flmul@a+1)^0,c
 13895  004444  0E91               	movlw	145
 13896  004446  6E15               	movwf	(___flmul@a+2)^0,c
 13897  004448  0E3E               	movlw	62
 13898  00444A  6E16               	movwf	(___flmul@a+3)^0,c
 13899  00444C  C098  F00F         	movff	logf@w,___flmul@b
 13900  004450  C099  F010         	movff	logf@w+1,___flmul@b+1
 13901  004454  C09A  F011         	movff	logf@w+2,___flmul@b+2
 13902  004458  C09B  F012         	movff	logf@w+3,___flmul@b+3
 13903  00445C  ECD2  F02A         	call	___flmul	;wreg free
 13904  004460  C00F  F047         	movff	?___flmul,___fladd@b
 13905  004464  C010  F048         	movff	?___flmul+1,___fladd@b+1
 13906  004468  C011  F049         	movff	?___flmul+2,___fladd@b+2
 13907  00446C  C012  F04A         	movff	?___flmul+3,___fladd@b+3
 13908  004470  EC13  F026         	call	___fladd	;wreg free
 13909  004474  C047  F09C         	movff	?___fladd,_logf$1453
 13910  004478  C048  F09D         	movff	?___fladd+1,_logf$1453+1
 13911  00447C  C049  F09E         	movff	?___fladd+2,_logf$1453+2
 13912  004480  C04A  F09F         	movff	?___fladd+3,_logf$1453+3
 13913  004484  C09C  F00F         	movff	_logf$1453,___flmul@b
 13914  004488  C09D  F010         	movff	_logf$1453+1,___flmul@b+1
 13915  00448C  C09E  F011         	movff	_logf$1453+2,___flmul@b+2
 13916  004490  C09F  F012         	movff	_logf$1453+3,___flmul@b+3
 13917  004494  C094  F013         	movff	logf@z,___flmul@a
 13918  004498  C095  F014         	movff	logf@z+1,___flmul@a+1
 13919  00449C  C096  F015         	movff	logf@z+2,___flmul@a+2
 13920  0044A0  C097  F016         	movff	logf@z+3,___flmul@a+3
 13921  0044A4  ECD2  F02A         	call	___flmul	;wreg free
 13922  0044A8  C00F  F072         	movff	?___flmul,logf@t2
 13923  0044AC  C010  F073         	movff	?___flmul+1,logf@t2+1
 13924  0044B0  C011  F074         	movff	?___flmul+2,logf@t2+2
 13925  0044B4  C012  F075         	movff	?___flmul+3,logf@t2+3
 13926  0044B8  C072  F047         	movff	logf@t2,___fladd@b
 13927  0044BC  C073  F048         	movff	logf@t2+1,___fladd@b+1
 13928  0044C0  C074  F049         	movff	logf@t2+2,___fladd@b+2
 13929  0044C4  C075  F04A         	movff	logf@t2+3,___fladd@b+3
 13930  0044C8  C06E  F04B         	movff	logf@t1,___fladd@a
 13931  0044CC  C06F  F04C         	movff	logf@t1+1,___fladd@a+1
 13932  0044D0  C070  F04D         	movff	logf@t1+2,___fladd@a+2
 13933  0044D4  C071  F04E         	movff	logf@t1+3,___fladd@a+3
 13934  0044D8  EC13  F026         	call	___fladd	;wreg free
 13935  0044DC  C047  F06A         	movff	?___fladd,logf@R
 13936  0044E0  C048  F06B         	movff	?___fladd+1,logf@R+1
 13937  0044E4  C049  F06C         	movff	?___fladd+2,logf@R+2
 13938  0044E8  C04A  F06D         	movff	?___fladd+3,logf@R+3
 13939  0044EC  0E00               	movlw	0
 13940  0044EE  6E13               	movwf	___flmul@a^0,c
 13941  0044F0  0E00               	movlw	0
 13942  0044F2  6E14               	movwf	(___flmul@a+1)^0,c
 13943  0044F4  0E00               	movlw	0
 13944  0044F6  6E15               	movwf	(___flmul@a+2)^0,c
 13945  0044F8  0E3F               	movlw	63
 13946  0044FA  6E16               	movwf	(___flmul@a+3)^0,c
 13947  0044FC  C0A4  F00F         	movff	logf@f,___flmul@b
 13948  004500  C0A5  F010         	movff	logf@f+1,___flmul@b+1
 13949  004504  C0A6  F011         	movff	logf@f+2,___flmul@b+2
 13950  004508  C0A7  F012         	movff	logf@f+3,___flmul@b+3
 13951  00450C  ECD2  F02A         	call	___flmul	;wreg free
 13952  004510  C00F  F09C         	movff	?___flmul,_logf$1453
 13953  004514  C010  F09D         	movff	?___flmul+1,_logf$1453+1
 13954  004518  C011  F09E         	movff	?___flmul+2,_logf$1453+2
 13955  00451C  C012  F09F         	movff	?___flmul+3,_logf$1453+3
 13956  004520  C09C  F00F         	movff	_logf$1453,___flmul@b
 13957  004524  C09D  F010         	movff	_logf$1453+1,___flmul@b+1
 13958  004528  C09E  F011         	movff	_logf$1453+2,___flmul@b+2
 13959  00452C  C09F  F012         	movff	_logf$1453+3,___flmul@b+3
 13960  004530  C0A4  F013         	movff	logf@f,___flmul@a
 13961  004534  C0A5  F014         	movff	logf@f+1,___flmul@a+1
 13962  004538  C0A6  F015         	movff	logf@f+2,___flmul@a+2
 13963  00453C  C0A7  F016         	movff	logf@f+3,___flmul@a+3
 13964  004540  ECD2  F02A         	call	___flmul	;wreg free
 13965  004544  C00F  F088         	movff	?___flmul,logf@hfsq
 13966  004548  C010  F089         	movff	?___flmul+1,logf@hfsq+1
 13967  00454C  C011  F08A         	movff	?___flmul+2,logf@hfsq+2
 13968  004550  C012  F08B         	movff	?___flmul+3,logf@hfsq+3
 13969  004554  C086  F001         	movff	logf@k,___xxtofl@val
 13970  004558  C087  F002         	movff	logf@k+1,___xxtofl@val+1
 13971  00455C  0E00               	movlw	0
 13972  00455E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 13973  004560  0EFF               	movlw	-1
 13974  004562  6E03               	movwf	(___xxtofl@val+2)^0,c
 13975  004564  6E04               	movwf	(___xxtofl@val+3)^0,c
 13976  004566  0E01               	movlw	1
 13977  004568  EC3E  F033         	call	___xxtofl
 13978  00456C  C001  F08C         	movff	?___xxtofl,logf@dk
 13979  004570  C002  F08D         	movff	?___xxtofl+1,logf@dk+1
 13980  004574  C003  F08E         	movff	?___xxtofl+2,logf@dk+2
 13981  004578  C004  F08F         	movff	?___xxtofl+3,logf@dk+3
 13982  00457C  C090  F013         	movff	logf@s,___flmul@a
 13983  004580  C091  F014         	movff	logf@s+1,___flmul@a+1
 13984  004584  C092  F015         	movff	logf@s+2,___flmul@a+2
 13985  004588  C093  F016         	movff	logf@s+3,___flmul@a+3
 13986  00458C  C06A  F04B         	movff	logf@R,___fladd@a
 13987  004590  C06B  F04C         	movff	logf@R+1,___fladd@a+1
 13988  004594  C06C  F04D         	movff	logf@R+2,___fladd@a+2
 13989  004598  C06D  F04E         	movff	logf@R+3,___fladd@a+3
 13990  00459C  C088  F047         	movff	logf@hfsq,___fladd@b
 13991  0045A0  C089  F048         	movff	logf@hfsq+1,___fladd@b+1
 13992  0045A4  C08A  F049         	movff	logf@hfsq+2,___fladd@b+2
 13993  0045A8  C08B  F04A         	movff	logf@hfsq+3,___fladd@b+3
 13994  0045AC  EC13  F026         	call	___fladd	;wreg free
 13995  0045B0  C047  F00F         	movff	?___fladd,___flmul@b
 13996  0045B4  C048  F010         	movff	?___fladd+1,___flmul@b+1
 13997  0045B8  C049  F011         	movff	?___fladd+2,___flmul@b+2
 13998  0045BC  C04A  F012         	movff	?___fladd+3,___flmul@b+3
 13999  0045C0  ECD2  F02A         	call	___flmul	;wreg free
 14000  0045C4  C00F  F076         	movff	?___flmul,_logf$1454
 14001  0045C8  C010  F077         	movff	?___flmul+1,_logf$1454+1
 14002  0045CC  C011  F078         	movff	?___flmul+2,_logf$1454+2
 14003  0045D0  C012  F079         	movff	?___flmul+3,_logf$1454+3
 14004  0045D4  0ED1               	movlw	209
 14005  0045D6  6E13               	movwf	___flmul@a^0,c
 14006  0045D8  0EF7               	movlw	247
 14007  0045DA  6E14               	movwf	(___flmul@a+1)^0,c
 14008  0045DC  0E17               	movlw	23
 14009  0045DE  6E15               	movwf	(___flmul@a+2)^0,c
 14010  0045E0  0E37               	movlw	55
 14011  0045E2  6E16               	movwf	(___flmul@a+3)^0,c
 14012  0045E4  C08C  F00F         	movff	logf@dk,___flmul@b
 14013  0045E8  C08D  F010         	movff	logf@dk+1,___flmul@b+1
 14014  0045EC  C08E  F011         	movff	logf@dk+2,___flmul@b+2
 14015  0045F0  C08F  F012         	movff	logf@dk+3,___flmul@b+3
 14016  0045F4  ECD2  F02A         	call	___flmul	;wreg free
 14017  0045F8  C00F  F04B         	movff	?___flmul,___fladd@a
 14018  0045FC  C010  F04C         	movff	?___flmul+1,___fladd@a+1
 14019  004600  C011  F04D         	movff	?___flmul+2,___fladd@a+2
 14020  004604  C012  F04E         	movff	?___flmul+3,___fladd@a+3
 14021  004608  C076  F047         	movff	_logf$1454,___fladd@b
 14022  00460C  C077  F048         	movff	_logf$1454+1,___fladd@b+1
 14023  004610  C078  F049         	movff	_logf$1454+2,___fladd@b+2
 14024  004614  C079  F04A         	movff	_logf$1454+3,___fladd@b+3
 14025  004618  EC13  F026         	call	___fladd	;wreg free
 14026  00461C  C047  F07A         	movff	?___fladd,_logf$1455
 14027  004620  C048  F07B         	movff	?___fladd+1,_logf$1455+1
 14028  004624  C049  F07C         	movff	?___fladd+2,_logf$1455+2
 14029  004628  C04A  F07D         	movff	?___fladd+3,_logf$1455+3
 14030  00462C  C088  F05B         	movff	logf@hfsq,___flsub@a
 14031  004630  C089  F05C         	movff	logf@hfsq+1,___flsub@a+1
 14032  004634  C08A  F05D         	movff	logf@hfsq+2,___flsub@a+2
 14033  004638  C08B  F05E         	movff	logf@hfsq+3,___flsub@a+3
 14034  00463C  C07A  F057         	movff	_logf$1455,___flsub@b
 14035  004640  C07B  F058         	movff	_logf$1455+1,___flsub@b+1
 14036  004644  C07C  F059         	movff	_logf$1455+2,___flsub@b+2
 14037  004648  C07D  F05A         	movff	_logf$1455+3,___flsub@b+3
 14038  00464C  EC14  F03D         	call	___flsub	;wreg free
 14039  004650  C057  F07E         	movff	?___flsub,_logf$1456
 14040  004654  C058  F07F         	movff	?___flsub+1,_logf$1456+1
 14041  004658  C059  F080         	movff	?___flsub+2,_logf$1456+2
 14042  00465C  C05A  F081         	movff	?___flsub+3,_logf$1456+3
 14043  004660  C0A4  F04B         	movff	logf@f,___fladd@a
 14044  004664  C0A5  F04C         	movff	logf@f+1,___fladd@a+1
 14045  004668  C0A6  F04D         	movff	logf@f+2,___fladd@a+2
 14046  00466C  C0A7  F04E         	movff	logf@f+3,___fladd@a+3
 14047  004670  C07E  F047         	movff	_logf$1456,___fladd@b
 14048  004674  C07F  F048         	movff	_logf$1456+1,___fladd@b+1
 14049  004678  C080  F049         	movff	_logf$1456+2,___fladd@b+2
 14050  00467C  C081  F04A         	movff	_logf$1456+3,___fladd@b+3
 14051  004680  EC13  F026         	call	___fladd	;wreg free
 14052  004684  C047  F082         	movff	?___fladd,_logf$1457
 14053  004688  C048  F083         	movff	?___fladd+1,_logf$1457+1
 14054  00468C  C049  F084         	movff	?___fladd+2,_logf$1457+2
 14055  004690  C04A  F085         	movff	?___fladd+3,_logf$1457+3
 14056  004694  C082  F047         	movff	_logf$1457,___fladd@b
 14057  004698  C083  F048         	movff	_logf$1457+1,___fladd@b+1
 14058  00469C  C084  F049         	movff	_logf$1457+2,___fladd@b+2
 14059  0046A0  C085  F04A         	movff	_logf$1457+3,___fladd@b+3
 14060  0046A4  0E80               	movlw	128
 14061  0046A6  6E13               	movwf	___flmul@a^0,c
 14062  0046A8  0E71               	movlw	113
 14063  0046AA  6E14               	movwf	(___flmul@a+1)^0,c
 14064  0046AC  0E31               	movlw	49
 14065  0046AE  6E15               	movwf	(___flmul@a+2)^0,c
 14066  0046B0  0E3F               	movlw	63
 14067  0046B2  6E16               	movwf	(___flmul@a+3)^0,c
 14068  0046B4  C08C  F00F         	movff	logf@dk,___flmul@b
 14069  0046B8  C08D  F010         	movff	logf@dk+1,___flmul@b+1
 14070  0046BC  C08E  F011         	movff	logf@dk+2,___flmul@b+2
 14071  0046C0  C08F  F012         	movff	logf@dk+3,___flmul@b+3
 14072  0046C4  ECD2  F02A         	call	___flmul	;wreg free
 14073  0046C8  C00F  F04B         	movff	?___flmul,___fladd@a
 14074  0046CC  C010  F04C         	movff	?___flmul+1,___fladd@a+1
 14075  0046D0  C011  F04D         	movff	?___flmul+2,___fladd@a+2
 14076  0046D4  C012  F04E         	movff	?___flmul+3,___fladd@a+3
 14077  0046D8  EC13  F026         	call	___fladd	;wreg free
 14078  0046DC  C047  F060         	movff	?___fladd,?_logf
 14079  0046E0  C048  F061         	movff	?___fladd+1,?_logf+1
 14080  0046E4  C049  F062         	movff	?___fladd+2,?_logf+2
 14081  0046E8  C04A  F063         	movff	?___fladd+3,?_logf+3
 14082  0046EC                     l835:
 14083  0046EC  0012               	return		;funcret
 14084  0046EE                     __end_of_logf:
 14085                           	callstack 0
 14086                           
 14087 ;; *************** function ___xxtofl *****************
 14088 ;; Defined at:
 14089 ;;		line 10 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\xxtofl.c"
 14090 ;; Parameters:    Size  Location     Type
 14091 ;;  sign            1    wreg     unsigned char 
 14092 ;;  val             4    0[COMRAM] long 
 14093 ;; Auto vars:     Size  Location     Type
 14094 ;;  sign            1    8[COMRAM] unsigned char 
 14095 ;;  arg             4   10[COMRAM] unsigned long 
 14096 ;;  exp             1    9[COMRAM] unsigned char 
 14097 ;; Return value:  Size  Location     Type
 14098 ;;                  4    0[COMRAM] unsigned char 
 14099 ;; Registers used:
 14100 ;;		wreg, status,2, status,0
 14101 ;; Tracked objects:
 14102 ;;		On entry : 0/0
 14103 ;;		On exit  : 0/0
 14104 ;;		Unchanged: 0/0
 14105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14106 ;;      Params:         4       0       0       0       0       0       0       0       0
 14107 ;;      Locals:         6       0       0       0       0       0       0       0       0
 14108 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14109 ;;      Totals:        14       0       0       0       0       0       0       0       0
 14110 ;;Total ram usage:       14 bytes
 14111 ;; Hardware stack levels used:    1
 14112 ;; This function calls:
 14113 ;;		Nothing
 14114 ;; This function is called by:
 14115 ;;		_calculate_resistance
 14116 ;;		_logf
 14117 ;;		_powf
 14118 ;; This function uses a non-reentrant model
 14119 ;;
 14120                           
 14121                           	psect	text39
 14122  00667C                     __ptext39:
 14123                           	callstack 0
 14124  00667C                     ___xxtofl:
 14125                           	callstack 28
 14126                           
 14127                           ;incstack = 0
 14128                           ;___xxtofl@sign stored from wreg
 14129  00667C  6E09               	movwf	___xxtofl@sign^0,c
 14130  00667E  5009               	movf	___xxtofl@sign^0,w,c
 14131  006680  B4D8               	btfsc	status,2,c
 14132  006682  EF45  F033         	goto	u6171
 14133  006686  EF47  F033         	goto	u6170
 14134  00668A                     u6171:
 14135  00668A  EF69  F033         	goto	l796
 14136  00668E                     u6170:
 14137  00668E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 14138  006690  EF4E  F033         	goto	u6180
 14139  006694  EF4C  F033         	goto	u6181
 14140  006698                     u6181:
 14141  006698  EF69  F033         	goto	l796
 14142  00669C                     u6180:
 14143  00669C  C001  F005         	movff	___xxtofl@val,??___xxtofl
 14144  0066A0  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 14145  0066A4  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 14146  0066A8  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 14147  0066AC  1E05               	comf	??___xxtofl^0,f,c
 14148  0066AE  1E06               	comf	(??___xxtofl+1)^0,f,c
 14149  0066B0  1E07               	comf	(??___xxtofl+2)^0,f,c
 14150  0066B2  1E08               	comf	(??___xxtofl+3)^0,f,c
 14151  0066B4  2A05               	incf	??___xxtofl^0,f,c
 14152  0066B6  0E00               	movlw	0
 14153  0066B8  2206               	addwfc	(??___xxtofl+1)^0,f,c
 14154  0066BA  2207               	addwfc	(??___xxtofl+2)^0,f,c
 14155  0066BC  2208               	addwfc	(??___xxtofl+3)^0,f,c
 14156  0066BE  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 14157  0066C2  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 14158  0066C6  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 14159  0066CA  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 14160  0066CE  EF71  F033         	goto	l5118
 14161  0066D2                     l796:
 14162  0066D2  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 14163  0066D6  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 14164  0066DA  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 14165  0066DE  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 14166  0066E2                     l5118:
 14167  0066E2  5001               	movf	___xxtofl@val^0,w,c
 14168  0066E4  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 14169  0066E6  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 14170  0066E8  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 14171  0066EA  A4D8               	btfss	status,2,c
 14172  0066EC  EF7A  F033         	goto	u6191
 14173  0066F0  EF7C  F033         	goto	u6190
 14174  0066F4                     u6191:
 14175  0066F4  EF86  F033         	goto	l5124
 14176  0066F8                     u6190:
 14177  0066F8  0E00               	movlw	0
 14178  0066FA  6E01               	movwf	?___xxtofl^0,c
 14179  0066FC  0E00               	movlw	0
 14180  0066FE  6E02               	movwf	(?___xxtofl+1)^0,c
 14181  006700  0E00               	movlw	0
 14182  006702  6E03               	movwf	(?___xxtofl+2)^0,c
 14183  006704  0E00               	movlw	0
 14184  006706  6E04               	movwf	(?___xxtofl+3)^0,c
 14185  006708  EF17  F034         	goto	l799
 14186  00670C                     l5124:
 14187  00670C  0E96               	movlw	150
 14188  00670E  6E0A               	movwf	___xxtofl@exp^0,c
 14189  006710  EF90  F033         	goto	l5128
 14190  006714                     l5126:
 14191  006714  2A0A               	incf	___xxtofl@exp^0,f,c
 14192  006716  90D8               	bcf	status,0,c
 14193  006718  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 14194  00671A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 14195  00671C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 14196  00671E  320B               	rrcf	___xxtofl@arg^0,f,c
 14197  006720                     l5128:
 14198  006720  0E00               	movlw	0
 14199  006722  140B               	andwf	___xxtofl@arg^0,w,c
 14200  006724  6E05               	movwf	??___xxtofl^0,c
 14201  006726  0E00               	movlw	0
 14202  006728  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 14203  00672A  6E06               	movwf	(??___xxtofl+1)^0,c
 14204  00672C  0E00               	movlw	0
 14205  00672E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 14206  006730  6E07               	movwf	(??___xxtofl+2)^0,c
 14207  006732  0EFE               	movlw	254
 14208  006734  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 14209  006736  6E08               	movwf	(??___xxtofl+3)^0,c
 14210  006738  5005               	movf	??___xxtofl^0,w,c
 14211  00673A  1006               	iorwf	(??___xxtofl+1)^0,w,c
 14212  00673C  1007               	iorwf	(??___xxtofl+2)^0,w,c
 14213  00673E  1008               	iorwf	(??___xxtofl+3)^0,w,c
 14214  006740  A4D8               	btfss	status,2,c
 14215  006742  EFA5  F033         	goto	u6201
 14216  006746  EFA7  F033         	goto	u6200
 14217  00674A                     u6201:
 14218  00674A  EF8A  F033         	goto	l5126
 14219  00674E                     u6200:
 14220  00674E  EFB5  F033         	goto	l803
 14221  006752                     l5130:
 14222  006752  2A0A               	incf	___xxtofl@exp^0,f,c
 14223  006754  0E01               	movlw	1
 14224  006756  260B               	addwf	___xxtofl@arg^0,f,c
 14225  006758  0E00               	movlw	0
 14226  00675A  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 14227  00675C  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 14228  00675E  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 14229  006760  90D8               	bcf	status,0,c
 14230  006762  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 14231  006764  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 14232  006766  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 14233  006768  320B               	rrcf	___xxtofl@arg^0,f,c
 14234  00676A                     l803:
 14235  00676A  0E00               	movlw	0
 14236  00676C  140B               	andwf	___xxtofl@arg^0,w,c
 14237  00676E  6E05               	movwf	??___xxtofl^0,c
 14238  006770  0E00               	movlw	0
 14239  006772  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 14240  006774  6E06               	movwf	(??___xxtofl+1)^0,c
 14241  006776  0E00               	movlw	0
 14242  006778  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 14243  00677A  6E07               	movwf	(??___xxtofl+2)^0,c
 14244  00677C  0EFF               	movlw	255
 14245  00677E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 14246  006780  6E08               	movwf	(??___xxtofl+3)^0,c
 14247  006782  5005               	movf	??___xxtofl^0,w,c
 14248  006784  1006               	iorwf	(??___xxtofl+1)^0,w,c
 14249  006786  1007               	iorwf	(??___xxtofl+2)^0,w,c
 14250  006788  1008               	iorwf	(??___xxtofl+3)^0,w,c
 14251  00678A  A4D8               	btfss	status,2,c
 14252  00678C  EFCA  F033         	goto	u6211
 14253  006790  EFCC  F033         	goto	u6210
 14254  006794                     u6211:
 14255  006794  EFA9  F033         	goto	l5130
 14256  006798                     u6210:
 14257  006798  EFD4  F033         	goto	l5138
 14258  00679C                     l5136:
 14259  00679C  060A               	decf	___xxtofl@exp^0,f,c
 14260  00679E  90D8               	bcf	status,0,c
 14261  0067A0  360B               	rlcf	___xxtofl@arg^0,f,c
 14262  0067A2  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 14263  0067A4  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 14264  0067A6  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 14265  0067A8                     l5138:
 14266  0067A8  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 14267  0067AA  EFD9  F033         	goto	u6221
 14268  0067AE  EFDB  F033         	goto	u6220
 14269  0067B2                     u6221:
 14270  0067B2  EFE3  F033         	goto	l810
 14271  0067B6                     u6220:
 14272  0067B6  0E02               	movlw	2
 14273  0067B8  600A               	cpfslt	___xxtofl@exp^0,c
 14274  0067BA  EFE1  F033         	goto	u6231
 14275  0067BE  EFE3  F033         	goto	u6230
 14276  0067C2                     u6231:
 14277  0067C2  EFCE  F033         	goto	l5136
 14278  0067C6                     u6230:
 14279  0067C6                     l810:
 14280  0067C6  B00A               	btfsc	___xxtofl@exp^0,0,c
 14281  0067C8  EFE8  F033         	goto	u6241
 14282  0067CC  EFEA  F033         	goto	u6240
 14283  0067D0                     u6241:
 14284  0067D0  EFEB  F033         	goto	l5144
 14285  0067D4                     u6240:
 14286  0067D4  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 14287  0067D6                     l5144:
 14288  0067D6  90D8               	bcf	status,0,c
 14289  0067D8  320A               	rrcf	___xxtofl@exp^0,f,c
 14290  0067DA  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 14291  0067DE  6A06               	clrf	(??___xxtofl+1)^0,c
 14292  0067E0  6A07               	clrf	(??___xxtofl+2)^0,c
 14293  0067E2  6A08               	clrf	(??___xxtofl+3)^0,c
 14294  0067E4  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 14295  0067E8  6A07               	clrf	(??___xxtofl+2)^0,c
 14296  0067EA  6A06               	clrf	(??___xxtofl+1)^0,c
 14297  0067EC  6A05               	clrf	??___xxtofl^0,c
 14298  0067EE  5005               	movf	??___xxtofl^0,w,c
 14299  0067F0  120B               	iorwf	___xxtofl@arg^0,f,c
 14300  0067F2  5006               	movf	(??___xxtofl+1)^0,w,c
 14301  0067F4  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 14302  0067F6  5007               	movf	(??___xxtofl+2)^0,w,c
 14303  0067F8  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 14304  0067FA  5008               	movf	(??___xxtofl+3)^0,w,c
 14305  0067FC  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 14306  0067FE  5009               	movf	___xxtofl@sign^0,w,c
 14307  006800  B4D8               	btfsc	status,2,c
 14308  006802  EF05  F034         	goto	u6251
 14309  006806  EF07  F034         	goto	u6250
 14310  00680A                     u6251:
 14311  00680A  EF0F  F034         	goto	l5154
 14312  00680E                     u6250:
 14313  00680E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 14314  006810  EF0E  F034         	goto	u6260
 14315  006814  EF0C  F034         	goto	u6261
 14316  006818                     u6261:
 14317  006818  EF0F  F034         	goto	l5154
 14318  00681C                     u6260:
 14319  00681C  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 14320  00681E                     l5154:
 14321  00681E  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 14322  006822  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 14323  006826  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 14324  00682A  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 14325  00682E                     l799:
 14326  00682E  0012               	return		;funcret
 14327  006830                     __end_of___xxtofl:
 14328                           	callstack 0
 14329                           
 14330 ;; *************** function ___flsub *****************
 14331 ;; Defined at:
 14332 ;;		line 245 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcadd.c"
 14333 ;; Parameters:    Size  Location     Type
 14334 ;;  b               4   86[COMRAM] unsigned char 
 14335 ;;  a               4   90[COMRAM] unsigned char 
 14336 ;; Auto vars:     Size  Location     Type
 14337 ;;		None
 14338 ;; Return value:  Size  Location     Type
 14339 ;;                  4   86[COMRAM] unsigned char 
 14340 ;; Registers used:
 14341 ;;		wreg, status,2, status,0, cstack
 14342 ;; Tracked objects:
 14343 ;;		On entry : 0/0
 14344 ;;		On exit  : 0/0
 14345 ;;		Unchanged: 0/0
 14346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14347 ;;      Params:         8       0       0       0       0       0       0       0       0
 14348 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14349 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14350 ;;      Totals:         8       0       0       0       0       0       0       0       0
 14351 ;;Total ram usage:        8 bytes
 14352 ;; Hardware stack levels used:    1
 14353 ;; Hardware stack levels required when called:    1
 14354 ;; This function calls:
 14355 ;;		___fladd
 14356 ;; This function is called by:
 14357 ;;		_gas_plot_log_scale
 14358 ;;		_logf
 14359 ;;		_efgtoa
 14360 ;;		_powf
 14361 ;; This function uses a non-reentrant model
 14362 ;;
 14363                           
 14364                           	psect	text40
 14365  007A28                     __ptext40:
 14366                           	callstack 0
 14367  007A28                     ___flsub:
 14368                           	callstack 25
 14369  007A28  0E00               	movlw	0
 14370  007A2A  1A5B               	xorwf	___flsub@a^0,f,c
 14371  007A2C  0E00               	movlw	0
 14372  007A2E  1A5C               	xorwf	(___flsub@a+1)^0,f,c
 14373  007A30  0E00               	movlw	0
 14374  007A32  1A5D               	xorwf	(___flsub@a+2)^0,f,c
 14375  007A34  0E80               	movlw	128
 14376  007A36  1A5E               	xorwf	(___flsub@a+3)^0,f,c
 14377  007A38  C057  F047         	movff	___flsub@b,___fladd@b
 14378  007A3C  C058  F048         	movff	___flsub@b+1,___fladd@b+1
 14379  007A40  C059  F049         	movff	___flsub@b+2,___fladd@b+2
 14380  007A44  C05A  F04A         	movff	___flsub@b+3,___fladd@b+3
 14381  007A48  C05B  F04B         	movff	___flsub@a,___fladd@a
 14382  007A4C  C05C  F04C         	movff	___flsub@a+1,___fladd@a+1
 14383  007A50  C05D  F04D         	movff	___flsub@a+2,___fladd@a+2
 14384  007A54  C05E  F04E         	movff	___flsub@a+3,___fladd@a+3
 14385  007A58  EC13  F026         	call	___fladd	;wreg free
 14386  007A5C  C047  F057         	movff	?___fladd,?___flsub
 14387  007A60  C048  F058         	movff	?___fladd+1,?___flsub+1
 14388  007A64  C049  F059         	movff	?___fladd+2,?___flsub+2
 14389  007A68  C04A  F05A         	movff	?___fladd+3,?___flsub+3
 14390  007A6C  0012               	return		;funcret
 14391  007A6E                     __end_of___flsub:
 14392                           	callstack 0
 14393                           
 14394 ;; *************** function ___fladd *****************
 14395 ;; Defined at:
 14396 ;;		line 10 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcadd.c"
 14397 ;; Parameters:    Size  Location     Type
 14398 ;;  b               4   70[COMRAM] unsigned char 
 14399 ;;  a               4   74[COMRAM] unsigned char 
 14400 ;; Auto vars:     Size  Location     Type
 14401 ;;  grs             1   85[COMRAM] unsigned char 
 14402 ;;  bexp            1   84[COMRAM] unsigned char 
 14403 ;;  aexp            1   83[COMRAM] unsigned char 
 14404 ;;  signs           1   82[COMRAM] unsigned char 
 14405 ;; Return value:  Size  Location     Type
 14406 ;;                  4   70[COMRAM] unsigned char 
 14407 ;; Registers used:
 14408 ;;		wreg, status,2, status,0
 14409 ;; Tracked objects:
 14410 ;;		On entry : 0/0
 14411 ;;		On exit  : 0/0
 14412 ;;		Unchanged: 0/0
 14413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14414 ;;      Params:         8       0       0       0       0       0       0       0       0
 14415 ;;      Locals:         4       0       0       0       0       0       0       0       0
 14416 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14417 ;;      Totals:        16       0       0       0       0       0       0       0       0
 14418 ;;Total ram usage:       16 bytes
 14419 ;; Hardware stack levels used:    1
 14420 ;; This function calls:
 14421 ;;		Nothing
 14422 ;; This function is called by:
 14423 ;;		_read_mq
 14424 ;;		_gas_plot_log_scale
 14425 ;;		___flsub
 14426 ;;		_logf
 14427 ;;		_efgtoa
 14428 ;;		_powf
 14429 ;;		_sqrtf
 14430 ;;		_SensorCalibration
 14431 ;; This function uses a non-reentrant model
 14432 ;;
 14433                           
 14434                           	psect	text41
 14435  004C26                     __ptext41:
 14436                           	callstack 0
 14437  004C26                     ___fladd:
 14438                           	callstack 25
 14439  004C26  504A               	movf	(___fladd@b+3)^0,w,c
 14440  004C28  0B80               	andlw	128
 14441  004C2A  6E53               	movwf	___fladd@signs^0,c
 14442  004C2C  504A               	movf	(___fladd@b+3)^0,w,c
 14443  004C2E  244A               	addwf	(___fladd@b+3)^0,w,c
 14444  004C30  6E55               	movwf	___fladd@bexp^0,c
 14445  004C32  AE49               	btfss	(___fladd@b+2)^0,7,c
 14446  004C34  EF1E  F026         	goto	u3771
 14447  004C38  EF20  F026         	goto	u3770
 14448  004C3C                     u3771:
 14449  004C3C  EF21  F026         	goto	l3792
 14450  004C40                     u3770:
 14451  004C40  8055               	bsf	___fladd@bexp^0,0,c
 14452  004C42                     l3792:
 14453  004C42  5055               	movf	___fladd@bexp^0,w,c
 14454  004C44  B4D8               	btfsc	status,2,c
 14455  004C46  EF27  F026         	goto	u3781
 14456  004C4A  EF29  F026         	goto	u3780
 14457  004C4E                     u3781:
 14458  004C4E  EF3E  F026         	goto	l3802
 14459  004C52                     u3780:
 14460  004C52  2855               	incf	___fladd@bexp^0,w,c
 14461  004C54  A4D8               	btfss	status,2,c
 14462  004C56  EF2F  F026         	goto	u3791
 14463  004C5A  EF31  F026         	goto	u3790
 14464  004C5E                     u3791:
 14465  004C5E  EF39  F026         	goto	l3798
 14466  004C62                     u3790:
 14467  004C62  0E00               	movlw	0
 14468  004C64  6E47               	movwf	___fladd@b^0,c
 14469  004C66  0E00               	movlw	0
 14470  004C68  6E48               	movwf	(___fladd@b+1)^0,c
 14471  004C6A  0E00               	movlw	0
 14472  004C6C  6E49               	movwf	(___fladd@b+2)^0,c
 14473  004C6E  0E00               	movlw	0
 14474  004C70  6E4A               	movwf	(___fladd@b+3)^0,c
 14475  004C72                     l3798:
 14476  004C72  8E49               	bsf	(___fladd@b+2)^0,7,c
 14477  004C74  0E00               	movlw	0
 14478  004C76  6E4A               	movwf	(___fladd@b+3)^0,c
 14479  004C78  EF46  F026         	goto	l3804
 14480  004C7C                     l3802:
 14481  004C7C  0E00               	movlw	0
 14482  004C7E  6E47               	movwf	___fladd@b^0,c
 14483  004C80  0E00               	movlw	0
 14484  004C82  6E48               	movwf	(___fladd@b+1)^0,c
 14485  004C84  0E00               	movlw	0
 14486  004C86  6E49               	movwf	(___fladd@b+2)^0,c
 14487  004C88  0E00               	movlw	0
 14488  004C8A  6E4A               	movwf	(___fladd@b+3)^0,c
 14489  004C8C                     l3804:
 14490  004C8C  504E               	movf	(___fladd@a+3)^0,w,c
 14491  004C8E  0B80               	andlw	128
 14492  004C90  6E54               	movwf	___fladd@aexp^0,c
 14493  004C92  5053               	movf	___fladd@signs^0,w,c
 14494  004C94  1854               	xorwf	___fladd@aexp^0,w,c
 14495  004C96  B4D8               	btfsc	status,2,c
 14496  004C98  EF50  F026         	goto	u3801
 14497  004C9C  EF52  F026         	goto	u3800
 14498  004CA0                     u3801:
 14499  004CA0  EF53  F026         	goto	l3810
 14500  004CA4                     u3800:
 14501  004CA4  8C53               	bsf	___fladd@signs^0,6,c
 14502  004CA6                     l3810:
 14503  004CA6  504E               	movf	(___fladd@a+3)^0,w,c
 14504  004CA8  244E               	addwf	(___fladd@a+3)^0,w,c
 14505  004CAA  6E54               	movwf	___fladd@aexp^0,c
 14506  004CAC  AE4D               	btfss	(___fladd@a+2)^0,7,c
 14507  004CAE  EF5B  F026         	goto	u3811
 14508  004CB2  EF5D  F026         	goto	u3810
 14509  004CB6                     u3811:
 14510  004CB6  EF5E  F026         	goto	l3816
 14511  004CBA                     u3810:
 14512  004CBA  8054               	bsf	___fladd@aexp^0,0,c
 14513  004CBC                     l3816:
 14514  004CBC  5054               	movf	___fladd@aexp^0,w,c
 14515  004CBE  B4D8               	btfsc	status,2,c
 14516  004CC0  EF64  F026         	goto	u3821
 14517  004CC4  EF66  F026         	goto	u3820
 14518  004CC8                     u3821:
 14519  004CC8  EF7B  F026         	goto	l3826
 14520  004CCC                     u3820:
 14521  004CCC  2854               	incf	___fladd@aexp^0,w,c
 14522  004CCE  A4D8               	btfss	status,2,c
 14523  004CD0  EF6C  F026         	goto	u3831
 14524  004CD4  EF6E  F026         	goto	u3830
 14525  004CD8                     u3831:
 14526  004CD8  EF76  F026         	goto	l3822
 14527  004CDC                     u3830:
 14528  004CDC  0E00               	movlw	0
 14529  004CDE  6E4B               	movwf	___fladd@a^0,c
 14530  004CE0  0E00               	movlw	0
 14531  004CE2  6E4C               	movwf	(___fladd@a+1)^0,c
 14532  004CE4  0E00               	movlw	0
 14533  004CE6  6E4D               	movwf	(___fladd@a+2)^0,c
 14534  004CE8  0E00               	movlw	0
 14535  004CEA  6E4E               	movwf	(___fladd@a+3)^0,c
 14536  004CEC                     l3822:
 14537  004CEC  8E4D               	bsf	(___fladd@a+2)^0,7,c
 14538  004CEE  0E00               	movlw	0
 14539  004CF0  6E4E               	movwf	(___fladd@a+3)^0,c
 14540  004CF2  EF83  F026         	goto	l3828
 14541  004CF6                     l3826:
 14542  004CF6  0E00               	movlw	0
 14543  004CF8  6E4B               	movwf	___fladd@a^0,c
 14544  004CFA  0E00               	movlw	0
 14545  004CFC  6E4C               	movwf	(___fladd@a+1)^0,c
 14546  004CFE  0E00               	movlw	0
 14547  004D00  6E4D               	movwf	(___fladd@a+2)^0,c
 14548  004D02  0E00               	movlw	0
 14549  004D04  6E4E               	movwf	(___fladd@a+3)^0,c
 14550  004D06                     l3828:
 14551  004D06  5055               	movf	___fladd@bexp^0,w,c
 14552  004D08  5C54               	subwf	___fladd@aexp^0,w,c
 14553  004D0A  B0D8               	btfsc	status,0,c
 14554  004D0C  EF8A  F026         	goto	u3841
 14555  004D10  EF8C  F026         	goto	u3840
 14556  004D14                     u3841:
 14557  004D14  EFB3  F026         	goto	l3864
 14558  004D18                     u3840:
 14559  004D18  AC53               	btfss	___fladd@signs^0,6,c
 14560  004D1A  EF91  F026         	goto	u3851
 14561  004D1E  EF93  F026         	goto	u3850
 14562  004D22                     u3851:
 14563  004D22  EF95  F026         	goto	l3834
 14564  004D26                     u3850:
 14565  004D26  0E80               	movlw	128
 14566  004D28  1A53               	xorwf	___fladd@signs^0,f,c
 14567  004D2A                     l3834:
 14568  004D2A  C055  F056         	movff	___fladd@bexp,___fladd@grs
 14569  004D2E  C054  F055         	movff	___fladd@aexp,___fladd@bexp
 14570  004D32  C056  F054         	movff	___fladd@grs,___fladd@aexp
 14571  004D36  C047  F056         	movff	___fladd@b,___fladd@grs
 14572  004D3A  C04B  F047         	movff	___fladd@a,___fladd@b
 14573  004D3E  C056  F04B         	movff	___fladd@grs,___fladd@a
 14574  004D42  C048  F056         	movff	___fladd@b+1,___fladd@grs
 14575  004D46  C04C  F048         	movff	___fladd@a+1,___fladd@b+1
 14576  004D4A  C056  F04C         	movff	___fladd@grs,___fladd@a+1
 14577  004D4E  C049  F056         	movff	___fladd@b+2,___fladd@grs
 14578  004D52  C04D  F049         	movff	___fladd@a+2,___fladd@b+2
 14579  004D56  C056  F04D         	movff	___fladd@grs,___fladd@a+2
 14580  004D5A  C04A  F056         	movff	___fladd@b+3,___fladd@grs
 14581  004D5E  C04E  F04A         	movff	___fladd@a+3,___fladd@b+3
 14582  004D62  C056  F04E         	movff	___fladd@grs,___fladd@a+3
 14583  004D66                     l3864:
 14584  004D66  0E00               	movlw	0
 14585  004D68  6E56               	movwf	___fladd@grs^0,c
 14586  004D6A  5055               	movf	___fladd@bexp^0,w,c
 14587  004D6C  C054  F04F         	movff	___fladd@aexp,??___fladd
 14588  004D70  6A50               	clrf	(??___fladd+1)^0,c
 14589  004D72  5E4F               	subwf	??___fladd^0,f,c
 14590  004D74  0E00               	movlw	0
 14591  004D76  5A50               	subwfb	(??___fladd+1)^0,f,c
 14592  004D78  BE50               	btfsc	(??___fladd+1)^0,7,c
 14593  004D7A  EFC8  F026         	goto	u3861
 14594  004D7E  5050               	movf	(??___fladd+1)^0,w,c
 14595  004D80  E109               	bnz	u3860
 14596  004D82  0E1A               	movlw	26
 14597  004D84  5C4F               	subwf	??___fladd^0,w,c
 14598  004D86  A0D8               	btfss	status,0,c
 14599  004D88  EFC8  F026         	goto	u3861
 14600  004D8C  EFCA  F026         	goto	u3860
 14601  004D90                     u3861:
 14602  004D90  EF01  F027         	goto	l670
 14603  004D94                     u3860:
 14604  004D94  5047               	movf	___fladd@b^0,w,c
 14605  004D96  1048               	iorwf	(___fladd@b+1)^0,w,c
 14606  004D98  1049               	iorwf	(___fladd@b+2)^0,w,c
 14607  004D9A  104A               	iorwf	(___fladd@b+3)^0,w,c
 14608  004D9C  A4D8               	btfss	status,2,c
 14609  004D9E  EFD3  F026         	goto	u3871
 14610  004DA2  EFD6  F026         	goto	u3870
 14611  004DA6                     u3871:
 14612  004DA6  0E01               	movlw	1
 14613  004DA8  EFD7  F026         	goto	u3880
 14614  004DAC                     u3870:
 14615  004DAC  0E00               	movlw	0
 14616  004DAE                     u3880:
 14617  004DAE  6E56               	movwf	___fladd@grs^0,c
 14618  004DB0  0E00               	movlw	0
 14619  004DB2  6E47               	movwf	___fladd@b^0,c
 14620  004DB4  0E00               	movlw	0
 14621  004DB6  6E48               	movwf	(___fladd@b+1)^0,c
 14622  004DB8  0E00               	movlw	0
 14623  004DBA  6E49               	movwf	(___fladd@b+2)^0,c
 14624  004DBC  0E00               	movlw	0
 14625  004DBE  6E4A               	movwf	(___fladd@b+3)^0,c
 14626  004DC0  C054  F055         	movff	___fladd@aexp,___fladd@bexp
 14627  004DC4  EF0A  F027         	goto	l669
 14628  004DC8                     l671:
 14629  004DC8  A056               	btfss	___fladd@grs^0,0,c
 14630  004DCA  EFE9  F026         	goto	u3891
 14631  004DCE  EFEB  F026         	goto	u3890
 14632  004DD2                     u3891:
 14633  004DD2  EFF1  F026         	goto	l3876
 14634  004DD6                     u3890:
 14635  004DD6  90D8               	bcf	status,0,c
 14636  004DD8  3056               	rrcf	___fladd@grs^0,w,c
 14637  004DDA  0901               	iorlw	1
 14638  004DDC  6E56               	movwf	___fladd@grs^0,c
 14639  004DDE  EFF3  F026         	goto	l3878
 14640  004DE2                     l3876:
 14641  004DE2  90D8               	bcf	status,0,c
 14642  004DE4  3256               	rrcf	___fladd@grs^0,f,c
 14643  004DE6                     l3878:
 14644  004DE6  A047               	btfss	___fladd@b^0,0,c
 14645  004DE8  EFF8  F026         	goto	u3901
 14646  004DEC  EFFA  F026         	goto	u3900
 14647  004DF0                     u3901:
 14648  004DF0  EFFB  F026         	goto	l3882
 14649  004DF4                     u3900:
 14650  004DF4  8E56               	bsf	___fladd@grs^0,7,c
 14651  004DF6                     l3882:
 14652  004DF6  344A               	rlcf	(___fladd@b+3)^0,w,c
 14653  004DF8  324A               	rrcf	(___fladd@b+3)^0,f,c
 14654  004DFA  3249               	rrcf	(___fladd@b+2)^0,f,c
 14655  004DFC  3248               	rrcf	(___fladd@b+1)^0,f,c
 14656  004DFE  3247               	rrcf	___fladd@b^0,f,c
 14657  004E00  2A55               	incf	___fladd@bexp^0,f,c
 14658  004E02                     l670:
 14659  004E02  5054               	movf	___fladd@aexp^0,w,c
 14660  004E04  5C55               	subwf	___fladd@bexp^0,w,c
 14661  004E06  A0D8               	btfss	status,0,c
 14662  004E08  EF08  F027         	goto	u3911
 14663  004E0C  EF0A  F027         	goto	u3910
 14664  004E10                     u3911:
 14665  004E10  EFE4  F026         	goto	l671
 14666  004E14                     u3910:
 14667  004E14                     l669:
 14668  004E14  BC53               	btfsc	___fladd@signs^0,6,c
 14669  004E16  EF0F  F027         	goto	u3921
 14670  004E1A  EF11  F027         	goto	u3920
 14671  004E1E                     u3921:
 14672  004E1E  EF51  F027         	goto	l3910
 14673  004E22                     u3920:
 14674  004E22  5055               	movf	___fladd@bexp^0,w,c
 14675  004E24  A4D8               	btfss	status,2,c
 14676  004E26  EF17  F027         	goto	u3931
 14677  004E2A  EF19  F027         	goto	u3930
 14678  004E2E                     u3931:
 14679  004E2E  EF23  F027         	goto	l3892
 14680  004E32                     u3930:
 14681  004E32  0E00               	movlw	0
 14682  004E34  6E47               	movwf	?___fladd^0,c
 14683  004E36  0E00               	movlw	0
 14684  004E38  6E48               	movwf	(?___fladd+1)^0,c
 14685  004E3A  0E00               	movlw	0
 14686  004E3C  6E49               	movwf	(?___fladd+2)^0,c
 14687  004E3E  0E00               	movlw	0
 14688  004E40  6E4A               	movwf	(?___fladd+3)^0,c
 14689  004E42  EF72  F028         	goto	l678
 14690  004E46                     l3892:
 14691  004E46  504B               	movf	___fladd@a^0,w,c
 14692  004E48  2647               	addwf	___fladd@b^0,f,c
 14693  004E4A  504C               	movf	(___fladd@a+1)^0,w,c
 14694  004E4C  2248               	addwfc	(___fladd@b+1)^0,f,c
 14695  004E4E  504D               	movf	(___fladd@a+2)^0,w,c
 14696  004E50  2249               	addwfc	(___fladd@b+2)^0,f,c
 14697  004E52  504E               	movf	(___fladd@a+3)^0,w,c
 14698  004E54  224A               	addwfc	(___fladd@b+3)^0,f,c
 14699  004E56  A04A               	btfss	(___fladd@b+3)^0,0,c
 14700  004E58  EF30  F027         	goto	u3941
 14701  004E5C  EF32  F027         	goto	u3940
 14702  004E60                     u3941:
 14703  004E60  EFDE  F027         	goto	l3946
 14704  004E64                     u3940:
 14705  004E64  A056               	btfss	___fladd@grs^0,0,c
 14706  004E66  EF37  F027         	goto	u3951
 14707  004E6A  EF39  F027         	goto	u3950
 14708  004E6E                     u3951:
 14709  004E6E  EF3F  F027         	goto	l3900
 14710  004E72                     u3950:
 14711  004E72  90D8               	bcf	status,0,c
 14712  004E74  3056               	rrcf	___fladd@grs^0,w,c
 14713  004E76  0901               	iorlw	1
 14714  004E78  6E56               	movwf	___fladd@grs^0,c
 14715  004E7A  EF41  F027         	goto	l3902
 14716  004E7E                     l3900:
 14717  004E7E  90D8               	bcf	status,0,c
 14718  004E80  3256               	rrcf	___fladd@grs^0,f,c
 14719  004E82                     l3902:
 14720  004E82  A047               	btfss	___fladd@b^0,0,c
 14721  004E84  EF46  F027         	goto	u3961
 14722  004E88  EF48  F027         	goto	u3960
 14723  004E8C                     u3961:
 14724  004E8C  EF49  F027         	goto	l3906
 14725  004E90                     u3960:
 14726  004E90  8E56               	bsf	___fladd@grs^0,7,c
 14727  004E92                     l3906:
 14728  004E92  344A               	rlcf	(___fladd@b+3)^0,w,c
 14729  004E94  324A               	rrcf	(___fladd@b+3)^0,f,c
 14730  004E96  3249               	rrcf	(___fladd@b+2)^0,f,c
 14731  004E98  3248               	rrcf	(___fladd@b+1)^0,f,c
 14732  004E9A  3247               	rrcf	___fladd@b^0,f,c
 14733  004E9C  2A55               	incf	___fladd@bexp^0,f,c
 14734  004E9E  EFDE  F027         	goto	l3946
 14735  004EA2                     l3910:
 14736  004EA2  504B               	movf	___fladd@a^0,w,c
 14737  004EA4  5C47               	subwf	___fladd@b^0,w,c
 14738  004EA6  504C               	movf	(___fladd@a+1)^0,w,c
 14739  004EA8  5848               	subwfb	(___fladd@b+1)^0,w,c
 14740  004EAA  504D               	movf	(___fladd@a+2)^0,w,c
 14741  004EAC  5849               	subwfb	(___fladd@b+2)^0,w,c
 14742  004EAE  504A               	movf	(___fladd@b+3)^0,w,c
 14743  004EB0  0A80               	xorlw	128
 14744  004EB2  6E4F               	movwf	??___fladd^0,c
 14745  004EB4  504E               	movf	(___fladd@a+3)^0,w,c
 14746  004EB6  0A80               	xorlw	128
 14747  004EB8  584F               	subwfb	??___fladd^0,w,c
 14748  004EBA  B0D8               	btfsc	status,0,c
 14749  004EBC  EF62  F027         	goto	u3971
 14750  004EC0  EF64  F027         	goto	u3970
 14751  004EC4                     u3971:
 14752  004EC4  EF8F  F027         	goto	l3920
 14753  004EC8                     u3970:
 14754  004EC8  5047               	movf	___fladd@b^0,w,c
 14755  004ECA  5C4B               	subwf	___fladd@a^0,w,c
 14756  004ECC  6E4F               	movwf	??___fladd^0,c
 14757  004ECE  5048               	movf	(___fladd@b+1)^0,w,c
 14758  004ED0  584C               	subwfb	(___fladd@a+1)^0,w,c
 14759  004ED2  6E50               	movwf	(??___fladd+1)^0,c
 14760  004ED4  5049               	movf	(___fladd@b+2)^0,w,c
 14761  004ED6  584D               	subwfb	(___fladd@a+2)^0,w,c
 14762  004ED8  6E51               	movwf	(??___fladd+2)^0,c
 14763  004EDA  504A               	movf	(___fladd@b+3)^0,w,c
 14764  004EDC  584E               	subwfb	(___fladd@a+3)^0,w,c
 14765  004EDE  6E52               	movwf	(??___fladd+3)^0,c
 14766  004EE0  0EFF               	movlw	255
 14767  004EE2  244F               	addwf	??___fladd^0,w,c
 14768  004EE4  6E47               	movwf	___fladd@b^0,c
 14769  004EE6  0EFF               	movlw	255
 14770  004EE8  2050               	addwfc	(??___fladd+1)^0,w,c
 14771  004EEA  6E48               	movwf	(___fladd@b+1)^0,c
 14772  004EEC  0EFF               	movlw	255
 14773  004EEE  2051               	addwfc	(??___fladd+2)^0,w,c
 14774  004EF0  6E49               	movwf	(___fladd@b+2)^0,c
 14775  004EF2  0EFF               	movlw	255
 14776  004EF4  2052               	addwfc	(??___fladd+3)^0,w,c
 14777  004EF6  6E4A               	movwf	(___fladd@b+3)^0,c
 14778  004EF8  0E80               	movlw	128
 14779  004EFA  1A53               	xorwf	___fladd@signs^0,f,c
 14780  004EFC  6C56               	negf	___fladd@grs^0,c
 14781  004EFE  5056               	movf	___fladd@grs^0,w,c
 14782  004F00  A4D8               	btfss	status,2,c
 14783  004F02  EF85  F027         	goto	u3981
 14784  004F06  EF87  F027         	goto	u3980
 14785  004F0A                     u3981:
 14786  004F0A  EF97  F027         	goto	l686
 14787  004F0E                     u3980:
 14788  004F0E  0E01               	movlw	1
 14789  004F10  2647               	addwf	___fladd@b^0,f,c
 14790  004F12  0E00               	movlw	0
 14791  004F14  2248               	addwfc	(___fladd@b+1)^0,f,c
 14792  004F16  2249               	addwfc	(___fladd@b+2)^0,f,c
 14793  004F18  224A               	addwfc	(___fladd@b+3)^0,f,c
 14794  004F1A  EF97  F027         	goto	l686
 14795  004F1E                     l3920:
 14796  004F1E  504B               	movf	___fladd@a^0,w,c
 14797  004F20  5E47               	subwf	___fladd@b^0,f,c
 14798  004F22  504C               	movf	(___fladd@a+1)^0,w,c
 14799  004F24  5A48               	subwfb	(___fladd@b+1)^0,f,c
 14800  004F26  504D               	movf	(___fladd@a+2)^0,w,c
 14801  004F28  5A49               	subwfb	(___fladd@b+2)^0,f,c
 14802  004F2A  504E               	movf	(___fladd@a+3)^0,w,c
 14803  004F2C  5A4A               	subwfb	(___fladd@b+3)^0,f,c
 14804  004F2E                     l686:
 14805  004F2E  5047               	movf	___fladd@b^0,w,c
 14806  004F30  1048               	iorwf	(___fladd@b+1)^0,w,c
 14807  004F32  1049               	iorwf	(___fladd@b+2)^0,w,c
 14808  004F34  104A               	iorwf	(___fladd@b+3)^0,w,c
 14809  004F36  A4D8               	btfss	status,2,c
 14810  004F38  EFA0  F027         	goto	u3991
 14811  004F3C  EFA2  F027         	goto	u3990
 14812  004F40                     u3991:
 14813  004F40  EFD7  F027         	goto	l3944
 14814  004F44                     u3990:
 14815  004F44  5056               	movf	___fladd@grs^0,w,c
 14816  004F46  A4D8               	btfss	status,2,c
 14817  004F48  EFA8  F027         	goto	u4001
 14818  004F4C  EFAA  F027         	goto	u4000
 14819  004F50                     u4001:
 14820  004F50  EFD7  F027         	goto	l3944
 14821  004F54                     u4000:
 14822  004F54  0E00               	movlw	0
 14823  004F56  6E47               	movwf	?___fladd^0,c
 14824  004F58  0E00               	movlw	0
 14825  004F5A  6E48               	movwf	(?___fladd+1)^0,c
 14826  004F5C  0E00               	movlw	0
 14827  004F5E  6E49               	movwf	(?___fladd+2)^0,c
 14828  004F60  0E00               	movlw	0
 14829  004F62  6E4A               	movwf	(?___fladd+3)^0,c
 14830  004F64  EF72  F028         	goto	l678
 14831  004F68                     l3928:
 14832  004F68  90D8               	bcf	status,0,c
 14833  004F6A  3647               	rlcf	___fladd@b^0,f,c
 14834  004F6C  3648               	rlcf	(___fladd@b+1)^0,f,c
 14835  004F6E  3649               	rlcf	(___fladd@b+2)^0,f,c
 14836  004F70  364A               	rlcf	(___fladd@b+3)^0,f,c
 14837  004F72  AE56               	btfss	___fladd@grs^0,7,c
 14838  004F74  EFBE  F027         	goto	u4011
 14839  004F78  EFC0  F027         	goto	u4010
 14840  004F7C                     u4011:
 14841  004F7C  EFC1  F027         	goto	l3934
 14842  004F80                     u4010:
 14843  004F80  8047               	bsf	___fladd@b^0,0,c
 14844  004F82                     l3934:
 14845  004F82  A056               	btfss	___fladd@grs^0,0,c
 14846  004F84  EFC6  F027         	goto	u4021
 14847  004F88  EFC8  F027         	goto	u4020
 14848  004F8C                     u4021:
 14849  004F8C  EFCC  F027         	goto	l3938
 14850  004F90                     u4020:
 14851  004F90  80D8               	bsf	status,0,c
 14852  004F92  3656               	rlcf	___fladd@grs^0,f,c
 14853  004F94  EFCE  F027         	goto	l3940
 14854  004F98                     l3938:
 14855  004F98  90D8               	bcf	status,0,c
 14856  004F9A  3656               	rlcf	___fladd@grs^0,f,c
 14857  004F9C                     l3940:
 14858  004F9C  5055               	movf	___fladd@bexp^0,w,c
 14859  004F9E  B4D8               	btfsc	status,2,c
 14860  004FA0  EFD4  F027         	goto	u4031
 14861  004FA4  EFD6  F027         	goto	u4030
 14862  004FA8                     u4031:
 14863  004FA8  EFD7  F027         	goto	l3944
 14864  004FAC                     u4030:
 14865  004FAC  0655               	decf	___fladd@bexp^0,f,c
 14866  004FAE                     l3944:
 14867  004FAE  AE49               	btfss	(___fladd@b+2)^0,7,c
 14868  004FB0  EFDC  F027         	goto	u4041
 14869  004FB4  EFDE  F027         	goto	u4040
 14870  004FB8                     u4041:
 14871  004FB8  EFB4  F027         	goto	l3928
 14872  004FBC                     u4040:
 14873  004FBC                     l3946:
 14874  004FBC  0E00               	movlw	0
 14875  004FBE  6E54               	movwf	___fladd@aexp^0,c
 14876  004FC0  AE56               	btfss	___fladd@grs^0,7,c
 14877  004FC2  EFE5  F027         	goto	u4051
 14878  004FC6  EFE7  F027         	goto	u4050
 14879  004FCA                     u4051:
 14880  004FCA  EFFF  F027         	goto	l695
 14881  004FCE                     u4050:
 14882  004FCE  C056  F04F         	movff	___fladd@grs,??___fladd
 14883  004FD2  0E7F               	movlw	127
 14884  004FD4  164F               	andwf	??___fladd^0,f,c
 14885  004FD6  B4D8               	btfsc	status,2,c
 14886  004FD8  EFF0  F027         	goto	u4061
 14887  004FDC  EFF2  F027         	goto	u4060
 14888  004FE0                     u4061:
 14889  004FE0  EFF6  F027         	goto	l696
 14890  004FE4                     u4060:
 14891  004FE4                     l3952:
 14892  004FE4  0E01               	movlw	1
 14893  004FE6  6E54               	movwf	___fladd@aexp^0,c
 14894  004FE8  EFFF  F027         	goto	l695
 14895  004FEC                     l696:
 14896  004FEC  A047               	btfss	___fladd@b^0,0,c
 14897  004FEE  EFFB  F027         	goto	u4071
 14898  004FF2  EFFD  F027         	goto	u4070
 14899  004FF6                     u4071:
 14900  004FF6  EFFF  F027         	goto	l695
 14901  004FFA                     u4070:
 14902  004FFA  EFF2  F027         	goto	l3952
 14903  004FFE                     l695:
 14904  004FFE  5054               	movf	___fladd@aexp^0,w,c
 14905  005000  B4D8               	btfsc	status,2,c
 14906  005002  EF05  F028         	goto	u4081
 14907  005006  EF07  F028         	goto	u4080
 14908  00500A                     u4081:
 14909  00500A  EF32  F028         	goto	l3964
 14910  00500E                     u4080:
 14911  00500E  0E01               	movlw	1
 14912  005010  2647               	addwf	___fladd@b^0,f,c
 14913  005012  0E00               	movlw	0
 14914  005014  2248               	addwfc	(___fladd@b+1)^0,f,c
 14915  005016  2249               	addwfc	(___fladd@b+2)^0,f,c
 14916  005018  224A               	addwfc	(___fladd@b+3)^0,f,c
 14917  00501A  A04A               	btfss	(___fladd@b+3)^0,0,c
 14918  00501C  EF12  F028         	goto	u4091
 14919  005020  EF14  F028         	goto	u4090
 14920  005024                     u4091:
 14921  005024  EF32  F028         	goto	l3964
 14922  005028                     u4090:
 14923  005028  C047  F04F         	movff	___fladd@b,??___fladd
 14924  00502C  C048  F050         	movff	___fladd@b+1,??___fladd+1
 14925  005030  C049  F051         	movff	___fladd@b+2,??___fladd+2
 14926  005034  C04A  F052         	movff	___fladd@b+3,??___fladd+3
 14927  005038  3452               	rlcf	(??___fladd+3)^0,w,c
 14928  00503A  3252               	rrcf	(??___fladd+3)^0,f,c
 14929  00503C  3251               	rrcf	(??___fladd+2)^0,f,c
 14930  00503E  3250               	rrcf	(??___fladd+1)^0,f,c
 14931  005040  324F               	rrcf	??___fladd^0,f,c
 14932  005042  C04F  F047         	movff	??___fladd,___fladd@b
 14933  005046  C050  F048         	movff	??___fladd+1,___fladd@b+1
 14934  00504A  C051  F049         	movff	??___fladd+2,___fladd@b+2
 14935  00504E  C052  F04A         	movff	??___fladd+3,___fladd@b+3
 14936  005052  2855               	incf	___fladd@bexp^0,w,c
 14937  005054  B4D8               	btfsc	status,2,c
 14938  005056  EF2F  F028         	goto	u4101
 14939  00505A  EF31  F028         	goto	u4100
 14940  00505E                     u4101:
 14941  00505E  EF32  F028         	goto	l3964
 14942  005062                     u4100:
 14943  005062  2A55               	incf	___fladd@bexp^0,f,c
 14944  005064                     l3964:
 14945  005064  2855               	incf	___fladd@bexp^0,w,c
 14946  005066  B4D8               	btfsc	status,2,c
 14947  005068  EF38  F028         	goto	u4111
 14948  00506C  EF3A  F028         	goto	u4110
 14949  005070                     u4111:
 14950  005070  EF42  F028         	goto	l3968
 14951  005074                     u4110:
 14952  005074  5055               	movf	___fladd@bexp^0,w,c
 14953  005076  A4D8               	btfss	status,2,c
 14954  005078  EF40  F028         	goto	u4121
 14955  00507C  EF42  F028         	goto	u4120
 14956  005080                     u4121:
 14957  005080  EF54  F028         	goto	l3972
 14958  005084                     u4120:
 14959  005084                     l3968:
 14960  005084  0E00               	movlw	0
 14961  005086  6E47               	movwf	___fladd@b^0,c
 14962  005088  0E00               	movlw	0
 14963  00508A  6E48               	movwf	(___fladd@b+1)^0,c
 14964  00508C  0E00               	movlw	0
 14965  00508E  6E49               	movwf	(___fladd@b+2)^0,c
 14966  005090  0E00               	movlw	0
 14967  005092  6E4A               	movwf	(___fladd@b+3)^0,c
 14968  005094  5055               	movf	___fladd@bexp^0,w,c
 14969  005096  A4D8               	btfss	status,2,c
 14970  005098  EF50  F028         	goto	u4131
 14971  00509C  EF52  F028         	goto	u4130
 14972  0050A0                     u4131:
 14973  0050A0  EF54  F028         	goto	l3972
 14974  0050A4                     u4130:
 14975  0050A4  0E00               	movlw	0
 14976  0050A6  6E53               	movwf	___fladd@signs^0,c
 14977  0050A8                     l3972:
 14978  0050A8  A055               	btfss	___fladd@bexp^0,0,c
 14979  0050AA  EF59  F028         	goto	u4141
 14980  0050AE  EF5B  F028         	goto	u4140
 14981  0050B2                     u4141:
 14982  0050B2  EF5E  F028         	goto	l3976
 14983  0050B6                     u4140:
 14984  0050B6  8E49               	bsf	(___fladd@b+2)^0,7,c
 14985  0050B8  EF5F  F028         	goto	l3978
 14986  0050BC                     l3976:
 14987  0050BC  9E49               	bcf	(___fladd@b+2)^0,7,c
 14988  0050BE                     l3978:
 14989  0050BE  90D8               	bcf	status,0,c
 14990  0050C0  3055               	rrcf	___fladd@bexp^0,w,c
 14991  0050C2  6E4A               	movwf	(___fladd@b+3)^0,c
 14992  0050C4  AE53               	btfss	___fladd@signs^0,7,c
 14993  0050C6  EF67  F028         	goto	u4151
 14994  0050CA  EF69  F028         	goto	u4150
 14995  0050CE                     u4151:
 14996  0050CE  EF6A  F028         	goto	l3984
 14997  0050D2                     u4150:
 14998  0050D2  8E4A               	bsf	(___fladd@b+3)^0,7,c
 14999  0050D4                     l3984:
 15000  0050D4  C047  F047         	movff	___fladd@b,?___fladd
 15001  0050D8  C048  F048         	movff	___fladd@b+1,?___fladd+1
 15002  0050DC  C049  F049         	movff	___fladd@b+2,?___fladd+2
 15003  0050E0  C04A  F04A         	movff	___fladd@b+3,?___fladd+3
 15004  0050E4                     l678:
 15005  0050E4  0012               	return		;funcret
 15006  0050E6                     __end_of___fladd:
 15007                           	callstack 0
 15008                           
 15009 ;; *************** function ___flmul *****************
 15010 ;; Defined at:
 15011 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcmul.c"
 15012 ;; Parameters:    Size  Location     Type
 15013 ;;  b               4   14[COMRAM] unsigned char 
 15014 ;;  a               4   18[COMRAM] unsigned char 
 15015 ;; Auto vars:     Size  Location     Type
 15016 ;;  prod            4   33[COMRAM] struct .
 15017 ;;  grs             4   27[COMRAM] unsigned long 
 15018 ;;  temp            2   37[COMRAM] struct .
 15019 ;;  bexp            1   32[COMRAM] unsigned char 
 15020 ;;  aexp            1   31[COMRAM] unsigned char 
 15021 ;;  sign            1   26[COMRAM] unsigned char 
 15022 ;; Return value:  Size  Location     Type
 15023 ;;                  4   14[COMRAM] unsigned char 
 15024 ;; Registers used:
 15025 ;;		wreg, status,2, status,0, prodl, prodh
 15026 ;; Tracked objects:
 15027 ;;		On entry : 0/0
 15028 ;;		On exit  : 0/0
 15029 ;;		Unchanged: 0/0
 15030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15031 ;;      Params:         8       0       0       0       0       0       0       0       0
 15032 ;;      Locals:        13       0       0       0       0       0       0       0       0
 15033 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15034 ;;      Totals:        25       0       0       0       0       0       0       0       0
 15035 ;;Total ram usage:       25 bytes
 15036 ;; Hardware stack levels used:    1
 15037 ;; This function calls:
 15038 ;;		Nothing
 15039 ;; This function is called by:
 15040 ;;		_calculate_resistance
 15041 ;;		_logf
 15042 ;;		_efgtoa
 15043 ;;		_powf
 15044 ;;		_scalbnf
 15045 ;;		_sqrtf
 15046 ;; This function uses a non-reentrant model
 15047 ;;
 15048                           
 15049                           	psect	text42
 15050  0055A4                     __ptext42:
 15051                           	callstack 0
 15052  0055A4                     ___flmul:
 15053                           	callstack 26
 15054  0055A4  5012               	movf	(___flmul@b+3)^0,w,c
 15055  0055A6  0B80               	andlw	128
 15056  0055A8  6E1B               	movwf	___flmul@sign^0,c
 15057  0055AA  5012               	movf	(___flmul@b+3)^0,w,c
 15058  0055AC  2412               	addwf	(___flmul@b+3)^0,w,c
 15059  0055AE  6E21               	movwf	___flmul@bexp^0,c
 15060  0055B0  AE11               	btfss	(___flmul@b+2)^0,7,c
 15061  0055B2  EFDD  F02A         	goto	u4561
 15062  0055B6  EFDF  F02A         	goto	u4560
 15063  0055BA                     u4561:
 15064  0055BA  EFE0  F02A         	goto	l4240
 15065  0055BE                     u4560:
 15066  0055BE  8021               	bsf	___flmul@bexp^0,0,c
 15067  0055C0                     l4240:
 15068  0055C0  5021               	movf	___flmul@bexp^0,w,c
 15069  0055C2  B4D8               	btfsc	status,2,c
 15070  0055C4  EFE6  F02A         	goto	u4571
 15071  0055C8  EFE8  F02A         	goto	u4570
 15072  0055CC                     u4571:
 15073  0055CC  EFFB  F02A         	goto	l4248
 15074  0055D0                     u4570:
 15075  0055D0  2821               	incf	___flmul@bexp^0,w,c
 15076  0055D2  A4D8               	btfss	status,2,c
 15077  0055D4  EFEE  F02A         	goto	u4581
 15078  0055D8  EFF0  F02A         	goto	u4580
 15079  0055DC                     u4581:
 15080  0055DC  EFF8  F02A         	goto	l4246
 15081  0055E0                     u4580:
 15082  0055E0  0E00               	movlw	0
 15083  0055E2  6E0F               	movwf	___flmul@b^0,c
 15084  0055E4  0E00               	movlw	0
 15085  0055E6  6E10               	movwf	(___flmul@b+1)^0,c
 15086  0055E8  0E00               	movlw	0
 15087  0055EA  6E11               	movwf	(___flmul@b+2)^0,c
 15088  0055EC  0E00               	movlw	0
 15089  0055EE  6E12               	movwf	(___flmul@b+3)^0,c
 15090  0055F0                     l4246:
 15091  0055F0  8E11               	bsf	(___flmul@b+2)^0,7,c
 15092  0055F2  EF03  F02B         	goto	l4250
 15093  0055F6                     l4248:
 15094  0055F6  0E00               	movlw	0
 15095  0055F8  6E0F               	movwf	___flmul@b^0,c
 15096  0055FA  0E00               	movlw	0
 15097  0055FC  6E10               	movwf	(___flmul@b+1)^0,c
 15098  0055FE  0E00               	movlw	0
 15099  005600  6E11               	movwf	(___flmul@b+2)^0,c
 15100  005602  0E00               	movlw	0
 15101  005604  6E12               	movwf	(___flmul@b+3)^0,c
 15102  005606                     l4250:
 15103  005606  5016               	movf	(___flmul@a+3)^0,w,c
 15104  005608  0B80               	andlw	128
 15105  00560A  1A1B               	xorwf	___flmul@sign^0,f,c
 15106  00560C  5016               	movf	(___flmul@a+3)^0,w,c
 15107  00560E  2416               	addwf	(___flmul@a+3)^0,w,c
 15108  005610  6E20               	movwf	___flmul@aexp^0,c
 15109  005612  AE15               	btfss	(___flmul@a+2)^0,7,c
 15110  005614  EF0E  F02B         	goto	u4591
 15111  005618  EF10  F02B         	goto	u4590
 15112  00561C                     u4591:
 15113  00561C  EF11  F02B         	goto	l4258
 15114  005620                     u4590:
 15115  005620  8020               	bsf	___flmul@aexp^0,0,c
 15116  005622                     l4258:
 15117  005622  5020               	movf	___flmul@aexp^0,w,c
 15118  005624  B4D8               	btfsc	status,2,c
 15119  005626  EF17  F02B         	goto	u4601
 15120  00562A  EF19  F02B         	goto	u4600
 15121  00562E                     u4601:
 15122  00562E  EF2C  F02B         	goto	l4266
 15123  005632                     u4600:
 15124  005632  2820               	incf	___flmul@aexp^0,w,c
 15125  005634  A4D8               	btfss	status,2,c
 15126  005636  EF1F  F02B         	goto	u4611
 15127  00563A  EF21  F02B         	goto	u4610
 15128  00563E                     u4611:
 15129  00563E  EF29  F02B         	goto	l4264
 15130  005642                     u4610:
 15131  005642  0E00               	movlw	0
 15132  005644  6E13               	movwf	___flmul@a^0,c
 15133  005646  0E00               	movlw	0
 15134  005648  6E14               	movwf	(___flmul@a+1)^0,c
 15135  00564A  0E00               	movlw	0
 15136  00564C  6E15               	movwf	(___flmul@a+2)^0,c
 15137  00564E  0E00               	movlw	0
 15138  005650  6E16               	movwf	(___flmul@a+3)^0,c
 15139  005652                     l4264:
 15140  005652  8E15               	bsf	(___flmul@a+2)^0,7,c
 15141  005654  EF34  F02B         	goto	l755
 15142  005658                     l4266:
 15143  005658  0E00               	movlw	0
 15144  00565A  6E13               	movwf	___flmul@a^0,c
 15145  00565C  0E00               	movlw	0
 15146  00565E  6E14               	movwf	(___flmul@a+1)^0,c
 15147  005660  0E00               	movlw	0
 15148  005662  6E15               	movwf	(___flmul@a+2)^0,c
 15149  005664  0E00               	movlw	0
 15150  005666  6E16               	movwf	(___flmul@a+3)^0,c
 15151  005668                     l755:
 15152  005668  5020               	movf	___flmul@aexp^0,w,c
 15153  00566A  B4D8               	btfsc	status,2,c
 15154  00566C  EF3A  F02B         	goto	u4621
 15155  005670  EF3C  F02B         	goto	u4620
 15156  005674                     u4621:
 15157  005674  EF44  F02B         	goto	l4270
 15158  005678                     u4620:
 15159  005678  5021               	movf	___flmul@bexp^0,w,c
 15160  00567A  A4D8               	btfss	status,2,c
 15161  00567C  EF42  F02B         	goto	u4631
 15162  005680  EF44  F02B         	goto	u4630
 15163  005684                     u4631:
 15164  005684  EF4E  F02B         	goto	l4274
 15165  005688                     u4630:
 15166  005688                     l4270:
 15167  005688  0E00               	movlw	0
 15168  00568A  6E0F               	movwf	?___flmul^0,c
 15169  00568C  0E00               	movlw	0
 15170  00568E  6E10               	movwf	(?___flmul+1)^0,c
 15171  005690  0E00               	movlw	0
 15172  005692  6E11               	movwf	(?___flmul+2)^0,c
 15173  005694  0E00               	movlw	0
 15174  005696  6E12               	movwf	(?___flmul+3)^0,c
 15175  005698  EFE6  F02C         	goto	l759
 15176  00569C                     l4274:
 15177  00569C  5015               	movf	(___flmul@a+2)^0,w,c
 15178  00569E  020F               	mulwf	___flmul@b^0,c
 15179  0056A0  CFF3 F026          	movff	prodl,___flmul@temp
 15180  0056A4  CFF4 F027          	movff	prodh,___flmul@temp+1
 15181  0056A8  5026               	movf	___flmul@temp^0,w,c
 15182  0056AA  6E1C               	movwf	___flmul@grs^0,c
 15183  0056AC  6A1D               	clrf	(___flmul@grs+1)^0,c
 15184  0056AE  6A1E               	clrf	(___flmul@grs+2)^0,c
 15185  0056B0  6A1F               	clrf	(___flmul@grs+3)^0,c
 15186  0056B2  5027               	movf	(___flmul@temp+1)^0,w,c
 15187  0056B4  6E22               	movwf	___flmul@prod^0,c
 15188  0056B6  6A23               	clrf	(___flmul@prod+1)^0,c
 15189  0056B8  6A24               	clrf	(___flmul@prod+2)^0,c
 15190  0056BA  6A25               	clrf	(___flmul@prod+3)^0,c
 15191  0056BC  5014               	movf	(___flmul@a+1)^0,w,c
 15192  0056BE  0210               	mulwf	(___flmul@b+1)^0,c
 15193  0056C0  CFF3 F026          	movff	prodl,___flmul@temp
 15194  0056C4  CFF4 F027          	movff	prodh,___flmul@temp+1
 15195  0056C8  5026               	movf	___flmul@temp^0,w,c
 15196  0056CA  261C               	addwf	___flmul@grs^0,f,c
 15197  0056CC  0E00               	movlw	0
 15198  0056CE  221D               	addwfc	(___flmul@grs+1)^0,f,c
 15199  0056D0  221E               	addwfc	(___flmul@grs+2)^0,f,c
 15200  0056D2  221F               	addwfc	(___flmul@grs+3)^0,f,c
 15201  0056D4  5027               	movf	(___flmul@temp+1)^0,w,c
 15202  0056D6  2622               	addwf	___flmul@prod^0,f,c
 15203  0056D8  0E00               	movlw	0
 15204  0056DA  2223               	addwfc	(___flmul@prod+1)^0,f,c
 15205  0056DC  2224               	addwfc	(___flmul@prod+2)^0,f,c
 15206  0056DE  2225               	addwfc	(___flmul@prod+3)^0,f,c
 15207  0056E0  5013               	movf	___flmul@a^0,w,c
 15208  0056E2  0211               	mulwf	(___flmul@b+2)^0,c
 15209  0056E4  CFF3 F026          	movff	prodl,___flmul@temp
 15210  0056E8  CFF4 F027          	movff	prodh,___flmul@temp+1
 15211  0056EC  5026               	movf	___flmul@temp^0,w,c
 15212  0056EE  261C               	addwf	___flmul@grs^0,f,c
 15213  0056F0  0E00               	movlw	0
 15214  0056F2  221D               	addwfc	(___flmul@grs+1)^0,f,c
 15215  0056F4  221E               	addwfc	(___flmul@grs+2)^0,f,c
 15216  0056F6  221F               	addwfc	(___flmul@grs+3)^0,f,c
 15217  0056F8  5027               	movf	(___flmul@temp+1)^0,w,c
 15218  0056FA  2622               	addwf	___flmul@prod^0,f,c
 15219  0056FC  0E00               	movlw	0
 15220  0056FE  2223               	addwfc	(___flmul@prod+1)^0,f,c
 15221  005700  2224               	addwfc	(___flmul@prod+2)^0,f,c
 15222  005702  2225               	addwfc	(___flmul@prod+3)^0,f,c
 15223  005704  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
 15224  005708  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
 15225  00570C  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
 15226  005710  6A1C               	clrf	___flmul@grs^0,c
 15227  005712  5013               	movf	___flmul@a^0,w,c
 15228  005714  0210               	mulwf	(___flmul@b+1)^0,c
 15229  005716  CFF3 F026          	movff	prodl,___flmul@temp
 15230  00571A  CFF4 F027          	movff	prodh,___flmul@temp+1
 15231  00571E  5026               	movf	___flmul@temp^0,w,c
 15232  005720  261C               	addwf	___flmul@grs^0,f,c
 15233  005722  5027               	movf	(___flmul@temp+1)^0,w,c
 15234  005724  221D               	addwfc	(___flmul@grs+1)^0,f,c
 15235  005726  0E00               	movlw	0
 15236  005728  221E               	addwfc	(___flmul@grs+2)^0,f,c
 15237  00572A  0E00               	movlw	0
 15238  00572C  221F               	addwfc	(___flmul@grs+3)^0,f,c
 15239  00572E  5014               	movf	(___flmul@a+1)^0,w,c
 15240  005730  020F               	mulwf	___flmul@b^0,c
 15241  005732  CFF3 F026          	movff	prodl,___flmul@temp
 15242  005736  CFF4 F027          	movff	prodh,___flmul@temp+1
 15243  00573A  5026               	movf	___flmul@temp^0,w,c
 15244  00573C  261C               	addwf	___flmul@grs^0,f,c
 15245  00573E  5027               	movf	(___flmul@temp+1)^0,w,c
 15246  005740  221D               	addwfc	(___flmul@grs+1)^0,f,c
 15247  005742  0E00               	movlw	0
 15248  005744  221E               	addwfc	(___flmul@grs+2)^0,f,c
 15249  005746  0E00               	movlw	0
 15250  005748  221F               	addwfc	(___flmul@grs+3)^0,f,c
 15251  00574A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
 15252  00574E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
 15253  005752  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
 15254  005756  6A1C               	clrf	___flmul@grs^0,c
 15255  005758  5013               	movf	___flmul@a^0,w,c
 15256  00575A  020F               	mulwf	___flmul@b^0,c
 15257  00575C  CFF3 F026          	movff	prodl,___flmul@temp
 15258  005760  CFF4 F027          	movff	prodh,___flmul@temp+1
 15259  005764  5026               	movf	___flmul@temp^0,w,c
 15260  005766  261C               	addwf	___flmul@grs^0,f,c
 15261  005768  5027               	movf	(___flmul@temp+1)^0,w,c
 15262  00576A  221D               	addwfc	(___flmul@grs+1)^0,f,c
 15263  00576C  0E00               	movlw	0
 15264  00576E  221E               	addwfc	(___flmul@grs+2)^0,f,c
 15265  005770  0E00               	movlw	0
 15266  005772  221F               	addwfc	(___flmul@grs+3)^0,f,c
 15267  005774  5015               	movf	(___flmul@a+2)^0,w,c
 15268  005776  0210               	mulwf	(___flmul@b+1)^0,c
 15269  005778  CFF3 F026          	movff	prodl,___flmul@temp
 15270  00577C  CFF4 F027          	movff	prodh,___flmul@temp+1
 15271  005780  5026               	movf	___flmul@temp^0,w,c
 15272  005782  2622               	addwf	___flmul@prod^0,f,c
 15273  005784  5027               	movf	(___flmul@temp+1)^0,w,c
 15274  005786  2223               	addwfc	(___flmul@prod+1)^0,f,c
 15275  005788  0E00               	movlw	0
 15276  00578A  2224               	addwfc	(___flmul@prod+2)^0,f,c
 15277  00578C  0E00               	movlw	0
 15278  00578E  2225               	addwfc	(___flmul@prod+3)^0,f,c
 15279  005790  5014               	movf	(___flmul@a+1)^0,w,c
 15280  005792  0211               	mulwf	(___flmul@b+2)^0,c
 15281  005794  CFF3 F026          	movff	prodl,___flmul@temp
 15282  005798  CFF4 F027          	movff	prodh,___flmul@temp+1
 15283  00579C  5026               	movf	___flmul@temp^0,w,c
 15284  00579E  2622               	addwf	___flmul@prod^0,f,c
 15285  0057A0  5027               	movf	(___flmul@temp+1)^0,w,c
 15286  0057A2  2223               	addwfc	(___flmul@prod+1)^0,f,c
 15287  0057A4  0E00               	movlw	0
 15288  0057A6  2224               	addwfc	(___flmul@prod+2)^0,f,c
 15289  0057A8  0E00               	movlw	0
 15290  0057AA  2225               	addwfc	(___flmul@prod+3)^0,f,c
 15291  0057AC  5015               	movf	(___flmul@a+2)^0,w,c
 15292  0057AE  0211               	mulwf	(___flmul@b+2)^0,c
 15293  0057B0  CFF3 F026          	movff	prodl,___flmul@temp
 15294  0057B4  CFF4 F027          	movff	prodh,___flmul@temp+1
 15295  0057B8  5026               	movf	___flmul@temp^0,w,c
 15296  0057BA  6E17               	movwf	??___flmul^0,c
 15297  0057BC  5027               	movf	(___flmul@temp+1)^0,w,c
 15298  0057BE  6E18               	movwf	(??___flmul+1)^0,c
 15299  0057C0  6A19               	clrf	(??___flmul+2)^0,c
 15300  0057C2  6A1A               	clrf	(??___flmul+3)^0,c
 15301  0057C4  C019  F01A         	movff	??___flmul+2,??___flmul+3
 15302  0057C8  C018  F019         	movff	??___flmul+1,??___flmul+2
 15303  0057CC  C017  F018         	movff	??___flmul,??___flmul+1
 15304  0057D0  6A17               	clrf	??___flmul^0,c
 15305  0057D2  5017               	movf	??___flmul^0,w,c
 15306  0057D4  2622               	addwf	___flmul@prod^0,f,c
 15307  0057D6  5018               	movf	(??___flmul+1)^0,w,c
 15308  0057D8  2223               	addwfc	(___flmul@prod+1)^0,f,c
 15309  0057DA  5019               	movf	(??___flmul+2)^0,w,c
 15310  0057DC  2224               	addwfc	(___flmul@prod+2)^0,f,c
 15311  0057DE  501A               	movf	(??___flmul+3)^0,w,c
 15312  0057E0  2225               	addwfc	(___flmul@prod+3)^0,f,c
 15313  0057E2  C01C  F017         	movff	___flmul@grs,??___flmul
 15314  0057E6  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
 15315  0057EA  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
 15316  0057EE  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
 15317  0057F2  0E19               	movlw	25
 15318  0057F4  EF01  F02C         	goto	u4640
 15319  0057F8                     u4645:
 15320  0057F8  90D8               	bcf	status,0,c
 15321  0057FA  321A               	rrcf	(??___flmul+3)^0,f,c
 15322  0057FC  3219               	rrcf	(??___flmul+2)^0,f,c
 15323  0057FE  3218               	rrcf	(??___flmul+1)^0,f,c
 15324  005800  3217               	rrcf	??___flmul^0,f,c
 15325  005802                     u4640:
 15326  005802  2EE8               	decfsz	wreg,f,c
 15327  005804  EFFC  F02B         	goto	u4645
 15328  005808  5017               	movf	??___flmul^0,w,c
 15329  00580A  2622               	addwf	___flmul@prod^0,f,c
 15330  00580C  5018               	movf	(??___flmul+1)^0,w,c
 15331  00580E  2223               	addwfc	(___flmul@prod+1)^0,f,c
 15332  005810  5019               	movf	(??___flmul+2)^0,w,c
 15333  005812  2224               	addwfc	(___flmul@prod+2)^0,f,c
 15334  005814  501A               	movf	(??___flmul+3)^0,w,c
 15335  005816  2225               	addwfc	(___flmul@prod+3)^0,f,c
 15336  005818  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
 15337  00581C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
 15338  005820  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
 15339  005824  6A1C               	clrf	___flmul@grs^0,c
 15340  005826  5020               	movf	___flmul@aexp^0,w,c
 15341  005828  C021  F017         	movff	___flmul@bexp,??___flmul
 15342  00582C  6A18               	clrf	(??___flmul+1)^0,c
 15343  00582E  2617               	addwf	??___flmul^0,f,c
 15344  005830  0E00               	movlw	0
 15345  005832  2218               	addwfc	(??___flmul+1)^0,f,c
 15346  005834  0E82               	movlw	130
 15347  005836  2417               	addwf	??___flmul^0,w,c
 15348  005838  6E26               	movwf	___flmul@temp^0,c
 15349  00583A  0EFF               	movlw	255
 15350  00583C  2018               	addwfc	(??___flmul+1)^0,w,c
 15351  00583E  6E27               	movwf	(___flmul@temp+1)^0,c
 15352  005840  EF37  F02C         	goto	l4322
 15353  005844                     l4316:
 15354  005844  90D8               	bcf	status,0,c
 15355  005846  3622               	rlcf	___flmul@prod^0,f,c
 15356  005848  3623               	rlcf	(___flmul@prod+1)^0,f,c
 15357  00584A  3624               	rlcf	(___flmul@prod+2)^0,f,c
 15358  00584C  3625               	rlcf	(___flmul@prod+3)^0,f,c
 15359  00584E  AE1F               	btfss	(___flmul@grs+3)^0,7,c
 15360  005850  EF2C  F02C         	goto	u4651
 15361  005854  EF2E  F02C         	goto	u4650
 15362  005858                     u4651:
 15363  005858  EF2F  F02C         	goto	l762
 15364  00585C                     u4650:
 15365  00585C  8022               	bsf	___flmul@prod^0,0,c
 15366  00585E                     l762:
 15367  00585E  90D8               	bcf	status,0,c
 15368  005860  361C               	rlcf	___flmul@grs^0,f,c
 15369  005862  361D               	rlcf	(___flmul@grs+1)^0,f,c
 15370  005864  361E               	rlcf	(___flmul@grs+2)^0,f,c
 15371  005866  361F               	rlcf	(___flmul@grs+3)^0,f,c
 15372  005868  0626               	decf	___flmul@temp^0,f,c
 15373  00586A  A0D8               	btfss	status,0,c
 15374  00586C  0627               	decf	(___flmul@temp+1)^0,f,c
 15375  00586E                     l4322:
 15376  00586E  AE24               	btfss	(___flmul@prod+2)^0,7,c
 15377  005870  EF3C  F02C         	goto	u4661
 15378  005874  EF3E  F02C         	goto	u4660
 15379  005878                     u4661:
 15380  005878  EF22  F02C         	goto	l4316
 15381  00587C                     u4660:
 15382  00587C  0E00               	movlw	0
 15383  00587E  6E20               	movwf	___flmul@aexp^0,c
 15384  005880  AE1F               	btfss	(___flmul@grs+3)^0,7,c
 15385  005882  EF45  F02C         	goto	u4671
 15386  005886  EF47  F02C         	goto	u4670
 15387  00588A                     u4671:
 15388  00588A  EF6B  F02C         	goto	l764
 15389  00588E                     u4670:
 15390  00588E  0EFF               	movlw	255
 15391  005890  141C               	andwf	___flmul@grs^0,w,c
 15392  005892  6E17               	movwf	??___flmul^0,c
 15393  005894  0EFF               	movlw	255
 15394  005896  141D               	andwf	(___flmul@grs+1)^0,w,c
 15395  005898  6E18               	movwf	(??___flmul+1)^0,c
 15396  00589A  0EFF               	movlw	255
 15397  00589C  141E               	andwf	(___flmul@grs+2)^0,w,c
 15398  00589E  6E19               	movwf	(??___flmul+2)^0,c
 15399  0058A0  0E7F               	movlw	127
 15400  0058A2  141F               	andwf	(___flmul@grs+3)^0,w,c
 15401  0058A4  6E1A               	movwf	(??___flmul+3)^0,c
 15402  0058A6  5017               	movf	??___flmul^0,w,c
 15403  0058A8  1018               	iorwf	(??___flmul+1)^0,w,c
 15404  0058AA  1019               	iorwf	(??___flmul+2)^0,w,c
 15405  0058AC  101A               	iorwf	(??___flmul+3)^0,w,c
 15406  0058AE  B4D8               	btfsc	status,2,c
 15407  0058B0  EF5C  F02C         	goto	u4681
 15408  0058B4  EF5E  F02C         	goto	u4680
 15409  0058B8                     u4681:
 15410  0058B8  EF62  F02C         	goto	l765
 15411  0058BC                     u4680:
 15412  0058BC                     l4330:
 15413  0058BC  0E01               	movlw	1
 15414  0058BE  6E20               	movwf	___flmul@aexp^0,c
 15415  0058C0  EF6B  F02C         	goto	l764
 15416  0058C4                     l765:
 15417  0058C4  A022               	btfss	___flmul@prod^0,0,c
 15418  0058C6  EF67  F02C         	goto	u4691
 15419  0058CA  EF69  F02C         	goto	u4690
 15420  0058CE                     u4691:
 15421  0058CE  EF6B  F02C         	goto	l764
 15422  0058D2                     u4690:
 15423  0058D2  EF5E  F02C         	goto	l4330
 15424  0058D6                     l764:
 15425  0058D6  5020               	movf	___flmul@aexp^0,w,c
 15426  0058D8  B4D8               	btfsc	status,2,c
 15427  0058DA  EF71  F02C         	goto	u4701
 15428  0058DE  EF73  F02C         	goto	u4700
 15429  0058E2                     u4701:
 15430  0058E2  EF97  F02C         	goto	l4342
 15431  0058E6                     u4700:
 15432  0058E6  0E01               	movlw	1
 15433  0058E8  2622               	addwf	___flmul@prod^0,f,c
 15434  0058EA  0E00               	movlw	0
 15435  0058EC  2223               	addwfc	(___flmul@prod+1)^0,f,c
 15436  0058EE  2224               	addwfc	(___flmul@prod+2)^0,f,c
 15437  0058F0  2225               	addwfc	(___flmul@prod+3)^0,f,c
 15438  0058F2  A025               	btfss	(___flmul@prod+3)^0,0,c
 15439  0058F4  EF7E  F02C         	goto	u4711
 15440  0058F8  EF80  F02C         	goto	u4710
 15441  0058FC                     u4711:
 15442  0058FC  EF97  F02C         	goto	l4342
 15443  005900                     u4710:
 15444  005900  C022  F017         	movff	___flmul@prod,??___flmul
 15445  005904  C023  F018         	movff	___flmul@prod+1,??___flmul+1
 15446  005908  C024  F019         	movff	___flmul@prod+2,??___flmul+2
 15447  00590C  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
 15448  005910  341A               	rlcf	(??___flmul+3)^0,w,c
 15449  005912  321A               	rrcf	(??___flmul+3)^0,f,c
 15450  005914  3219               	rrcf	(??___flmul+2)^0,f,c
 15451  005916  3218               	rrcf	(??___flmul+1)^0,f,c
 15452  005918  3217               	rrcf	??___flmul^0,f,c
 15453  00591A  C017  F022         	movff	??___flmul,___flmul@prod
 15454  00591E  C018  F023         	movff	??___flmul+1,___flmul@prod+1
 15455  005922  C019  F024         	movff	??___flmul+2,___flmul@prod+2
 15456  005926  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
 15457  00592A  4A26               	infsnz	___flmul@temp^0,f,c
 15458  00592C  2A27               	incf	(___flmul@temp+1)^0,f,c
 15459  00592E                     l4342:
 15460  00592E  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 15461  005930  EFA2  F02C         	goto	u4721
 15462  005934  5027               	movf	(___flmul@temp+1)^0,w,c
 15463  005936  E108               	bnz	u4720
 15464  005938  2826               	incf	___flmul@temp^0,w,c
 15465  00593A  A0D8               	btfss	status,0,c
 15466  00593C  EFA2  F02C         	goto	u4721
 15467  005940  EFA4  F02C         	goto	u4720
 15468  005944                     u4721:
 15469  005944  EFAE  F02C         	goto	l4346
 15470  005948                     u4720:
 15471  005948  0E00               	movlw	0
 15472  00594A  6E22               	movwf	___flmul@prod^0,c
 15473  00594C  0E00               	movlw	0
 15474  00594E  6E23               	movwf	(___flmul@prod+1)^0,c
 15475  005950  0E80               	movlw	128
 15476  005952  6E24               	movwf	(___flmul@prod+2)^0,c
 15477  005954  0E7F               	movlw	127
 15478  005956  6E25               	movwf	(___flmul@prod+3)^0,c
 15479  005958  EFDC  F02C         	goto	l4358
 15480  00595C                     l4346:
 15481  00595C  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 15482  00595E  EFBB  F02C         	goto	u4730
 15483  005962  5027               	movf	(___flmul@temp+1)^0,w,c
 15484  005964  E106               	bnz	u4731
 15485  005966  0426               	decf	___flmul@temp^0,w,c
 15486  005968  B0D8               	btfsc	status,0,c
 15487  00596A  EFB9  F02C         	goto	u4731
 15488  00596E  EFBB  F02C         	goto	u4730
 15489  005972                     u4731:
 15490  005972  EFC7  F02C         	goto	l772
 15491  005976                     u4730:
 15492  005976  0E00               	movlw	0
 15493  005978  6E22               	movwf	___flmul@prod^0,c
 15494  00597A  0E00               	movlw	0
 15495  00597C  6E23               	movwf	(___flmul@prod+1)^0,c
 15496  00597E  0E00               	movlw	0
 15497  005980  6E24               	movwf	(___flmul@prod+2)^0,c
 15498  005982  0E00               	movlw	0
 15499  005984  6E25               	movwf	(___flmul@prod+3)^0,c
 15500  005986  0E00               	movlw	0
 15501  005988  6E1B               	movwf	___flmul@sign^0,c
 15502  00598A  EFDC  F02C         	goto	l4358
 15503  00598E                     l772:
 15504  00598E  C026  F021         	movff	___flmul@temp,___flmul@bexp
 15505  005992  0EFF               	movlw	255
 15506  005994  1622               	andwf	___flmul@prod^0,f,c
 15507  005996  0EFF               	movlw	255
 15508  005998  1623               	andwf	(___flmul@prod+1)^0,f,c
 15509  00599A  0E7F               	movlw	127
 15510  00599C  1624               	andwf	(___flmul@prod+2)^0,f,c
 15511  00599E  0E00               	movlw	0
 15512  0059A0  1625               	andwf	(___flmul@prod+3)^0,f,c
 15513  0059A2  A021               	btfss	___flmul@bexp^0,0,c
 15514  0059A4  EFD6  F02C         	goto	u4741
 15515  0059A8  EFD8  F02C         	goto	u4740
 15516  0059AC                     u4741:
 15517  0059AC  EFD9  F02C         	goto	l4356
 15518  0059B0                     u4740:
 15519  0059B0  8E24               	bsf	(___flmul@prod+2)^0,7,c
 15520  0059B2                     l4356:
 15521  0059B2  90D8               	bcf	status,0,c
 15522  0059B4  3021               	rrcf	___flmul@bexp^0,w,c
 15523  0059B6  6E25               	movwf	(___flmul@prod+3)^0,c
 15524  0059B8                     l4358:
 15525  0059B8  501B               	movf	___flmul@sign^0,w,c
 15526  0059BA  1225               	iorwf	(___flmul@prod+3)^0,f,c
 15527  0059BC  C022  F00F         	movff	___flmul@prod,?___flmul
 15528  0059C0  C023  F010         	movff	___flmul@prod+1,?___flmul+1
 15529  0059C4  C024  F011         	movff	___flmul@prod+2,?___flmul+2
 15530  0059C8  C025  F012         	movff	___flmul@prod+3,?___flmul+3
 15531  0059CC                     l759:
 15532  0059CC  0012               	return		;funcret
 15533  0059CE                     __end_of___flmul:
 15534                           	callstack 0
 15535                           
 15536 ;; *************** function ___fldiv *****************
 15537 ;; Defined at:
 15538 ;;		line 11 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\sprcdiv.c"
 15539 ;; Parameters:    Size  Location     Type
 15540 ;;  b               4   39[COMRAM] unsigned char 
 15541 ;;  a               4   43[COMRAM] unsigned char 
 15542 ;; Auto vars:     Size  Location     Type
 15543 ;;  grs             4   58[COMRAM] unsigned long 
 15544 ;;  rem             4   51[COMRAM] unsigned long 
 15545 ;;  new_exp         2   56[COMRAM] short 
 15546 ;;  aexp            1   63[COMRAM] unsigned char 
 15547 ;;  bexp            1   62[COMRAM] unsigned char 
 15548 ;;  sign            1   55[COMRAM] unsigned char 
 15549 ;; Return value:  Size  Location     Type
 15550 ;;                  4   39[COMRAM] unsigned char 
 15551 ;; Registers used:
 15552 ;;		wreg, status,2, status,0
 15553 ;; Tracked objects:
 15554 ;;		On entry : 0/0
 15555 ;;		On exit  : 0/0
 15556 ;;		Unchanged: 0/0
 15557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15558 ;;      Params:         8       0       0       0       0       0       0       0       0
 15559 ;;      Locals:        13       0       0       0       0       0       0       0       0
 15560 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15561 ;;      Totals:        25       0       0       0       0       0       0       0       0
 15562 ;;Total ram usage:       25 bytes
 15563 ;; Hardware stack levels used:    1
 15564 ;; This function calls:
 15565 ;;		Nothing
 15566 ;; This function is called by:
 15567 ;;		_main
 15568 ;;		_read_mq
 15569 ;;		_calculate_resistance
 15570 ;;		_gas_plot_log_scale
 15571 ;;		_logf
 15572 ;;		_efgtoa
 15573 ;;		_powf
 15574 ;;		_SensorCalibration
 15575 ;; This function uses a non-reentrant model
 15576 ;;
 15577                           
 15578                           	psect	text43
 15579  0059CE                     __ptext43:
 15580                           	callstack 0
 15581  0059CE                     ___fldiv:
 15582                           	callstack 26
 15583  0059CE  502B               	movf	(___fldiv@b+3)^0,w,c
 15584  0059D0  0B80               	andlw	128
 15585  0059D2  6E38               	movwf	___fldiv@sign^0,c
 15586  0059D4  502B               	movf	(___fldiv@b+3)^0,w,c
 15587  0059D6  242B               	addwf	(___fldiv@b+3)^0,w,c
 15588  0059D8  6E3F               	movwf	___fldiv@bexp^0,c
 15589  0059DA  AE2A               	btfss	(___fldiv@b+2)^0,7,c
 15590  0059DC  EFF2  F02C         	goto	u4331
 15591  0059E0  EFF4  F02C         	goto	u4330
 15592  0059E4                     u4331:
 15593  0059E4  EFF5  F02C         	goto	l4102
 15594  0059E8                     u4330:
 15595  0059E8  803F               	bsf	___fldiv@bexp^0,0,c
 15596  0059EA                     l4102:
 15597  0059EA  503F               	movf	___fldiv@bexp^0,w,c
 15598  0059EC  B4D8               	btfsc	status,2,c
 15599  0059EE  EFFB  F02C         	goto	u4341
 15600  0059F2  EFFD  F02C         	goto	u4340
 15601  0059F6                     u4341:
 15602  0059F6  EF12  F02D         	goto	l4112
 15603  0059FA                     u4340:
 15604  0059FA  283F               	incf	___fldiv@bexp^0,w,c
 15605  0059FC  A4D8               	btfss	status,2,c
 15606  0059FE  EF03  F02D         	goto	u4351
 15607  005A02  EF05  F02D         	goto	u4350
 15608  005A06                     u4351:
 15609  005A06  EF0D  F02D         	goto	l4108
 15610  005A0A                     u4350:
 15611  005A0A  0E00               	movlw	0
 15612  005A0C  6E28               	movwf	___fldiv@b^0,c
 15613  005A0E  0E00               	movlw	0
 15614  005A10  6E29               	movwf	(___fldiv@b+1)^0,c
 15615  005A12  0E00               	movlw	0
 15616  005A14  6E2A               	movwf	(___fldiv@b+2)^0,c
 15617  005A16  0E00               	movlw	0
 15618  005A18  6E2B               	movwf	(___fldiv@b+3)^0,c
 15619  005A1A                     l4108:
 15620  005A1A  8E2A               	bsf	(___fldiv@b+2)^0,7,c
 15621  005A1C  0E00               	movlw	0
 15622  005A1E  6E2B               	movwf	(___fldiv@b+3)^0,c
 15623  005A20  EF1A  F02D         	goto	l4114
 15624  005A24                     l4112:
 15625  005A24  0E00               	movlw	0
 15626  005A26  6E28               	movwf	___fldiv@b^0,c
 15627  005A28  0E00               	movlw	0
 15628  005A2A  6E29               	movwf	(___fldiv@b+1)^0,c
 15629  005A2C  0E00               	movlw	0
 15630  005A2E  6E2A               	movwf	(___fldiv@b+2)^0,c
 15631  005A30  0E00               	movlw	0
 15632  005A32  6E2B               	movwf	(___fldiv@b+3)^0,c
 15633  005A34                     l4114:
 15634  005A34  502F               	movf	(___fldiv@a+3)^0,w,c
 15635  005A36  0B80               	andlw	128
 15636  005A38  1A38               	xorwf	___fldiv@sign^0,f,c
 15637  005A3A  502F               	movf	(___fldiv@a+3)^0,w,c
 15638  005A3C  242F               	addwf	(___fldiv@a+3)^0,w,c
 15639  005A3E  6E40               	movwf	___fldiv@aexp^0,c
 15640  005A40  AE2E               	btfss	(___fldiv@a+2)^0,7,c
 15641  005A42  EF25  F02D         	goto	u4361
 15642  005A46  EF27  F02D         	goto	u4360
 15643  005A4A                     u4361:
 15644  005A4A  EF28  F02D         	goto	l4122
 15645  005A4E                     u4360:
 15646  005A4E  8040               	bsf	___fldiv@aexp^0,0,c
 15647  005A50                     l4122:
 15648  005A50  5040               	movf	___fldiv@aexp^0,w,c
 15649  005A52  B4D8               	btfsc	status,2,c
 15650  005A54  EF2E  F02D         	goto	u4371
 15651  005A58  EF30  F02D         	goto	u4370
 15652  005A5C                     u4371:
 15653  005A5C  EF45  F02D         	goto	l4132
 15654  005A60                     u4370:
 15655  005A60  2840               	incf	___fldiv@aexp^0,w,c
 15656  005A62  A4D8               	btfss	status,2,c
 15657  005A64  EF36  F02D         	goto	u4381
 15658  005A68  EF38  F02D         	goto	u4380
 15659  005A6C                     u4381:
 15660  005A6C  EF40  F02D         	goto	l4128
 15661  005A70                     u4380:
 15662  005A70  0E00               	movlw	0
 15663  005A72  6E2C               	movwf	___fldiv@a^0,c
 15664  005A74  0E00               	movlw	0
 15665  005A76  6E2D               	movwf	(___fldiv@a+1)^0,c
 15666  005A78  0E00               	movlw	0
 15667  005A7A  6E2E               	movwf	(___fldiv@a+2)^0,c
 15668  005A7C  0E00               	movlw	0
 15669  005A7E  6E2F               	movwf	(___fldiv@a+3)^0,c
 15670  005A80                     l4128:
 15671  005A80  8E2E               	bsf	(___fldiv@a+2)^0,7,c
 15672  005A82  0E00               	movlw	0
 15673  005A84  6E2F               	movwf	(___fldiv@a+3)^0,c
 15674  005A86  EF4D  F02D         	goto	l4134
 15675  005A8A                     l4132:
 15676  005A8A  0E00               	movlw	0
 15677  005A8C  6E2C               	movwf	___fldiv@a^0,c
 15678  005A8E  0E00               	movlw	0
 15679  005A90  6E2D               	movwf	(___fldiv@a+1)^0,c
 15680  005A92  0E00               	movlw	0
 15681  005A94  6E2E               	movwf	(___fldiv@a+2)^0,c
 15682  005A96  0E00               	movlw	0
 15683  005A98  6E2F               	movwf	(___fldiv@a+3)^0,c
 15684  005A9A                     l4134:
 15685  005A9A  502C               	movf	___fldiv@a^0,w,c
 15686  005A9C  102D               	iorwf	(___fldiv@a+1)^0,w,c
 15687  005A9E  102E               	iorwf	(___fldiv@a+2)^0,w,c
 15688  005AA0  102F               	iorwf	(___fldiv@a+3)^0,w,c
 15689  005AA2  A4D8               	btfss	status,2,c
 15690  005AA4  EF56  F02D         	goto	u4391
 15691  005AA8  EF58  F02D         	goto	u4390
 15692  005AAC                     u4391:
 15693  005AAC  EF70  F02D         	goto	l4146
 15694  005AB0                     u4390:
 15695  005AB0  0E00               	movlw	0
 15696  005AB2  6E28               	movwf	___fldiv@b^0,c
 15697  005AB4  0E00               	movlw	0
 15698  005AB6  6E29               	movwf	(___fldiv@b+1)^0,c
 15699  005AB8  0E00               	movlw	0
 15700  005ABA  6E2A               	movwf	(___fldiv@b+2)^0,c
 15701  005ABC  0E00               	movlw	0
 15702  005ABE  6E2B               	movwf	(___fldiv@b+3)^0,c
 15703  005AC0  0E80               	movlw	128
 15704  005AC2  122A               	iorwf	(___fldiv@b+2)^0,f,c
 15705  005AC4  0E7F               	movlw	127
 15706  005AC6  122B               	iorwf	(___fldiv@b+3)^0,f,c
 15707  005AC8                     l4140:
 15708  005AC8  5038               	movf	___fldiv@sign^0,w,c
 15709  005ACA  122B               	iorwf	(___fldiv@b+3)^0,f,c
 15710  005ACC  C028  F028         	movff	___fldiv@b,?___fldiv
 15711  005AD0  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
 15712  005AD4  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
 15713  005AD8  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
 15714  005ADC  EFB3  F02E         	goto	l723
 15715  005AE0                     l4146:
 15716  005AE0  503F               	movf	___fldiv@bexp^0,w,c
 15717  005AE2  A4D8               	btfss	status,2,c
 15718  005AE4  EF76  F02D         	goto	u4401
 15719  005AE8  EF78  F02D         	goto	u4400
 15720  005AEC                     u4401:
 15721  005AEC  EF82  F02D         	goto	l4154
 15722  005AF0                     u4400:
 15723  005AF0  0E00               	movlw	0
 15724  005AF2  6E28               	movwf	?___fldiv^0,c
 15725  005AF4  0E00               	movlw	0
 15726  005AF6  6E29               	movwf	(?___fldiv+1)^0,c
 15727  005AF8  0E00               	movlw	0
 15728  005AFA  6E2A               	movwf	(?___fldiv+2)^0,c
 15729  005AFC  0E00               	movlw	0
 15730  005AFE  6E2B               	movwf	(?___fldiv+3)^0,c
 15731  005B00  EFB3  F02E         	goto	l723
 15732  005B04                     l4154:
 15733  005B04  5040               	movf	___fldiv@aexp^0,w,c
 15734  005B06  C03F  F030         	movff	___fldiv@bexp,??___fldiv
 15735  005B0A  6A31               	clrf	(??___fldiv+1)^0,c
 15736  005B0C  5E30               	subwf	??___fldiv^0,f,c
 15737  005B0E  0E00               	movlw	0
 15738  005B10  5A31               	subwfb	(??___fldiv+1)^0,f,c
 15739  005B12  0E7F               	movlw	127
 15740  005B14  2430               	addwf	??___fldiv^0,w,c
 15741  005B16  6E39               	movwf	___fldiv@new_exp^0,c
 15742  005B18  0E00               	movlw	0
 15743  005B1A  2031               	addwfc	(??___fldiv+1)^0,w,c
 15744  005B1C  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
 15745  005B1E  C028  F034         	movff	___fldiv@b,___fldiv@rem
 15746  005B22  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
 15747  005B26  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
 15748  005B2A  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
 15749  005B2E  0E00               	movlw	0
 15750  005B30  6E28               	movwf	___fldiv@b^0,c
 15751  005B32  0E00               	movlw	0
 15752  005B34  6E29               	movwf	(___fldiv@b+1)^0,c
 15753  005B36  0E00               	movlw	0
 15754  005B38  6E2A               	movwf	(___fldiv@b+2)^0,c
 15755  005B3A  0E00               	movlw	0
 15756  005B3C  6E2B               	movwf	(___fldiv@b+3)^0,c
 15757  005B3E  0E00               	movlw	0
 15758  005B40  6E3B               	movwf	___fldiv@grs^0,c
 15759  005B42  0E00               	movlw	0
 15760  005B44  6E3C               	movwf	(___fldiv@grs+1)^0,c
 15761  005B46  0E00               	movlw	0
 15762  005B48  6E3D               	movwf	(___fldiv@grs+2)^0,c
 15763  005B4A  0E00               	movlw	0
 15764  005B4C  6E3E               	movwf	(___fldiv@grs+3)^0,c
 15765  005B4E  0E00               	movlw	0
 15766  005B50  6E40               	movwf	___fldiv@aexp^0,c
 15767  005B52  EFE3  F02D         	goto	l725
 15768  005B56                     l4164:
 15769  005B56  5040               	movf	___fldiv@aexp^0,w,c
 15770  005B58  B4D8               	btfsc	status,2,c
 15771  005B5A  EFB1  F02D         	goto	u4411
 15772  005B5E  EFB3  F02D         	goto	u4410
 15773  005B62                     u4411:
 15774  005B62  EFCA  F02D         	goto	l4172
 15775  005B66                     u4410:
 15776  005B66  90D8               	bcf	status,0,c
 15777  005B68  3634               	rlcf	___fldiv@rem^0,f,c
 15778  005B6A  3635               	rlcf	(___fldiv@rem+1)^0,f,c
 15779  005B6C  3636               	rlcf	(___fldiv@rem+2)^0,f,c
 15780  005B6E  3637               	rlcf	(___fldiv@rem+3)^0,f,c
 15781  005B70  90D8               	bcf	status,0,c
 15782  005B72  3628               	rlcf	___fldiv@b^0,f,c
 15783  005B74  3629               	rlcf	(___fldiv@b+1)^0,f,c
 15784  005B76  362A               	rlcf	(___fldiv@b+2)^0,f,c
 15785  005B78  362B               	rlcf	(___fldiv@b+3)^0,f,c
 15786  005B7A  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
 15787  005B7C  EFC2  F02D         	goto	u4421
 15788  005B80  EFC4  F02D         	goto	u4420
 15789  005B84                     u4421:
 15790  005B84  EFC5  F02D         	goto	l728
 15791  005B88                     u4420:
 15792  005B88  8028               	bsf	___fldiv@b^0,0,c
 15793  005B8A                     l728:
 15794  005B8A  90D8               	bcf	status,0,c
 15795  005B8C  363B               	rlcf	___fldiv@grs^0,f,c
 15796  005B8E  363C               	rlcf	(___fldiv@grs+1)^0,f,c
 15797  005B90  363D               	rlcf	(___fldiv@grs+2)^0,f,c
 15798  005B92  363E               	rlcf	(___fldiv@grs+3)^0,f,c
 15799  005B94                     l4172:
 15800  005B94  502C               	movf	___fldiv@a^0,w,c
 15801  005B96  5C34               	subwf	___fldiv@rem^0,w,c
 15802  005B98  502D               	movf	(___fldiv@a+1)^0,w,c
 15803  005B9A  5835               	subwfb	(___fldiv@rem+1)^0,w,c
 15804  005B9C  502E               	movf	(___fldiv@a+2)^0,w,c
 15805  005B9E  5836               	subwfb	(___fldiv@rem+2)^0,w,c
 15806  005BA0  502F               	movf	(___fldiv@a+3)^0,w,c
 15807  005BA2  5837               	subwfb	(___fldiv@rem+3)^0,w,c
 15808  005BA4  A0D8               	btfss	status,0,c
 15809  005BA6  EFD7  F02D         	goto	u4431
 15810  005BAA  EFD9  F02D         	goto	u4430
 15811  005BAE                     u4431:
 15812  005BAE  EFE2  F02D         	goto	l4178
 15813  005BB2                     u4430:
 15814  005BB2  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
 15815  005BB4  502C               	movf	___fldiv@a^0,w,c
 15816  005BB6  5E34               	subwf	___fldiv@rem^0,f,c
 15817  005BB8  502D               	movf	(___fldiv@a+1)^0,w,c
 15818  005BBA  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
 15819  005BBC  502E               	movf	(___fldiv@a+2)^0,w,c
 15820  005BBE  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
 15821  005BC0  502F               	movf	(___fldiv@a+3)^0,w,c
 15822  005BC2  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
 15823  005BC4                     l4178:
 15824  005BC4  2A40               	incf	___fldiv@aexp^0,f,c
 15825  005BC6                     l725:
 15826  005BC6  0E19               	movlw	25
 15827  005BC8  6440               	cpfsgt	___fldiv@aexp^0,c
 15828  005BCA  EFE9  F02D         	goto	u4441
 15829  005BCE  EFEB  F02D         	goto	u4440
 15830  005BD2                     u4441:
 15831  005BD2  EFAB  F02D         	goto	l4164
 15832  005BD6                     u4440:
 15833  005BD6  5034               	movf	___fldiv@rem^0,w,c
 15834  005BD8  1035               	iorwf	(___fldiv@rem+1)^0,w,c
 15835  005BDA  1036               	iorwf	(___fldiv@rem+2)^0,w,c
 15836  005BDC  1037               	iorwf	(___fldiv@rem+3)^0,w,c
 15837  005BDE  B4D8               	btfsc	status,2,c
 15838  005BE0  EFF4  F02D         	goto	u4451
 15839  005BE4  EFF6  F02D         	goto	u4450
 15840  005BE8                     u4451:
 15841  005BE8  EF0E  F02E         	goto	l4190
 15842  005BEC                     u4450:
 15843  005BEC  803B               	bsf	___fldiv@grs^0,0,c
 15844  005BEE  EF0E  F02E         	goto	l4190
 15845  005BF2                     l4184:
 15846  005BF2  90D8               	bcf	status,0,c
 15847  005BF4  3628               	rlcf	___fldiv@b^0,f,c
 15848  005BF6  3629               	rlcf	(___fldiv@b+1)^0,f,c
 15849  005BF8  362A               	rlcf	(___fldiv@b+2)^0,f,c
 15850  005BFA  362B               	rlcf	(___fldiv@b+3)^0,f,c
 15851  005BFC  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
 15852  005BFE  EF03  F02E         	goto	u4461
 15853  005C02  EF05  F02E         	goto	u4460
 15854  005C06                     u4461:
 15855  005C06  EF06  F02E         	goto	l734
 15856  005C0A                     u4460:
 15857  005C0A  8028               	bsf	___fldiv@b^0,0,c
 15858  005C0C                     l734:
 15859  005C0C  90D8               	bcf	status,0,c
 15860  005C0E  363B               	rlcf	___fldiv@grs^0,f,c
 15861  005C10  363C               	rlcf	(___fldiv@grs+1)^0,f,c
 15862  005C12  363D               	rlcf	(___fldiv@grs+2)^0,f,c
 15863  005C14  363E               	rlcf	(___fldiv@grs+3)^0,f,c
 15864  005C16  0639               	decf	___fldiv@new_exp^0,f,c
 15865  005C18  A0D8               	btfss	status,0,c
 15866  005C1A  063A               	decf	(___fldiv@new_exp+1)^0,f,c
 15867  005C1C                     l4190:
 15868  005C1C  AE2A               	btfss	(___fldiv@b+2)^0,7,c
 15869  005C1E  EF13  F02E         	goto	u4471
 15870  005C22  EF15  F02E         	goto	u4470
 15871  005C26                     u4471:
 15872  005C26  EFF9  F02D         	goto	l4184
 15873  005C2A                     u4470:
 15874  005C2A  0E00               	movlw	0
 15875  005C2C  6E40               	movwf	___fldiv@aexp^0,c
 15876  005C2E  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
 15877  005C30  EF1C  F02E         	goto	u4481
 15878  005C34  EF1E  F02E         	goto	u4480
 15879  005C38                     u4481:
 15880  005C38  EF42  F02E         	goto	l736
 15881  005C3C                     u4480:
 15882  005C3C  0EFF               	movlw	255
 15883  005C3E  143B               	andwf	___fldiv@grs^0,w,c
 15884  005C40  6E30               	movwf	??___fldiv^0,c
 15885  005C42  0EFF               	movlw	255
 15886  005C44  143C               	andwf	(___fldiv@grs+1)^0,w,c
 15887  005C46  6E31               	movwf	(??___fldiv+1)^0,c
 15888  005C48  0EFF               	movlw	255
 15889  005C4A  143D               	andwf	(___fldiv@grs+2)^0,w,c
 15890  005C4C  6E32               	movwf	(??___fldiv+2)^0,c
 15891  005C4E  0E7F               	movlw	127
 15892  005C50  143E               	andwf	(___fldiv@grs+3)^0,w,c
 15893  005C52  6E33               	movwf	(??___fldiv+3)^0,c
 15894  005C54  5030               	movf	??___fldiv^0,w,c
 15895  005C56  1031               	iorwf	(??___fldiv+1)^0,w,c
 15896  005C58  1032               	iorwf	(??___fldiv+2)^0,w,c
 15897  005C5A  1033               	iorwf	(??___fldiv+3)^0,w,c
 15898  005C5C  B4D8               	btfsc	status,2,c
 15899  005C5E  EF33  F02E         	goto	u4491
 15900  005C62  EF35  F02E         	goto	u4490
 15901  005C66                     u4491:
 15902  005C66  EF39  F02E         	goto	l737
 15903  005C6A                     u4490:
 15904  005C6A                     l4198:
 15905  005C6A  0E01               	movlw	1
 15906  005C6C  6E40               	movwf	___fldiv@aexp^0,c
 15907  005C6E  EF42  F02E         	goto	l736
 15908  005C72                     l737:
 15909  005C72  A028               	btfss	___fldiv@b^0,0,c
 15910  005C74  EF3E  F02E         	goto	u4501
 15911  005C78  EF40  F02E         	goto	u4500
 15912  005C7C                     u4501:
 15913  005C7C  EF42  F02E         	goto	l736
 15914  005C80                     u4500:
 15915  005C80  EF35  F02E         	goto	l4198
 15916  005C84                     l736:
 15917  005C84  5040               	movf	___fldiv@aexp^0,w,c
 15918  005C86  B4D8               	btfsc	status,2,c
 15919  005C88  EF48  F02E         	goto	u4511
 15920  005C8C  EF4A  F02E         	goto	u4510
 15921  005C90                     u4511:
 15922  005C90  EF6E  F02E         	goto	l4210
 15923  005C94                     u4510:
 15924  005C94  0E01               	movlw	1
 15925  005C96  2628               	addwf	___fldiv@b^0,f,c
 15926  005C98  0E00               	movlw	0
 15927  005C9A  2229               	addwfc	(___fldiv@b+1)^0,f,c
 15928  005C9C  222A               	addwfc	(___fldiv@b+2)^0,f,c
 15929  005C9E  222B               	addwfc	(___fldiv@b+3)^0,f,c
 15930  005CA0  A02B               	btfss	(___fldiv@b+3)^0,0,c
 15931  005CA2  EF55  F02E         	goto	u4521
 15932  005CA6  EF57  F02E         	goto	u4520
 15933  005CAA                     u4521:
 15934  005CAA  EF6E  F02E         	goto	l4210
 15935  005CAE                     u4520:
 15936  005CAE  C028  F030         	movff	___fldiv@b,??___fldiv
 15937  005CB2  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
 15938  005CB6  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
 15939  005CBA  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
 15940  005CBE  3433               	rlcf	(??___fldiv+3)^0,w,c
 15941  005CC0  3233               	rrcf	(??___fldiv+3)^0,f,c
 15942  005CC2  3232               	rrcf	(??___fldiv+2)^0,f,c
 15943  005CC4  3231               	rrcf	(??___fldiv+1)^0,f,c
 15944  005CC6  3230               	rrcf	??___fldiv^0,f,c
 15945  005CC8  C030  F028         	movff	??___fldiv,___fldiv@b
 15946  005CCC  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
 15947  005CD0  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
 15948  005CD4  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
 15949  005CD8  4A39               	infsnz	___fldiv@new_exp^0,f,c
 15950  005CDA  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
 15951  005CDC                     l4210:
 15952  005CDC  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15953  005CDE  EF79  F02E         	goto	u4531
 15954  005CE2  503A               	movf	(___fldiv@new_exp+1)^0,w,c
 15955  005CE4  E108               	bnz	u4530
 15956  005CE6  2839               	incf	___fldiv@new_exp^0,w,c
 15957  005CE8  A0D8               	btfss	status,0,c
 15958  005CEA  EF79  F02E         	goto	u4531
 15959  005CEE  EF7B  F02E         	goto	u4530
 15960  005CF2                     u4531:
 15961  005CF2  EF86  F02E         	goto	l4214
 15962  005CF6                     u4530:
 15963  005CF6  0E00               	movlw	0
 15964  005CF8  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
 15965  005CFA  6839               	setf	___fldiv@new_exp^0,c
 15966  005CFC  0E00               	movlw	0
 15967  005CFE  6E28               	movwf	___fldiv@b^0,c
 15968  005D00  0E00               	movlw	0
 15969  005D02  6E29               	movwf	(___fldiv@b+1)^0,c
 15970  005D04  0E00               	movlw	0
 15971  005D06  6E2A               	movwf	(___fldiv@b+2)^0,c
 15972  005D08  0E00               	movlw	0
 15973  005D0A  6E2B               	movwf	(___fldiv@b+3)^0,c
 15974  005D0C                     l4214:
 15975  005D0C  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15976  005D0E  EF93  F02E         	goto	u4540
 15977  005D12  503A               	movf	(___fldiv@new_exp+1)^0,w,c
 15978  005D14  E106               	bnz	u4541
 15979  005D16  0439               	decf	___fldiv@new_exp^0,w,c
 15980  005D18  B0D8               	btfsc	status,0,c
 15981  005D1A  EF91  F02E         	goto	u4541
 15982  005D1E  EF93  F02E         	goto	u4540
 15983  005D22                     u4541:
 15984  005D22  EFA1  F02E         	goto	l4218
 15985  005D26                     u4540:
 15986  005D26  0E00               	movlw	0
 15987  005D28  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
 15988  005D2A  0E00               	movlw	0
 15989  005D2C  6E39               	movwf	___fldiv@new_exp^0,c
 15990  005D2E  0E00               	movlw	0
 15991  005D30  6E28               	movwf	___fldiv@b^0,c
 15992  005D32  0E00               	movlw	0
 15993  005D34  6E29               	movwf	(___fldiv@b+1)^0,c
 15994  005D36  0E00               	movlw	0
 15995  005D38  6E2A               	movwf	(___fldiv@b+2)^0,c
 15996  005D3A  0E00               	movlw	0
 15997  005D3C  6E2B               	movwf	(___fldiv@b+3)^0,c
 15998  005D3E  0E00               	movlw	0
 15999  005D40  6E38               	movwf	___fldiv@sign^0,c
 16000  005D42                     l4218:
 16001  005D42  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
 16002  005D46  A03F               	btfss	___fldiv@bexp^0,0,c
 16003  005D48  EFA8  F02E         	goto	u4551
 16004  005D4C  EFAA  F02E         	goto	u4550
 16005  005D50                     u4551:
 16006  005D50  EFAD  F02E         	goto	l4224
 16007  005D54                     u4550:
 16008  005D54  8E2A               	bsf	(___fldiv@b+2)^0,7,c
 16009  005D56  EFAE  F02E         	goto	l4226
 16010  005D5A                     l4224:
 16011  005D5A  9E2A               	bcf	(___fldiv@b+2)^0,7,c
 16012  005D5C                     l4226:
 16013  005D5C  90D8               	bcf	status,0,c
 16014  005D5E  303F               	rrcf	___fldiv@bexp^0,w,c
 16015  005D60  6E2B               	movwf	(___fldiv@b+3)^0,c
 16016  005D62  EF64  F02D         	goto	l4140
 16017  005D66                     l723:
 16018  005D66  0012               	return		;funcret
 16019  005D68                     __end_of___fldiv:
 16020                           	callstack 0
 16021                           
 16022 ;; *************** function ___fltol *****************
 16023 ;; Defined at:
 16024 ;;		line 43 in file "D:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\fltol.c"
 16025 ;; Parameters:    Size  Location     Type
 16026 ;;  f1              4   93[BANK0 ] unsigned char 
 16027 ;; Auto vars:     Size  Location     Type
 16028 ;;  exp1            1  102[BANK0 ] unsigned char 
 16029 ;;  sign1           1  101[BANK0 ] unsigned char 
 16030 ;; Return value:  Size  Location     Type
 16031 ;;                  4   93[BANK0 ] long 
 16032 ;; Registers used:
 16033 ;;		wreg, status,2, status,0
 16034 ;; Tracked objects:
 16035 ;;		On entry : 0/0
 16036 ;;		On exit  : 0/0
 16037 ;;		Unchanged: 0/0
 16038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16039 ;;      Params:         0       4       0       0       0       0       0       0       0
 16040 ;;      Locals:         0       2       0       0       0       0       0       0       0
 16041 ;;      Temps:          0       4       0       0       0       0       0       0       0
 16042 ;;      Totals:         0      10       0       0       0       0       0       0       0
 16043 ;;Total ram usage:       10 bytes
 16044 ;; Hardware stack levels used:    1
 16045 ;; This function calls:
 16046 ;;		Nothing
 16047 ;; This function is called by:
 16048 ;;		_gas_plot_log_scale
 16049 ;;		_efgtoa
 16050 ;; This function uses a non-reentrant model
 16051 ;;
 16052                           
 16053                           	psect	text44
 16054  006DC2                     __ptext44:
 16055                           	callstack 0
 16056  006DC2                     ___fltol:
 16057                           	callstack 26
 16058  006DC2  0100               	movlb	0	; () banked
 16059  006DC4  35BF               	rlcf	(___fltol@f1+2)& (0+255),w,b
 16060  006DC6  35C0               	rlcf	(___fltol@f1+3)& (0+255),w,b
 16061  006DC8  6FC6               	movwf	___fltol@exp1& (0+255),b
 16062  006DCA  51C6               	movf	___fltol@exp1& (0+255),w,b
 16063  006DCC  A4D8               	btfss	status,2,c
 16064  006DCE  EFEB  F036         	goto	u4961
 16065  006DD2  EFED  F036         	goto	u4960
 16066  006DD6                     u4961:
 16067  006DD6  EFF7  F036         	goto	l4502
 16068  006DDA                     u4960:
 16069  006DDA                     l4498:
 16070                           
 16071                           ; BSR set to: 0
 16072  006DDA  0E00               	movlw	0
 16073  006DDC  6FBD               	movwf	?___fltol& (0+255),b
 16074  006DDE  0E00               	movlw	0
 16075  006DE0  6FBE               	movwf	(?___fltol+1)& (0+255),b
 16076  006DE2  0E00               	movlw	0
 16077  006DE4  6FBF               	movwf	(?___fltol+2)& (0+255),b
 16078  006DE6  0E00               	movlw	0
 16079  006DE8  6FC0               	movwf	(?___fltol+3)& (0+255),b
 16080  006DEA  EF64  F037         	goto	l438
 16081  006DEE                     l4502:
 16082                           
 16083                           ; BSR set to: 0
 16084  006DEE  C0BD  F0C1         	movff	___fltol@f1,??___fltol
 16085  006DF2  C0BE  F0C2         	movff	___fltol@f1+1,??___fltol+1
 16086  006DF6  C0BF  F0C3         	movff	___fltol@f1+2,??___fltol+2
 16087  006DFA  C0C0  F0C4         	movff	___fltol@f1+3,??___fltol+3
 16088  006DFE  0E20               	movlw	32
 16089  006E00  EF07  F037         	goto	u4970
 16090  006E04                     u4975:
 16091  006E04  90D8               	bcf	status,0,c
 16092  006E06  33C4               	rrcf	(??___fltol+3)& (0+255),f,b
 16093  006E08  33C3               	rrcf	(??___fltol+2)& (0+255),f,b
 16094  006E0A  33C2               	rrcf	(??___fltol+1)& (0+255),f,b
 16095  006E0C  33C1               	rrcf	??___fltol& (0+255),f,b
 16096  006E0E                     u4970:
 16097  006E0E  2EE8               	decfsz	wreg,f,c
 16098  006E10  EF02  F037         	goto	u4975
 16099  006E14  51C1               	movf	??___fltol& (0+255),w,b
 16100  006E16  6FC5               	movwf	___fltol@sign1& (0+255),b
 16101  006E18                     
 16102                           ; BSR set to: 0
 16103  006E18  8FBF               	bsf	(___fltol@f1+2)& (0+255),7,b
 16104  006E1A                     
 16105                           ; BSR set to: 0
 16106  006E1A  0EFF               	movlw	255
 16107  006E1C  17BD               	andwf	___fltol@f1& (0+255),f,b
 16108  006E1E  0EFF               	movlw	255
 16109  006E20  17BE               	andwf	(___fltol@f1+1)& (0+255),f,b
 16110  006E22  0EFF               	movlw	255
 16111  006E24  17BF               	andwf	(___fltol@f1+2)& (0+255),f,b
 16112  006E26  0E00               	movlw	0
 16113  006E28  17C0               	andwf	(___fltol@f1+3)& (0+255),f,b
 16114  006E2A                     
 16115                           ; BSR set to: 0
 16116  006E2A  0E96               	movlw	150
 16117  006E2C  5FC6               	subwf	___fltol@exp1& (0+255),f,b
 16118  006E2E                     
 16119                           ; BSR set to: 0
 16120  006E2E  BFC6               	btfsc	___fltol@exp1& (0+255),7,b
 16121  006E30  EF1E  F037         	goto	u4980
 16122  006E34  EF1C  F037         	goto	u4981
 16123  006E38                     u4981:
 16124  006E38  EF34  F037         	goto	l4522
 16125  006E3C                     u4980:
 16126  006E3C                     
 16127                           ; BSR set to: 0
 16128  006E3C  51C6               	movf	___fltol@exp1& (0+255),w,b
 16129  006E3E  0A80               	xorlw	128
 16130  006E40  0F97               	addlw	151
 16131  006E42  B0D8               	btfsc	status,0,c
 16132  006E44  EF26  F037         	goto	u4991
 16133  006E48  EF28  F037         	goto	u4990
 16134  006E4C                     u4991:
 16135  006E4C  EF2A  F037         	goto	l4518
 16136  006E50                     u4990:
 16137  006E50  EFED  F036         	goto	l4498
 16138  006E54                     l4518:
 16139                           
 16140                           ; BSR set to: 0
 16141  006E54  90D8               	bcf	status,0,c
 16142  006E56  33C0               	rrcf	(___fltol@f1+3)& (0+255),f,b
 16143  006E58  33BF               	rrcf	(___fltol@f1+2)& (0+255),f,b
 16144  006E5A  33BE               	rrcf	(___fltol@f1+1)& (0+255),f,b
 16145  006E5C  33BD               	rrcf	___fltol@f1& (0+255),f,b
 16146  006E5E                     
 16147                           ; BSR set to: 0
 16148  006E5E  3FC6               	incfsz	___fltol@exp1& (0+255),f,b
 16149  006E60  EF2A  F037         	goto	l4518
 16150  006E64  EF4C  F037         	goto	l4532
 16151  006E68                     l4522:
 16152                           
 16153                           ; BSR set to: 0
 16154  006E68  0E1F               	movlw	31
 16155  006E6A  65C6               	cpfsgt	___fltol@exp1& (0+255),b
 16156  006E6C  EF3A  F037         	goto	u5001
 16157  006E70  EF3C  F037         	goto	u5000
 16158  006E74                     u5001:
 16159  006E74  EF44  F037         	goto	l4530
 16160  006E78                     u5000:
 16161  006E78  EFED  F036         	goto	l4498
 16162  006E7C                     l4528:
 16163                           
 16164                           ; BSR set to: 0
 16165  006E7C  90D8               	bcf	status,0,c
 16166  006E7E  37BD               	rlcf	___fltol@f1& (0+255),f,b
 16167  006E80  37BE               	rlcf	(___fltol@f1+1)& (0+255),f,b
 16168  006E82  37BF               	rlcf	(___fltol@f1+2)& (0+255),f,b
 16169  006E84  37C0               	rlcf	(___fltol@f1+3)& (0+255),f,b
 16170  006E86  07C6               	decf	___fltol@exp1& (0+255),f,b
 16171  006E88                     l4530:
 16172                           
 16173                           ; BSR set to: 0
 16174  006E88  51C6               	movf	___fltol@exp1& (0+255),w,b
 16175  006E8A  A4D8               	btfss	status,2,c
 16176  006E8C  EF4A  F037         	goto	u5011
 16177  006E90  EF4C  F037         	goto	u5010
 16178  006E94                     u5011:
 16179  006E94  EF3E  F037         	goto	l4528
 16180  006E98                     u5010:
 16181  006E98                     l4532:
 16182                           
 16183                           ; BSR set to: 0
 16184  006E98  51C5               	movf	___fltol@sign1& (0+255),w,b
 16185  006E9A  B4D8               	btfsc	status,2,c
 16186  006E9C  EF52  F037         	goto	u5021
 16187  006EA0  EF54  F037         	goto	u5020
 16188  006EA4                     u5021:
 16189  006EA4  EF5C  F037         	goto	l4536
 16190  006EA8                     u5020:
 16191  006EA8                     
 16192                           ; BSR set to: 0
 16193  006EA8  1FC0               	comf	(___fltol@f1+3)& (0+255),f,b
 16194  006EAA  1FBF               	comf	(___fltol@f1+2)& (0+255),f,b
 16195  006EAC  1FBE               	comf	(___fltol@f1+1)& (0+255),f,b
 16196  006EAE  6DBD               	negf	___fltol@f1& (0+255),b
 16197  006EB0  0E00               	movlw	0
 16198  006EB2  23BE               	addwfc	(___fltol@f1+1)& (0+255),f,b
 16199  006EB4  23BF               	addwfc	(___fltol@f1+2)& (0+255),f,b
 16200  006EB6  23C0               	addwfc	(___fltol@f1+3)& (0+255),f,b
 16201  006EB8                     l4536:
 16202                           
 16203                           ; BSR set to: 0
 16204  006EB8  C0BD  F0BD         	movff	___fltol@f1,?___fltol
 16205  006EBC  C0BE  F0BE         	movff	___fltol@f1+1,?___fltol+1
 16206  006EC0  C0BF  F0BF         	movff	___fltol@f1+2,?___fltol+2
 16207  006EC4  C0C0  F0C0         	movff	___fltol@f1+3,?___fltol+3
 16208  006EC8                     l438:
 16209                           
 16210                           ; BSR set to: 0
 16211  006EC8  0012               	return		;funcret
 16212  006ECA                     __end_of___fltol:
 16213                           	callstack 0
 16214                           
 16215 ;; *************** function _LCD_String_xy *****************
 16216 ;; Defined at:
 16217 ;;		line 49 in file "LCD_8bit.c"
 16218 ;; Parameters:    Size  Location     Type
 16219 ;;  row             1    wreg     unsigned char 
 16220 ;;  pos             1    9[COMRAM] unsigned char 
 16221 ;;  msg             2   10[COMRAM] PTR const unsigned char 
 16222 ;;		 -> STR_10(10), STR_9(7), STR_7(10), STR_6(10), 
 16223 ;;		 -> STR_5(12), STR_4(7), main@data(10), STR_2(7), 
 16224 ;;		 -> STR_1(11), 
 16225 ;; Auto vars:     Size  Location     Type
 16226 ;;  row             1   12[COMRAM] unsigned char 
 16227 ;;  location        1   13[COMRAM] unsigned char 
 16228 ;; Return value:  Size  Location     Type
 16229 ;;                  1    wreg      void 
 16230 ;; Registers used:
 16231 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16232 ;; Tracked objects:
 16233 ;;		On entry : 0/0
 16234 ;;		On exit  : 0/0
 16235 ;;		Unchanged: 0/0
 16236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16237 ;;      Params:         3       0       0       0       0       0       0       0       0
 16238 ;;      Locals:         2       0       0       0       0       0       0       0       0
 16239 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16240 ;;      Totals:         5       0       0       0       0       0       0       0       0
 16241 ;;Total ram usage:        5 bytes
 16242 ;; Hardware stack levels used:    1
 16243 ;; Hardware stack levels required when called:    3
 16244 ;; This function calls:
 16245 ;;		_LCD_Command
 16246 ;;		_LCD_String
 16247 ;; This function is called by:
 16248 ;;		_main
 16249 ;; This function uses a non-reentrant model
 16250 ;;
 16251                           
 16252                           	psect	text45
 16253  007AF2                     __ptext45:
 16254                           	callstack 0
 16255  007AF2                     _LCD_String_xy:
 16256                           	callstack 27
 16257                           
 16258                           ; BSR set to: 0
 16259                           ;incstack = 0
 16260                           ;LCD_String_xy@row stored from wreg
 16261  007AF2  6E0D               	movwf	LCD_String_xy@row^0,c
 16262  007AF4                     
 16263                           ;LCD_8bit.c: 52:     if(row<=1)
 16264  007AF4  0E02               	movlw	2
 16265  007AF6  600D               	cpfslt	LCD_String_xy@row^0,c
 16266  007AF8  EF80  F03D         	goto	u7411
 16267  007AFC  EF82  F03D         	goto	u7410
 16268  007B00                     u7411:
 16269  007B00  EF8B  F03D         	goto	l5976
 16270  007B04                     u7410:
 16271  007B04                     
 16272                           ;LCD_8bit.c: 53:     {;LCD_8bit.c: 54:         location=(0x80) | ((pos) & 0x0f);
 16273  007B04  500A               	movf	LCD_String_xy@pos^0,w,c
 16274  007B06  0B0F               	andlw	15
 16275  007B08  0980               	iorlw	128
 16276  007B0A  6E0E               	movwf	LCD_String_xy@location^0,c
 16277  007B0C                     
 16278                           ;LCD_8bit.c: 55:         LCD_Command(location);
 16279  007B0C  500E               	movf	LCD_String_xy@location^0,w,c
 16280  007B0E  EC5F  F03E         	call	_LCD_Command
 16281                           
 16282                           ;LCD_8bit.c: 56:     }
 16283  007B12  EF92  F03D         	goto	l5980
 16284  007B16                     l5976:
 16285                           
 16286                           ;LCD_8bit.c: 58:     {;LCD_8bit.c: 59:         location=(0xC0) | ((pos) & 0x0f);
 16287  007B16  500A               	movf	LCD_String_xy@pos^0,w,c
 16288  007B18  0B0F               	andlw	15
 16289  007B1A  09C0               	iorlw	192
 16290  007B1C  6E0E               	movwf	LCD_String_xy@location^0,c
 16291  007B1E                     
 16292                           ;LCD_8bit.c: 60:         LCD_Command(location);
 16293  007B1E  500E               	movf	LCD_String_xy@location^0,w,c
 16294  007B20  EC5F  F03E         	call	_LCD_Command
 16295  007B24                     l5980:
 16296                           
 16297                           ;LCD_8bit.c: 64:     LCD_String(msg);
 16298  007B24  C00B  F008         	movff	LCD_String_xy@msg,LCD_String@msg
 16299  007B28  C00C  F009         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
 16300  007B2C  EC17  F03C         	call	_LCD_String	;wreg free
 16301  007B30  0012               	return		;funcret
 16302  007B32                     __end_of_LCD_String_xy:
 16303                           	callstack 0
 16304                           
 16305 ;; *************** function _LCD_String *****************
 16306 ;; Defined at:
 16307 ;;		line 39 in file "LCD_8bit.c"
 16308 ;; Parameters:    Size  Location     Type
 16309 ;;  msg             2    7[COMRAM] PTR const unsigned char 
 16310 ;;		 -> STR_10(10), STR_9(7), STR_7(10), STR_6(10), 
 16311 ;;		 -> STR_5(12), STR_4(7), main@data(10), STR_2(7), 
 16312 ;;		 -> STR_1(11), 
 16313 ;; Auto vars:     Size  Location     Type
 16314 ;;		None
 16315 ;; Return value:  Size  Location     Type
 16316 ;;                  1    wreg      void 
 16317 ;; Registers used:
 16318 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16319 ;; Tracked objects:
 16320 ;;		On entry : 0/0
 16321 ;;		On exit  : 0/0
 16322 ;;		Unchanged: 0/0
 16323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16324 ;;      Params:         2       0       0       0       0       0       0       0       0
 16325 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16326 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16327 ;;      Totals:         2       0       0       0       0       0       0       0       0
 16328 ;;Total ram usage:        2 bytes
 16329 ;; Hardware stack levels used:    1
 16330 ;; Hardware stack levels required when called:    2
 16331 ;; This function calls:
 16332 ;;		_LCD_Char
 16333 ;; This function is called by:
 16334 ;;		_LCD_String_xy
 16335 ;; This function uses a non-reentrant model
 16336 ;;
 16337                           
 16338                           	psect	text46
 16339  00782E                     __ptext46:
 16340                           	callstack 0
 16341  00782E                     _LCD_String:
 16342                           	callstack 27
 16343  00782E                     
 16344                           ;LCD_8bit.c: 39: void LCD_String(const char *msg);LCD_8bit.c: 40: {;LCD_8bit.c: 41:  whi
      +                          le((*msg)!=0)
 16345  00782E  EF2D  F03C         	goto	l5402
 16346  007832                     l5398:
 16347                           
 16348                           ;LCD_8bit.c: 42:  {;LCD_8bit.c: 43:    LCD_Char(*msg);
 16349  007832  C008  FFF6         	movff	LCD_String@msg,tblptrl
 16350  007836  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
 16351  00783A  6AF8               	clrf	tblptru,c
 16352  00783C  0E07               	movlw	(high __ramtop+-1)
 16353  00783E  64F7               	cpfsgt	tblptrh,c
 16354  007840  D003               	bra	u6647
 16355  007842  0008               	tblrd		*
 16356  007844  50F5               	movf	tablat,w,c
 16357  007846  D005               	bra	u6640
 16358  007848                     u6647:
 16359  007848  CFF6 FFE1          	movff	tblptrl,fsr1l
 16360  00784C  CFF7 FFE2          	movff	tblptrh,fsr1h
 16361  007850  50E7               	movf	indf1,w,c
 16362  007852                     u6640:
 16363  007852  EC4C  F03E         	call	_LCD_Char
 16364  007856                     
 16365                           ;LCD_8bit.c: 44:    msg++;
 16366  007856  4A08               	infsnz	LCD_String@msg^0,f,c
 16367  007858  2A09               	incf	(LCD_String@msg+1)^0,f,c
 16368  00785A                     l5402:
 16369                           
 16370                           ;LCD_8bit.c: 41:  while((*msg)!=0)
 16371  00785A  C008  FFF6         	movff	LCD_String@msg,tblptrl
 16372  00785E  C009  FFF7         	movff	LCD_String@msg+1,tblptrh
 16373  007862  6AF8               	clrf	tblptru,c
 16374  007864  0E07               	movlw	(high __ramtop+-1)
 16375  007866  64F7               	cpfsgt	tblptrh,c
 16376  007868  D003               	bra	u6657
 16377  00786A  0008               	tblrd		*
 16378  00786C  50F5               	movf	tablat,w,c
 16379  00786E  D005               	bra	u6650
 16380  007870                     u6657:
 16381  007870  CFF6 FFE1          	movff	tblptrl,fsr1l
 16382  007874  CFF7 FFE2          	movff	tblptrh,fsr1h
 16383  007878  50E7               	movf	indf1,w,c
 16384  00787A                     u6650:
 16385  00787A  0900               	iorlw	0
 16386  00787C  A4D8               	btfss	status,2,c
 16387  00787E  EF43  F03C         	goto	u6661
 16388  007882  EF45  F03C         	goto	u6660
 16389  007886                     u6661:
 16390  007886  EF19  F03C         	goto	l5398
 16391  00788A                     u6660:
 16392  00788A  0012               	return		;funcret
 16393  00788C                     __end_of_LCD_String:
 16394                           	callstack 0
 16395                           
 16396 ;; *************** function _LCD_Char *****************
 16397 ;; Defined at:
 16398 ;;		line 28 in file "LCD_8bit.c"
 16399 ;; Parameters:    Size  Location     Type
 16400 ;;  dat             1    wreg     unsigned char 
 16401 ;; Auto vars:     Size  Location     Type
 16402 ;;  dat             1    6[COMRAM] unsigned char 
 16403 ;; Return value:  Size  Location     Type
 16404 ;;                  1    wreg      void 
 16405 ;; Registers used:
 16406 ;;		wreg, status,2, status,0, cstack
 16407 ;; Tracked objects:
 16408 ;;		On entry : 0/0
 16409 ;;		On exit  : 0/0
 16410 ;;		Unchanged: 0/0
 16411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16412 ;;      Params:         0       0       0       0       0       0       0       0       0
 16413 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16414 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16415 ;;      Totals:         1       0       0       0       0       0       0       0       0
 16416 ;;Total ram usage:        1 bytes
 16417 ;; Hardware stack levels used:    1
 16418 ;; Hardware stack levels required when called:    1
 16419 ;; This function calls:
 16420 ;;		_MSdelay
 16421 ;; This function is called by:
 16422 ;;		_LCD_String
 16423 ;; This function uses a non-reentrant model
 16424 ;;
 16425                           
 16426                           	psect	text47
 16427  007C98                     __ptext47:
 16428                           	callstack 0
 16429  007C98                     _LCD_Char:
 16430                           	callstack 27
 16431                           
 16432                           ;incstack = 0
 16433                           ;LCD_Char@dat stored from wreg
 16434  007C98  6E07               	movwf	LCD_Char@dat^0,c
 16435  007C9A                     
 16436                           ;LCD_8bit.c: 28: void LCD_Char(char dat);LCD_8bit.c: 29: {;LCD_8bit.c: 30:  LATB= dat;
 16437  007C9A  C007  FF8A         	movff	LCD_Char@dat,3978	;volatile
 16438  007C9E                     
 16439                           ;LCD_8bit.c: 31:  LATD0 = 1;
 16440  007C9E  808C               	bsf	3980,0,c	;volatile
 16441  007CA0                     
 16442                           ;LCD_8bit.c: 32:  LATD1=1;
 16443  007CA0  828C               	bsf	3980,1,c	;volatile
 16444  007CA2                     
 16445                           ;LCD_8bit.c: 33:  MSdelay(1);
 16446  007CA2  0E00               	movlw	0
 16447  007CA4  6E02               	movwf	(MSdelay@val+1)^0,c
 16448  007CA6  0E01               	movlw	1
 16449  007CA8  6E01               	movwf	MSdelay@val^0,c
 16450  007CAA  ECEF  F03C         	call	_MSdelay	;wreg free
 16451  007CAE                     
 16452                           ;LCD_8bit.c: 34:  LATD1=0;
 16453  007CAE  928C               	bcf	3980,1,c	;volatile
 16454  007CB0                     
 16455                           ;LCD_8bit.c: 35:  MSdelay(3);
 16456  007CB0  0E00               	movlw	0
 16457  007CB2  6E02               	movwf	(MSdelay@val+1)^0,c
 16458  007CB4  0E03               	movlw	3
 16459  007CB6  6E01               	movwf	MSdelay@val^0,c
 16460  007CB8  ECEF  F03C         	call	_MSdelay	;wreg free
 16461  007CBC  0012               	return		;funcret
 16462  007CBE                     __end_of_LCD_Char:
 16463                           	callstack 0
 16464                           
 16465 ;; *************** function _LCD_Init *****************
 16466 ;; Defined at:
 16467 ;;		line 6 in file "LCD_8bit.c"
 16468 ;; Parameters:    Size  Location     Type
 16469 ;;		None
 16470 ;; Auto vars:     Size  Location     Type
 16471 ;;		None
 16472 ;; Return value:  Size  Location     Type
 16473 ;;                  1    wreg      void 
 16474 ;; Registers used:
 16475 ;;		wreg, status,2, status,0, cstack
 16476 ;; Tracked objects:
 16477 ;;		On entry : 0/0
 16478 ;;		On exit  : 0/0
 16479 ;;		Unchanged: 0/0
 16480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16481 ;;      Params:         0       0       0       0       0       0       0       0       0
 16482 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16483 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16484 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16485 ;;Total ram usage:        0 bytes
 16486 ;; Hardware stack levels used:    1
 16487 ;; Hardware stack levels required when called:    2
 16488 ;; This function calls:
 16489 ;;		_LCD_Command
 16490 ;;		_MSdelay
 16491 ;; This function is called by:
 16492 ;;		_main
 16493 ;; This function uses a non-reentrant model
 16494 ;;
 16495                           
 16496                           	psect	text48
 16497  007C44                     __ptext48:
 16498                           	callstack 0
 16499  007C44                     _LCD_Init:
 16500                           	callstack 28
 16501  007C44                     
 16502                           ;LCD_8bit.c: 8:     TRISB = 0;
 16503  007C44  0E00               	movlw	0
 16504  007C46  6E93               	movwf	147,c	;volatile
 16505                           
 16506                           ;LCD_8bit.c: 9:     TRISD=0;
 16507  007C48  0E00               	movlw	0
 16508  007C4A  6E95               	movwf	149,c	;volatile
 16509  007C4C                     
 16510                           ;LCD_8bit.c: 10:     MSdelay(5);
 16511  007C4C  0E00               	movlw	0
 16512  007C4E  6E02               	movwf	(MSdelay@val+1)^0,c
 16513  007C50  0E05               	movlw	5
 16514  007C52  6E01               	movwf	MSdelay@val^0,c
 16515  007C54  ECEF  F03C         	call	_MSdelay	;wreg free
 16516  007C58                     
 16517                           ;LCD_8bit.c: 11:  LCD_Command(0x38);
 16518  007C58  0E38               	movlw	56
 16519  007C5A  EC5F  F03E         	call	_LCD_Command
 16520  007C5E                     
 16521                           ;LCD_8bit.c: 12:  LCD_Command(0x01);
 16522  007C5E  0E01               	movlw	1
 16523  007C60  EC5F  F03E         	call	_LCD_Command
 16524  007C64                     
 16525                           ;LCD_8bit.c: 13:  LCD_Command(0x06);
 16526  007C64  0E06               	movlw	6
 16527  007C66  EC5F  F03E         	call	_LCD_Command
 16528  007C6A                     
 16529                           ;LCD_8bit.c: 14:  LCD_Command(0x0c);
 16530  007C6A  0E0C               	movlw	12
 16531  007C6C  EC5F  F03E         	call	_LCD_Command
 16532  007C70  0012               	return		;funcret
 16533  007C72                     __end_of_LCD_Init:
 16534                           	callstack 0
 16535                           
 16536 ;; *************** function _LCD_Clear *****************
 16537 ;; Defined at:
 16538 ;;		line 76 in file "LCD_8bit.c"
 16539 ;; Parameters:    Size  Location     Type
 16540 ;;		None
 16541 ;; Auto vars:     Size  Location     Type
 16542 ;;		None
 16543 ;; Return value:  Size  Location     Type
 16544 ;;                  1    wreg      void 
 16545 ;; Registers used:
 16546 ;;		wreg, status,2, status,0, cstack
 16547 ;; Tracked objects:
 16548 ;;		On entry : 0/0
 16549 ;;		On exit  : 0/0
 16550 ;;		Unchanged: 0/0
 16551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16552 ;;      Params:         0       0       0       0       0       0       0       0       0
 16553 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16554 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16555 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16556 ;;Total ram usage:        0 bytes
 16557 ;; Hardware stack levels used:    1
 16558 ;; Hardware stack levels required when called:    2
 16559 ;; This function calls:
 16560 ;;		_LCD_Command
 16561 ;; This function is called by:
 16562 ;;		_main
 16563 ;; This function uses a non-reentrant model
 16564 ;;
 16565                           
 16566                           	psect	text49
 16567  007D2A                     __ptext49:
 16568                           	callstack 0
 16569  007D2A                     _LCD_Clear:
 16570                           	callstack 28
 16571  007D2A                     
 16572                           ;LCD_8bit.c: 78:     LCD_Command(0x01);
 16573  007D2A  0E01               	movlw	1
 16574  007D2C  EC5F  F03E         	call	_LCD_Command
 16575  007D30  0012               	return		;funcret
 16576  007D32                     __end_of_LCD_Clear:
 16577                           	callstack 0
 16578                           
 16579 ;; *************** function _LCD_Command *****************
 16580 ;; Defined at:
 16581 ;;		line 18 in file "LCD_8bit.c"
 16582 ;; Parameters:    Size  Location     Type
 16583 ;;  cmd             1    wreg     unsigned char 
 16584 ;; Auto vars:     Size  Location     Type
 16585 ;;  cmd             1    6[COMRAM] unsigned char 
 16586 ;; Return value:  Size  Location     Type
 16587 ;;                  1    wreg      void 
 16588 ;; Registers used:
 16589 ;;		wreg, status,2, status,0, cstack
 16590 ;; Tracked objects:
 16591 ;;		On entry : 0/0
 16592 ;;		On exit  : 0/0
 16593 ;;		Unchanged: 0/0
 16594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16595 ;;      Params:         0       0       0       0       0       0       0       0       0
 16596 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16597 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16598 ;;      Totals:         1       0       0       0       0       0       0       0       0
 16599 ;;Total ram usage:        1 bytes
 16600 ;; Hardware stack levels used:    1
 16601 ;; Hardware stack levels required when called:    1
 16602 ;; This function calls:
 16603 ;;		_MSdelay
 16604 ;; This function is called by:
 16605 ;;		_LCD_Init
 16606 ;;		_LCD_String_xy
 16607 ;;		_LCD_Clear
 16608 ;; This function uses a non-reentrant model
 16609 ;;
 16610                           
 16611                           	psect	text50
 16612  007CBE                     __ptext50:
 16613                           	callstack 0
 16614  007CBE                     _LCD_Command:
 16615                           	callstack 28
 16616                           
 16617                           ;incstack = 0
 16618                           ;LCD_Command@cmd stored from wreg
 16619  007CBE  6E07               	movwf	LCD_Command@cmd^0,c
 16620  007CC0                     
 16621                           ;LCD_8bit.c: 18: void LCD_Command(char cmd );LCD_8bit.c: 19: {;LCD_8bit.c: 20:  LATB= cm
      +                          d;
 16622  007CC0  C007  FF8A         	movff	LCD_Command@cmd,3978	;volatile
 16623  007CC4                     
 16624                           ;LCD_8bit.c: 21:  LATD0 = 0;
 16625  007CC4  908C               	bcf	3980,0,c	;volatile
 16626  007CC6                     
 16627                           ;LCD_8bit.c: 22:  LATD1 = 1;
 16628  007CC6  828C               	bsf	3980,1,c	;volatile
 16629  007CC8                     
 16630                           ;LCD_8bit.c: 23:  MSdelay(1);
 16631  007CC8  0E00               	movlw	0
 16632  007CCA  6E02               	movwf	(MSdelay@val+1)^0,c
 16633  007CCC  0E01               	movlw	1
 16634  007CCE  6E01               	movwf	MSdelay@val^0,c
 16635  007CD0  ECEF  F03C         	call	_MSdelay	;wreg free
 16636  007CD4                     
 16637                           ;LCD_8bit.c: 24:  LATD1 = 0;
 16638  007CD4  928C               	bcf	3980,1,c	;volatile
 16639  007CD6                     
 16640                           ;LCD_8bit.c: 25:  MSdelay(3);
 16641  007CD6  0E00               	movlw	0
 16642  007CD8  6E02               	movwf	(MSdelay@val+1)^0,c
 16643  007CDA  0E03               	movlw	3
 16644  007CDC  6E01               	movwf	MSdelay@val^0,c
 16645  007CDE  ECEF  F03C         	call	_MSdelay	;wreg free
 16646  007CE2  0012               	return		;funcret
 16647  007CE4                     __end_of_LCD_Command:
 16648                           	callstack 0
 16649                           
 16650 ;; *************** function _MSdelay *****************
 16651 ;; Defined at:
 16652 ;;		line 69 in file "LCD_8bit.c"
 16653 ;; Parameters:    Size  Location     Type
 16654 ;;  val             2    0[COMRAM] unsigned int 
 16655 ;; Auto vars:     Size  Location     Type
 16656 ;;  j               2    4[COMRAM] unsigned int 
 16657 ;;  i               2    2[COMRAM] unsigned int 
 16658 ;; Return value:  Size  Location     Type
 16659 ;;                  1    wreg      void 
 16660 ;; Registers used:
 16661 ;;		wreg, status,2, status,0
 16662 ;; Tracked objects:
 16663 ;;		On entry : 0/0
 16664 ;;		On exit  : 0/0
 16665 ;;		Unchanged: 0/0
 16666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16667 ;;      Params:         2       0       0       0       0       0       0       0       0
 16668 ;;      Locals:         4       0       0       0       0       0       0       0       0
 16669 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16670 ;;      Totals:         6       0       0       0       0       0       0       0       0
 16671 ;;Total ram usage:        6 bytes
 16672 ;; Hardware stack levels used:    1
 16673 ;; This function calls:
 16674 ;;		Nothing
 16675 ;; This function is called by:
 16676 ;;		_LCD_Init
 16677 ;;		_LCD_Command
 16678 ;;		_LCD_Char
 16679 ;; This function uses a non-reentrant model
 16680 ;;
 16681                           
 16682                           	psect	text51
 16683  0079DE                     __ptext51:
 16684                           	callstack 0
 16685  0079DE                     _MSdelay:
 16686                           	callstack 27
 16687  0079DE                     
 16688                           ;LCD_8bit.c: 69: void MSdelay(unsigned int val);LCD_8bit.c: 70: {;LCD_8bit.c: 71:      u
      +                          nsigned int i,j;;LCD_8bit.c: 72:         for(i=0;i<=val;i++)
 16689  0079DE  0E00               	movlw	0
 16690  0079E0  6E04               	movwf	(MSdelay@i+1)^0,c
 16691  0079E2  0E00               	movlw	0
 16692  0079E4  6E03               	movwf	MSdelay@i^0,c
 16693  0079E6  EF08  F03D         	goto	l4660
 16694  0079EA                     l4648:
 16695                           
 16696                           ;LCD_8bit.c: 73:             for(j=0;j<81;j++);
 16697  0079EA  0E00               	movlw	0
 16698  0079EC  6E06               	movwf	(MSdelay@j+1)^0,c
 16699  0079EE  0E00               	movlw	0
 16700  0079F0  6E05               	movwf	MSdelay@j^0,c
 16701  0079F2                     l4654:
 16702  0079F2  4A05               	infsnz	MSdelay@j^0,f,c
 16703  0079F4  2A06               	incf	(MSdelay@j+1)^0,f,c
 16704  0079F6  5006               	movf	(MSdelay@j+1)^0,w,c
 16705  0079F8  E109               	bnz	u5340
 16706  0079FA  0E51               	movlw	81
 16707  0079FC  5C05               	subwf	MSdelay@j^0,w,c
 16708  0079FE  A0D8               	btfss	status,0,c
 16709  007A00  EF04  F03D         	goto	u5341
 16710  007A04  EF06  F03D         	goto	u5340
 16711  007A08                     u5341:
 16712  007A08  EFF9  F03C         	goto	l4654
 16713  007A0C                     u5340:
 16714  007A0C  4A03               	infsnz	MSdelay@i^0,f,c
 16715  007A0E  2A04               	incf	(MSdelay@i+1)^0,f,c
 16716  007A10                     l4660:
 16717  007A10  5003               	movf	MSdelay@i^0,w,c
 16718  007A12  5C01               	subwf	MSdelay@val^0,w,c
 16719  007A14  5004               	movf	(MSdelay@i+1)^0,w,c
 16720  007A16  5802               	subwfb	(MSdelay@val+1)^0,w,c
 16721  007A18  B0D8               	btfsc	status,0,c
 16722  007A1A  EF11  F03D         	goto	u5351
 16723  007A1E  EF13  F03D         	goto	u5350
 16724  007A22                     u5351:
 16725  007A22  EFF5  F03C         	goto	l4648
 16726  007A26                     u5350:
 16727  007A26  0012               	return		;funcret
 16728  007A28                     __end_of_MSdelay:
 16729                           	callstack 0
 16730                           
 16731 ;; *************** function _ADC_Init *****************
 16732 ;; Defined at:
 16733 ;;		line 4 in file "ADC.c"
 16734 ;; Parameters:    Size  Location     Type
 16735 ;;		None
 16736 ;; Auto vars:     Size  Location     Type
 16737 ;;		None
 16738 ;; Return value:  Size  Location     Type
 16739 ;;                  1    wreg      void 
 16740 ;; Registers used:
 16741 ;;		wreg, status,2
 16742 ;; Tracked objects:
 16743 ;;		On entry : 0/0
 16744 ;;		On exit  : 0/0
 16745 ;;		Unchanged: 0/0
 16746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16747 ;;      Params:         0       0       0       0       0       0       0       0       0
 16748 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16749 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16750 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16751 ;;Total ram usage:        0 bytes
 16752 ;; Hardware stack levels used:    1
 16753 ;; This function calls:
 16754 ;;		Nothing
 16755 ;; This function is called by:
 16756 ;;		_main
 16757 ;; This function uses a non-reentrant model
 16758 ;;
 16759                           
 16760                           	psect	text52
 16761  007D06                     __ptext52:
 16762                           	callstack 0
 16763  007D06                     _ADC_Init:
 16764                           	callstack 30
 16765  007D06                     
 16766                           ;ADC.c: 6:     TRISA = 0xff;
 16767  007D06  6892               	setf	146,c	;volatile
 16768  007D08                     
 16769                           ;ADC.c: 7:     ADCON1 = 0x0e;
 16770  007D08  0E0E               	movlw	14
 16771  007D0A  6EC1               	movwf	193,c	;volatile
 16772                           
 16773                           ;ADC.c: 8:     ADCON2 = 0x92;
 16774  007D0C  0E92               	movlw	146
 16775  007D0E  6EC0               	movwf	192,c	;volatile
 16776                           
 16777                           ;ADC.c: 9:     ADRESH = 0;
 16778  007D10  0E00               	movlw	0
 16779  007D12  6EC4               	movwf	196,c	;volatile
 16780                           
 16781                           ;ADC.c: 10:     ADRESL = 0;
 16782  007D14  0E00               	movlw	0
 16783  007D16  6EC3               	movwf	195,c	;volatile
 16784  007D18  0012               	return		;funcret
 16785  007D1A                     __end_of_ADC_Init:
 16786                           	callstack 0
 16787                           
 16788                           	psect	rparam
 16789  0000                     
 16790                           	psect	idloc
 16791                           
 16792                           ;Config register IDLOC0 @ 0x200000
 16793                           ;	unspecified, using default values
 16794  200000                     	org	2097152
 16795  200000  FF                 	db	255
 16796                           
 16797                           ;Config register IDLOC1 @ 0x200001
 16798                           ;	unspecified, using default values
 16799  200001                     	org	2097153
 16800  200001  FF                 	db	255
 16801                           
 16802                           ;Config register IDLOC2 @ 0x200002
 16803                           ;	unspecified, using default values
 16804  200002                     	org	2097154
 16805  200002  FF                 	db	255
 16806                           
 16807                           ;Config register IDLOC3 @ 0x200003
 16808                           ;	unspecified, using default values
 16809  200003                     	org	2097155
 16810  200003  FF                 	db	255
 16811                           
 16812                           ;Config register IDLOC4 @ 0x200004
 16813                           ;	unspecified, using default values
 16814  200004                     	org	2097156
 16815  200004  FF                 	db	255
 16816                           
 16817                           ;Config register IDLOC5 @ 0x200005
 16818                           ;	unspecified, using default values
 16819  200005                     	org	2097157
 16820  200005  FF                 	db	255
 16821                           
 16822                           ;Config register IDLOC6 @ 0x200006
 16823                           ;	unspecified, using default values
 16824  200006                     	org	2097158
 16825  200006  FF                 	db	255
 16826                           
 16827                           ;Config register IDLOC7 @ 0x200007
 16828                           ;	unspecified, using default values
 16829  200007                     	org	2097159
 16830  200007  FF                 	db	255
 16831                           
 16832                           	psect	config
 16833                           
 16834                           ;Config register CONFIG1L @ 0x300000
 16835                           ;	PLL Prescaler Selection bits
 16836                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
 16837                           ;	System Clock Postscaler Selection bits
 16838                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 16839                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 16840                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 16841  300000                     	org	3145728
 16842  300000  00                 	db	0
 16843                           
 16844                           ;Config register CONFIG1H @ 0x300001
 16845                           ;	Oscillator Selection bits
 16846                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
 16847                           ;	Fail-Safe Clock Monitor Enable bit
 16848                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 16849                           ;	Internal/External Oscillator Switchover bit
 16850                           ;	IESO = OFF, Oscillator Switchover mode disabled
 16851  300001                     	org	3145729
 16852  300001  09                 	db	9
 16853                           
 16854                           ;Config register CONFIG2L @ 0x300002
 16855                           ;	Power-up Timer Enable bit
 16856                           ;	PWRT = OFF, PWRT disabled
 16857                           ;	Brown-out Reset Enable bits
 16858                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 16859                           ;	Brown-out Reset Voltage bits
 16860                           ;	BORV = 3, Minimum setting 2.05V
 16861                           ;	USB Voltage Regulator Enable bit
 16862                           ;	VREGEN = OFF, USB voltage regulator disabled
 16863  300002                     	org	3145730
 16864  300002  1F                 	db	31
 16865                           
 16866                           ;Config register CONFIG2H @ 0x300003
 16867                           ;	Watchdog Timer Enable bit
 16868                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 16869                           ;	Watchdog Timer Postscale Select bits
 16870                           ;	WDTPS = 32768, 1:32768
 16871  300003                     	org	3145731
 16872  300003  1E                 	db	30
 16873                           
 16874                           ; Padding undefined space
 16875  300004                     	org	3145732
 16876  300004  FF                 	db	255
 16877                           
 16878                           ;Config register CONFIG3H @ 0x300005
 16879                           ;	CCP2 MUX bit
 16880                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 16881                           ;	PORTB A/D Enable bit
 16882                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 16883                           ;	Low-Power Timer 1 Oscillator Enable bit
 16884                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 16885                           ;	MCLR Pin Enable bit
 16886                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
 16887  300005                     	org	3145733
 16888  300005  03                 	db	3
 16889                           
 16890                           ;Config register CONFIG4L @ 0x300006
 16891                           ;	Stack Full/Underflow Reset Enable bit
 16892                           ;	STVREN = ON, Stack full/underflow will cause Reset
 16893                           ;	Single-Supply ICSP Enable bit
 16894                           ;	LVP = OFF, Single-Supply ICSP disabled
 16895                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 16896                           ;	ICPRT = OFF, ICPORT disabled
 16897                           ;	Extended Instruction Set Enable bit
 16898                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 16899                           ;	Background Debugger Enable bit
 16900                           ;	DEBUG = 0x1, unprogrammed default
 16901  300006                     	org	3145734
 16902  300006  81                 	db	129
 16903                           
 16904                           ; Padding undefined space
 16905  300007                     	org	3145735
 16906  300007  FF                 	db	255
 16907                           
 16908                           ;Config register CONFIG5L @ 0x300008
 16909                           ;	Code Protection bit
 16910                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 16911                           ;	Code Protection bit
 16912                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 16913                           ;	Code Protection bit
 16914                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 16915                           ;	Code Protection bit
 16916                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 16917  300008                     	org	3145736
 16918  300008  0F                 	db	15
 16919                           
 16920                           ;Config register CONFIG5H @ 0x300009
 16921                           ;	Boot Block Code Protection bit
 16922                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 16923                           ;	Data EEPROM Code Protection bit
 16924                           ;	CPD = OFF, Data EEPROM is not code-protected
 16925  300009                     	org	3145737
 16926  300009  C0                 	db	192
 16927                           
 16928                           ;Config register CONFIG6L @ 0x30000A
 16929                           ;	Write Protection bit
 16930                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 16931                           ;	Write Protection bit
 16932                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 16933                           ;	Write Protection bit
 16934                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 16935                           ;	Write Protection bit
 16936                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 16937  30000A                     	org	3145738
 16938  30000A  0F                 	db	15
 16939                           
 16940                           ;Config register CONFIG6H @ 0x30000B
 16941                           ;	Configuration Register Write Protection bit
 16942                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 16943                           ;	Boot Block Write Protection bit
 16944                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 16945                           ;	Data EEPROM Write Protection bit
 16946                           ;	WRTD = OFF, Data EEPROM is not write-protected
 16947  30000B                     	org	3145739
 16948  30000B  E0                 	db	224
 16949                           
 16950                           ;Config register CONFIG7L @ 0x30000C
 16951                           ;	Table Read Protection bit
 16952                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 16953                           ;	Table Read Protection bit
 16954                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 16955                           ;	Table Read Protection bit
 16956                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 16957                           ;	Table Read Protection bit
 16958                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 16959  30000C                     	org	3145740
 16960  30000C  0F                 	db	15
 16961                           
 16962                           ;Config register CONFIG7H @ 0x30000D
 16963                           ;	Boot Block Table Read Protection bit
 16964                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 16965  30000D                     	org	3145741
 16966  30000D  40                 	db	64
 16967                           tosu	equ	0xFFF
 16968                           tosh	equ	0xFFE
 16969                           tosl	equ	0xFFD
 16970                           stkptr	equ	0xFFC
 16971                           pclatu	equ	0xFFB
 16972                           pclath	equ	0xFFA
 16973                           pcl	equ	0xFF9
 16974                           tblptru	equ	0xFF8
 16975                           tblptrh	equ	0xFF7
 16976                           tblptrl	equ	0xFF6
 16977                           tablat	equ	0xFF5
 16978                           prodh	equ	0xFF4
 16979                           prodl	equ	0xFF3
 16980                           indf0	equ	0xFEF
 16981                           postinc0	equ	0xFEE
 16982                           postdec0	equ	0xFED
 16983                           preinc0	equ	0xFEC
 16984                           plusw0	equ	0xFEB
 16985                           fsr0h	equ	0xFEA
 16986                           fsr0l	equ	0xFE9
 16987                           wreg	equ	0xFE8
 16988                           indf1	equ	0xFE7
 16989                           postinc1	equ	0xFE6
 16990                           postdec1	equ	0xFE5
 16991                           preinc1	equ	0xFE4
 16992                           plusw1	equ	0xFE3
 16993                           fsr1h	equ	0xFE2
 16994                           fsr1l	equ	0xFE1
 16995                           bsr	equ	0xFE0
 16996                           indf2	equ	0xFDF
 16997                           postinc2	equ	0xFDE
 16998                           postdec2	equ	0xFDD
 16999                           preinc2	equ	0xFDC
 17000                           plusw2	equ	0xFDB
 17001                           fsr2h	equ	0xFDA
 17002                           fsr2l	equ	0xFD9
 17003                           status	equ	0xFD8

Data Sizes:
    Strings     92
    Constant    148
    Data        16
    BSS         106
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK0           160    155     159
    BANK1           256    252     256
    BANK2           256     28     142
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    nanf@s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_24(CODE[1]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_21(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_21(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK2[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@data(BANK2[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK2[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[4]), STR_3(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK2[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK2[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[4]), STR_3(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[4]), STR_3(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK2[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK2[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK2[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK2[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK2[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[4]), STR_3(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@data(BANK2[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S797_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@data(BANK2[10]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@data(BANK2[10]), 

    gas_plot_log_scale@curve	PTR float  size(2) Largest target is 12
		 -> MQ6_curve(BANK2[12]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_10(CODE[10]), STR_9(CODE[7]), STR_7(CODE[10]), STR_6(CODE[10]), 
		 -> STR_5(CODE[12]), STR_4(CODE[7]), main@data(BANK2[10]), STR_2(CODE[7]), 
		 -> STR_1(CODE[11]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_10(CODE[10]), STR_9(CODE[7]), STR_7(CODE[10]), STR_6(CODE[10]), 
		 -> STR_5(CODE[12]), STR_4(CODE[7]), main@data(BANK2[10]), STR_2(CODE[7]), 
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _efgtoa->___flsub
    _tolower->_isupper
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _read_mq->___fladd
    _calculate_resistance->___fldiv
    _gas_plot_log_scale->___flsub
    _powf->___flsub
    ___flge->___flsub
    _scalbnf->___flmul
    _logf->___flsub
    ___flsub->___fladd
    ___fladd->_calculate_resistance
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___fltol->___flsub
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _gas_plot_log_scale->___fltol
    _powf->_logf
    _sqrtf->___flge
    ___fltol->_powf

Critical Paths under _main in BANK1

    _main->_sprintf
    _vfpfcnvrt->_efgtoa
    _gas_plot_log_scale->_powf
    ___fltol->_powf

Critical Paths under _main in BANK2

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0  282585
                                            153 BANK0      2     2      0
                                             10 BANK2     18    18      0
                           _ADC_Init
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                            ___fldiv
                 _gas_plot_log_scale
                            _read_mq
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   68653
                                            244 BANK1      8     0      8
                                              0 BANK2     10    10      0
                 _gas_plot_log_scale (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   68142
                                            145 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   67766
                                            115 BANK0     30    24      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   57200
                                            103 BANK0     12     5      7
                                            188 BANK1     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1244
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _read_mq                                             11     7      4   33930
                                             86 COMRAM     5     1      4
                                              0 BANK0      6     6      0
                           _ADC_Read
                            ___fladd
                            ___fldiv
               _calculate_resistance
 ---------------------------------------------------------------------------------
 (2) _calculate_resistance                                 6     2      4   19925
                                             64 COMRAM     6     2      4
                           _ADC_Read (ARG)
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             8     6      2     197
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _gas_plot_log_scale                                  18    12      6  171351
                                            103 BANK0     18    12      6
                            ___fladd
                            ___fldiv
                            ___flsub
                            ___fltol
                               _logf
                               _powf
 ---------------------------------------------------------------------------------
 (2) _powf                                               205   197      8   95542
                                             76 BANK0     17     9      8
                                              0 BANK1    188   188      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                              _fabsf
                               _logf (ARG)
                            _scalbnf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (3) _sqrtf                                               49    45      4   26661
                                             12 BANK0     49    45      4
                            ___fladd
                             ___flge
                            ___flmul
                               _nanf
 ---------------------------------------------------------------------------------
 (4) _nanf                                                 8     4      4      99
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1398
                                              0 BANK0     12     4      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (3) _scalbnf                                             18    12      6   15311
                                             39 COMRAM    18    12      6
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _fabsf                                                8     4      4     123
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     273
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _logf                                                76    72      4   45845
                                              0 BANK0     76    72      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     626
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8   15505
                                             86 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    9406
                                             70 COMRAM    16     8      8
                           _ADC_Read (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
               _calculate_resistance (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8   14816
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4287
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                             93 BANK0     10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
                               _logf (ARG)
                               _powf (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3    2764
                                              9 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     615
                                              7 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             1     1      0     494
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     966
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0     494
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0     494
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (4) _MSdelay                                              6     4      2     472
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Clear
     _LCD_Command
       _MSdelay
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String_xy
     _LCD_Command
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
   ___fldiv
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   _gas_plot_log_scale
     ___fladd
       _ADC_Read (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       _calculate_resistance (ARG)
         _ADC_Read (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flsub
       ___fladd
         _ADC_Read (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         _calculate_resistance (ARG)
           _ADC_Read (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
         _ADC_Read (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         _calculate_resistance (ARG)
           _ADC_Read (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flsub (ARG)
         ___fladd
           _ADC_Read (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           _calculate_resistance (ARG)
             _ADC_Read (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
       _logf (ARG)
         ___fladd
           _ADC_Read (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           _calculate_resistance (ARG)
             _ADC_Read (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             _ADC_Read (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             _calculate_resistance (ARG)
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
         ___xxtofl
       _powf (ARG)
         ___fladd
           _ADC_Read (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           _calculate_resistance (ARG)
             _ADC_Read (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fladd (ARG)
             _ADC_Read (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             _calculate_resistance (ARG)
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               _calculate_resistance (ARG)
                 _ADC_Read (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___flneg
         ___flsub
           ___fladd
             _ADC_Read (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             _calculate_resistance (ARG)
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
         ___xxtofl
         _fabsf
         _logf (ARG)
           ___fladd
             _ADC_Read (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             _calculate_resistance (ARG)
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               _calculate_resistance (ARG)
                 _ADC_Read (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___xxtofl
         _scalbnf (ARG)
           ___flmul
             ___xxtofl (ARG)
         _sqrtf (ARG)
           ___fladd
             _ADC_Read (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             _calculate_resistance (ARG)
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___flge
             ___fladd (ARG)
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               _calculate_resistance (ARG)
                 _ADC_Read (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 _ADC_Read (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 _calculate_resistance (ARG)
                   _ADC_Read (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           _nanf
     _logf
       ___fladd
         _ADC_Read (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         _calculate_resistance (ARG)
           _ADC_Read (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           _ADC_Read (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           _calculate_resistance (ARG)
             _ADC_Read (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
     _powf
       ___fladd
         _ADC_Read (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         _calculate_resistance (ARG)
           _ADC_Read (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flge
         ___fladd (ARG)
           _ADC_Read (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           _calculate_resistance (ARG)
             _ADC_Read (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
             _ADC_Read (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             _calculate_resistance (ARG)
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
           _ADC_Read (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           _calculate_resistance (ARG)
             _ADC_Read (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___xxtofl
       _fabsf
       _logf (ARG)
         ___fladd
           _ADC_Read (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           _calculate_resistance (ARG)
             _ADC_Read (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             _ADC_Read (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             _calculate_resistance (ARG)
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
         ___xxtofl
       _scalbnf (ARG)
         ___flmul
           ___xxtofl (ARG)
       _sqrtf (ARG)
         ___fladd
           _ADC_Read (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           _calculate_resistance (ARG)
             _ADC_Read (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___flge
           ___fladd (ARG)
             _ADC_Read (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             _calculate_resistance (ARG)
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               _calculate_resistance (ARG)
                 _ADC_Read (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         _nanf
   _read_mq
     _ADC_Read
     ___fladd
       _ADC_Read (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       _calculate_resistance (ARG)
         _ADC_Read (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     _calculate_resistance
       _ADC_Read (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
   _sprintf
     _gas_plot_log_scale (ARG)
       ___fladd
         _ADC_Read (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
         _calculate_resistance (ARG)
           _ADC_Read (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
       ___fldiv
         ___flmul (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flsub
         ___fladd
           _ADC_Read (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           _calculate_resistance (ARG)
             _ADC_Read (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           _ADC_Read (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           _calculate_resistance (ARG)
             _ADC_Read (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flsub (ARG)
           ___fladd
             _ADC_Read (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             _calculate_resistance (ARG)
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
         _logf (ARG)
           ___fladd
             _ADC_Read (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             _calculate_resistance (ARG)
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               _calculate_resistance (ARG)
                 _ADC_Read (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___xxtofl
         _powf (ARG)
           ___fladd
             _ADC_Read (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             _calculate_resistance (ARG)
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flge
             ___fladd (ARG)
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               _calculate_resistance (ARG)
                 _ADC_Read (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 _ADC_Read (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 _calculate_resistance (ARG)
                   _ADC_Read (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               _calculate_resistance (ARG)
                 _ADC_Read (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___xxtofl
           _fabsf
           _logf (ARG)
             ___fladd
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               _calculate_resistance (ARG)
                 _ADC_Read (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flsub
               ___fladd
                 _ADC_Read (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 _calculate_resistance (ARG)
                   _ADC_Read (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___xxtofl
           _scalbnf (ARG)
             ___flmul
               ___xxtofl (ARG)
           _sqrtf (ARG)
             ___fladd
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               _calculate_resistance (ARG)
                 _ADC_Read (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___flge
               ___fladd (ARG)
                 _ADC_Read (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 _calculate_resistance (ARG)
                   _ADC_Read (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___flsub (ARG)
                 ___fladd
                   _ADC_Read (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   _calculate_resistance (ARG)
                     _ADC_Read (ARG)
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             _nanf
       _logf
         ___fladd
           _ADC_Read (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           _calculate_resistance (ARG)
             _ADC_Read (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             _ADC_Read (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             _calculate_resistance (ARG)
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
         ___xxtofl
       _powf
         ___fladd
           _ADC_Read (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           _calculate_resistance (ARG)
             _ADC_Read (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fladd (ARG)
             _ADC_Read (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             _calculate_resistance (ARG)
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               _calculate_resistance (ARG)
                 _ADC_Read (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___flneg
         ___flsub
           ___fladd
             _ADC_Read (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             _calculate_resistance (ARG)
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
         ___xxtofl
         _fabsf
         _logf (ARG)
           ___fladd
             _ADC_Read (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             _calculate_resistance (ARG)
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               _calculate_resistance (ARG)
                 _ADC_Read (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___xxtofl
         _scalbnf (ARG)
           ___flmul
             ___xxtofl (ARG)
         _sqrtf (ARG)
           ___fladd
             _ADC_Read (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             _calculate_resistance (ARG)
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___flge
             ___fladd (ARG)
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               _calculate_resistance (ARG)
                 _ADC_Read (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 _ADC_Read (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 _calculate_resistance (ARG)
                   _ADC_Read (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           _nanf
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
             _ADC_Read (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             _calculate_resistance (ARG)
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fleq
           ___flge
             ___fladd (ARG)
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               _calculate_resistance (ARG)
                 _ADC_Read (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 _ADC_Read (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 _calculate_resistance (ARG)
                   _ADC_Read (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               _calculate_resistance (ARG)
                 _ADC_Read (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               _ADC_Read (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               _calculate_resistance (ARG)
                 _ADC_Read (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flsub (ARG)
               ___fladd
                 _ADC_Read (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 _calculate_resistance (ARG)
                   _ADC_Read (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
             _logf (ARG)
               ___fladd
                 _ADC_Read (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 _calculate_resistance (ARG)
                   _ADC_Read (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               ___fldiv
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___flsub
                 ___fladd
                   _ADC_Read (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   _calculate_resistance (ARG)
                     _ADC_Read (ARG)
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
               ___xxtofl
             _powf (ARG)
               ___fladd
                 _ADC_Read (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 _calculate_resistance (ARG)
                   _ADC_Read (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               ___fldiv
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flge
                 ___fladd (ARG)
                   _ADC_Read (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   _calculate_resistance (ARG)
                     _ADC_Read (ARG)
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___flsub (ARG)
                   ___fladd
                     _ADC_Read (ARG)
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     _calculate_resistance (ARG)
                       _ADC_Read (ARG)
                       ___fldiv (ARG)
                         ___flmul (ARG)
                           ___xxtofl (ARG)
                         ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   _ADC_Read (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   _calculate_resistance (ARG)
                     _ADC_Read (ARG)
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
               ___xxtofl
               _fabsf
               _logf (ARG)
                 ___fladd
                   _ADC_Read (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   _calculate_resistance (ARG)
                     _ADC_Read (ARG)
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___flsub
                   ___fladd
                     _ADC_Read (ARG)
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     _calculate_resistance (ARG)
                       _ADC_Read (ARG)
                       ___fldiv (ARG)
                         ___flmul (ARG)
                           ___xxtofl (ARG)
                         ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                 ___xxtofl
               _scalbnf (ARG)
                 ___flmul
                   ___xxtofl (ARG)
               _sqrtf (ARG)
                 ___fladd
                   _ADC_Read (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   _calculate_resistance (ARG)
                     _ADC_Read (ARG)
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 ___flge
                   ___fladd (ARG)
                     _ADC_Read (ARG)
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                     _calculate_resistance (ARG)
                       _ADC_Read (ARG)
                       ___fldiv (ARG)
                         ___flmul (ARG)
                           ___xxtofl (ARG)
                         ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                   ___flsub (ARG)
                     ___fladd
                       _ADC_Read (ARG)
                       ___fldiv (ARG)
                         ___flmul (ARG)
                           ___xxtofl (ARG)
                         ___xxtofl (ARG)
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                       _calculate_resistance (ARG)
                         _ADC_Read (ARG)
                         ___fldiv (ARG)
                           ___flmul (ARG)
                             ___xxtofl (ARG)
                           ___xxtofl (ARG)
                         ___flmul (ARG)
                           ___xxtofl (ARG)
                         ___xxtofl (ARG)
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 _nanf
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     1C      8E       9       55.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     FC     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9B      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5E       1       98.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     28B      20        0.0%
DATA                 0      0     28B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Dec 15 01:28:38 2020

                   ___fldiv@aexp 0040                     ___fldiv@bexp 003F  
                   ___fldiv@sign 0038                     ?_LCD_Command 0001  
                             l20 7CE2                               _L1 0859  
                             _L2 0855                               l23 7CBC  
                             _L3 0851                               _L4 084D  
                             l17 7C70                               _L5 0849  
                             l42 7A26                               l34 7B30  
                             _L6 0845                               l45 7D30  
                             l29 788A                               _P1 0841  
                             _P2 083D                               _P3 0839  
                             l72 76C8                               _P4 0835  
                             _P5 0831                               l66 7D18  
                             l69 769C                               _GO 007E11  
                   ___awdiv@sign 0006                               _Ro 027E  
                             _bp 0881                               _cp 081D  
            ___wmul@multiplicand 0003                      ?_LCD_String 0008  
                            l132 71A8                              l141 7C96  
                            l135 7762                              l400 762C  
                            l138 6DC0                              l411 6FCE  
                            l406 6F88                              l415 7BD8  
                            l255 6B46                              l268 6CAA  
                            l372 74D2                              l438 6EC8  
                            l711 7A6C                              l385 7582  
                            l810 67C6                              l723 5D66  
                            l803 676A                              l725 5BC6  
                            l734 5C0C                              l670 4E02  
                            l671 4DC8                              l903 5E08  
                            l736 5C84                              l728 5B8A  
                            l737 5C72                              l905 5E10  
                            l762 585E                              l755 5668  
                            l835 46EC                              l923 604A  
                            l772 598E                              l764 58D6  
                            l765 58C4                              l669 4E14  
                            l941 3F9E                              l686 4F2E  
                            l678 50E4                              l759 59CC  
                            l695 4FFE                              l696 4FEC  
                            l849 7940                              l796 66D2  
                            l892 7390                              l799 682E  
                            l895 73D2                              l959 3700  
                            l897 740E                              l987 3B5C  
                            _Lg1 0875                              _Lg2 0871  
                            _Lg3 086D                              _Lg4 0869  
                            _lg2 082D                              _abs 7AB2  
                            _pad 734A                              _ovt 0821  
                   ___awmod@sign 0006                              wreg 000FE8  
                   ___flmul@aexp 0020                     ___flmul@bexp 0021  
                   ___flmul@sign 001B                     ___flmul@temp 0026  
                   ___flmul@prod 0022                      LCD_Char@dat 0007  
                   ___fltol@exp1 00C6                             l1105 6490  
                           l1050 77CC                             l1115 7BA0  
                           l1123 7992                             l1043 4B6A  
                           l1035 4C24                             ?_abs 0013  
                           l1220 3302                             l1060 70CC  
                           l1108 63D4                             l1215 08F2  
                           l1144 7348                             l1152 7AB0  
                           l1400 727E                             l1321 2AFC  
                           l1225 0BF4                             l1217 0912  
                           l1065 7AE8                             l1129 7B68  
                           l1049 77C4                             l1322 2B78  
                           l1410 7824                             l1235 0C8A  
                           l1332 32AE                             l1068 7AF0  
                           l1253 0E72                             l1245 0D4C  
                           l1341 7D32                             l1351 627E  
                           l1415 782C                             l1096 69B6  
                           l4000 7BEA                             l1338 7C42  
                           l4010 7C72                             l4002 7C02  
                           l1371 5344                             l1363 55A2  
                           l1099 69BE                             l4100 59E8  
                           l4012 7C8E                             l4020 69D2  
                           l4110 5A1C                             l4102 59EA  
                           l1374 5408                             l4030 6A28  
                           l4022 69F2                             l1390 78E6  
                           l4006 7B32                             l1367 52E6  
                           l4120 5A4E                             l4104 59FA  
                           l4112 5A24                             l1384 7D04  
                           l1376 550E                             l4040 6A7C  
                           l4032 6A34                             l4024 69F6  
                           l4016 69C0                             l5000 3EC8  
                           l4202 5C94                             l4210 5CDC  
                           l4130 5A82                             l4122 5A50  
                           l4114 5A34                             l4106 5A0A  
                           l4050 6AF0                             l4042 6A8E  
                           l4034 6A52                             l4026 6A04  
                           l4018 69C4                             l5010 3F04  
                           l5002 3EDA                             l5100 7C9A  
                           l4220 5D46                             l4212 5CF6  
                           l4204 5CA0                             l4140 5AC8  
                           l4124 5A60                             l4132 5A8A  
                           l4116 5A3A                             l4108 5A1A  
                           l4300 5764                             l4044 6ABC  
                           l4036 6A5A                             l4052 6AF6  
                           l4028 6A24                             l4060 6B48  
                           l1396 7C0E                             l5020 3F60  
                           l5012 3F0A                             l5004 3EE6  
                           l5110 7CB0                             l5102 7C9E  
                           l4222 5D54                             l4214 5D0C  
                           l4206 5CAE                             l4150 5AF0  
                           l4142 5ACC                             l4134 5A9A  
                           l4126 5A70                             l4118 5A40  
                           l4310 57E2                             l4302 5774  
                           l4054 6B06                             l4046 6ADC  
                           l4038 6A6E                             l4070 6B8C  
                           l4062 6B4C                             l5022 3F68  
                           l5006 3EEE                             l5104 7CA0  
                           l4224 5D5A                             l4216 5D26  
                           l4208 5CD8                             l4160 5B3E  
                           l4136 5AB0                             l4128 5A80  
                           l4320 585C                             l4312 5818  
                           l4304 5790                             l4240 55C0  
                           l5120 66F8                             l5112 667E  
                           l6000 70CE                             l5040 6868  
                           l5032 6830                             l4056 6B26  
                           l4048 6ADE                             l4080 6BF4  
                           l4072 6BAC                             l4064 6B5A  
                           l4400 74A4                             l5024 3F78  
                           l5016 3F42                             l5008 3EFE  
                           l5200 4946                             l5106 7CA2  
                           l4226 5D5C                             l4218 5D42  
                           l4170 5B88                             l4162 5B4E  
                           l4154 5B04                             l4138 5AC0  
                           l4146 5AE0                             l4330 58BC  
                           l4322 586E                             l4314 5826  
                           l4306 579C                             l4250 5606  
                           l4242 55D0                             l4234 55A4  
                           l5130 6752                             l5114 668E  
                           l6010 7142                             l5050 68BE  
                           l5042 689E                             l5034 6844  
                           l4090 6C6A                             l4082 6C22  
                           l4074 6BCA                             l4066 6B7A  
                           l4410 74CA                             l4402 74A6  
                           l5026 3F7E                             l5018 3F54  
                           l5210 49EE                             l5202 498E  
                           l5108 7CAE                             l4180 5BD6  
                           l4172 5B94                             l4164 5B56  
                           l4156 5B1E                             l4148 5AF0  
                           l4340 592A                             l4324 587C  
                           l4316 5844                             l4308 57B8  
                           l4260 5632                             l4252 560C  
                           l4244 55E0                             l4236 55B0  
                           l5140 67B6                             l5132 6754  
                           l5124 670C                             l5116 669C  
                           l5300 535E                             l6020 6CAC  
                           l6012 7148                             l5060 6938  
                           l5052 68C6                             l5044 68A2  
                           l5036 6848                             l4092 6C8A  
                           l4084 6C42                             l4076 6BD2  
                           l4068 6B7E                             l4404 74AC  
                           l4420 74EE                             l5220 4A86  
                           l5212 49FC                             l4510 6E2E  
                           l4502 6DEE                             l4182 5BEC  
                           l4190 5C1C                             l4174 5BB2  
                           l4166 5B66                             l4158 5B2E  
                           l4350 5992                             l4334 58E6  
                           l4342 592E                             l4326 5880  
                           l4318 584E                             l4270 5688  
                           l4262 5642                             l4254 5612  
                           l4246 55F0                             l4238 55BE  
                           l5150 680E                             l5142 67D4  
                           l5134 6760                             l5126 6714  
                           l5118 66E2                             l5310 5422  
                           l5302 537E                             l6022 6CD0  
                           l6014 7164                             l6006 70E8  
                           l5054 68CE                             l5038 684C  
                           l4086 6C54                             l4078 6BE6  
                           l4406 74B2                             l4430 7522  
                           l4422 74F2                             l4414 74D4  
                           l5214 4A2C                             l5206 49C6  
                           l6030 6492                             l5400 7856  
                           l4520 6E5E                             l4512 6E3C  
                           l4504 6E18                             l4192 5C2A  
                           l4184 5BF2                             l4176 5BB4  
                           l4168 5B7A                             l4096 59CE  
                           l4360 59BC                             l4352 59A2  
                           l4344 5948                             l4336 58F2  
                           l4328 588E                             l4280 56C8  
                           l4264 5652                             l4256 5620  
                           l4248 55F6                             l3800 4C74  
                           l5152 681C                             l5144 67D6  
                           l5136 679C                             l5128 6720  
                           l5320 54A2                             l5312 5438  
                           l5304 5392                             l6024 6D42  
                           l6016 7198                             l6008 7134  
                           l5064 6976                             l5056 6902  
                           l5048 68A8                             l4088 6C5A  
                           l4408 74C2                             l4440 755C  
                           l4432 752A                             l4424 7500  
                           l4416 74D8                             l5080 71E0  
                           l5240 4BC4                             l5224 4AF4  
                           l5208 49D8                             l5160 4712  
                           l6040 64A2                             l6032 6496  
                           l5402 785A                             l4530 6E88  
                           l4522 6E68                             l4506 6E1A  
                           l4194 5C2E                             l4186 5BFC  
                           l4178 5BC4                             l4098 59DA  
                           l4354 59B0                             l4346 595C  
                           l4338 5900                             l4290 5712  
                           l4282 56D4                             l4274 569C  
                           l4266 5658                             l4258 5622  
                           l3810 4CA6                             l3802 4C7C  
                           l5154 681E                             l5146 67DA  
                           l5138 67A8                             l5330 5592  
                           l5322 54D6                             l5314 544E  
                           l5306 53D0                             l6026 6D7E  
                           l5066 6988                             l4370 7410  
                           l4434 7538                             l4442 7562  
                           l4426 7508                             l4418 74E6  
                           l4450 7584                             l4610 6318  
                           l4602 6280                             l5090 725C  
                           l5082 71EE                             l5074 71AA  
                           l5226 4B06                             l5234 4B7E  
                           l5218 4A58                             l5170 4764  
                           l5162 4720                             l5250 4BEE  
                           l6050 64E8                             l6042 64A6  
                           l6034 649A                             l4532 6E98  
                           l4508 6E2A                             l4196 5C3C  
                           l4188 5C0A                             l4356 59B2  
                           l4348 5976                             l4292 571E  
                           l4284 56EC                             l4276 56A8  
                           l4268 5678                             l3900 4E7E  
                           l3820 4CDC                             l3812 4CAC  
                           l3804 4C8C                             l4364 7A28  
                           l5148 67FE                             l5420 3FDA  
                           l5324 54E6                             l5316 545E  
                           l5308 5418                             l5260 50E6  
                           l5500 0932                             l5404 762E  
                           l5412 76CA                             l5068 699A  
                           l6124 68EC                             l4540 734A  
                           l4700 5F80                             l4380 743C  
                           l4372 7414                             l4444 7572  
                           l4436 754E                             l4428 751A  
                           l4460 7624                             l4452 75B2  
                           l4620 6434                             l4604 62A0  
                           l5084 7206                             l5076 71D4  
                           l5252 4C12                             l5236 4BA2  
                           l5244 4BD2                             l5228 4B3A  
                           l5180 47FE                             l5172 4772  
                           l5164 4732                             l6060 6550  
                           l6052 64EC                             l6044 64B8  
                           l6036 649E                             l4534 6EA8  
                           l4518 6E54                             l4198 5C6A  
                           l4358 59B8                             l4294 572E  
                           l4286 56F8                             l4278 56B2  
                           l3902 4E82                             l3910 4EA2  
                           l3830 4D18                             l3822 4CEC  
                           l3814 4CBA                             l3806 4C92  
                           l4366 7A38                             l5430 40B0  
                           l5422 3FF0                             l5334 7C10  
                           l5350 60B4                             l5342 604C  
                           l4470 6F0A                             l5094 7CE4  
                           l5326 5572                             l5318 5492  
                           l5270 5198                             l5262 50F6  
                           l5502 097A                             l5406 76AA  
                           l4630 7B6A                             l4550 739C  
                           l4542 735A                             l4710 5FE6  
                           l4702 5F9A                             l4390 746A  
                           l4382 7444                             l4374 7422  
                           l4446 757A                             l4438 7556  
                           l4462 762A                             l4454 75C2  
                           l4622 6448                             l4614 6388  
                           l4606 62F6                             l5086 7222  
                           l5246 4BE0                             l5238 4BB0  
                           l5190 488A                             l5174 4796  
                           l5166 4738                             l5158 46EE  
                           l6070 65A4                             l6062 6554  
                           l6054 6512                             l6046 64BC  
                           l6038 64A0                             ?_pad 0011  
                           l4536 6EB8                             l4528 6E7C  
                           l4296 573A                             l4288 5704  
                           l3912 4EC8                             l3920 4F1E  
                           l3904 4E90                             l3840 4D36  
                           l3832 4D26                             l3824 4CEE  
                           l3816 4CBC                             l3808 4CA4  
                           l5440 415A                             l5432 40EC  
                           l5424 402C                             l5416 3FA0  
                           l5336 7C30                             l5352 60D0  
                           l5360 6134                             l5344 605C  
                           l4480 6F76                             l4472 6F38  
                           l5096 7CF4                             l5328 5582  
                           l5280 5210                             l5272 51B6  
                           l5264 5106                             l5600 0FF4  
                           l5520 0A3E                             l5512 09C2  
                           l5408 76C0                             l4640 7988  
                           l4552 73B0                             l4544 736E  
                           l4712 5FEC                             l4720 6022  
                           l4704 5FB4                             l4392 7472  
                           l4384 7448                             l4376 742A  
                           l4456 75F0                             l4624 6470  
                           l4616 63C4                             l4608 630A  
                           l4800 35CA                             l5088 7234  
                           l5192 48BC                             l5184 4846  
                           l5176 47D0                             l5168 475C  
                           l6072 65B6                             l6064 6562  
                           l6056 6524                             l6048 64CE  
                           l4298 574A                             l3930 4F72  
                           l3922 4F44                             l3914 4EFC  
                           l3906 4E92                             l3850 4D4A  
                           l3842 4D3A                             l3834 4D2A  
                           l3818 4CCC                             l3826 4CF6  
                           l5442 418E                             l5434 40F6  
                           l5426 4054                             l5418 3FD0  
                           l4490 7BB8                             l5338 7C32  
                           l5370 61DC                             l5362 6150  
                           l5354 6104                             l5346 6078  
                           l4482 6FC6                             l4474 6F48  
                           l4466 6ECA                             l5290 52A4  
                           l5274 51E4                             l5266 513C  
                           l5258 50E6                             l5610 103C  
                           l5530 0AA8                             l5522 0A4E  
                           l5514 09E4                             l5506 0990  
                           l4642 798C                             l4634 7942  
                           l4562 7AB2                             l4554 73B4  
                           l4546 737C                             l4714 5FFE  
                           l4706 5FC4                             l4394 7480  
                           l4386 7450                             l4378 742E  
                           l4458 7600                             l4570 702E  
                           l4626 6480                             l4618 63F8  
                           l4810 36A6                             l4802 3626  
                           l4730 332C                             l5194 48CC  
                           l5178 47F0                             l5186 4858  
                           l6074 65CA                             l6066 6586  
                           l6058 6536                             l4660 7A10  
                           l3940 4F9C                             l3932 4F80  
                           l3924 4F54                             l3916 4EFE  
                           l3908 4E9C                             l3860 4D5E  
                           l3852 4D4E                             l3844 4D3E  
                           l3836 4D2E                             l3828 4D06  
                           l5460 428C                             l5452 41DC  
                           l5444 419E                             l4492 7BC8  
                           l5380 626E                             l5372 61E4  
                           l5364 6184                             l5356 610C  
                           l5348 60AC                             l4484 6FCC  
                           l4476 6F56                             l4468 6EFA  
                           l5292 52B0                             l5276 51F8  
                           l5284 5230                             l5700 17E4  
                           l5620 1104                             l5604 1008  
                           l5532 0BA6                             l5524 0A5C  
                           l5516 0A06                             l5508 09AC  
                           l4636 7946                             l4564 7ACC  
                           l3780 72CC                             l3772 7280  
                           l4556 73E2                             l4548 7388  
                           l4716 600A                             l4708 5FD6  
                           l4396 7486                             l4388 7462  
                           l4580 7080                             l4572 7056  
                           l4900 3B34                             l4820 36F2  
                           l4812 36AA                             l4804 365A  
                           l4740 337C                             l4732 3334  
                           l4724 3304                             l5196 48FE  
                           l5188 487A                             l6076 65FE  
                           l6068 65A0                             l6084 6650  
                           l4654 79F2                             l4646 79DE  
                           l5390 7CC8                             l3950 4FCE  
                           l3942 4FAC                             l3934 4F82  
                           l3918 4F0E                             l3870 4DB0  
                           l3862 4D62                             l3854 4D52  
                           l3846 4D42                             l3838 4D32  
                           l3790 4C40                             l5470 436C  
                           l5462 429C                             l5454 41F8  
                           l5438 4152                             l5446 41B2  
                           l5374 6200                             l5366 618C  
                           l5358 6128                             l4478 6F68  
                           l5294 52BE                             l5286 5286  
                           l5278 5206                             l5710 1918  
                           l5702 17F4                             l5622 1128  
                           l5630 120E                             l5614 10BC  
                           l5606 1018                             l5550 0C9E  
                           l5542 0C44                             l5534 0C12  
                           l5526 0A78                             l4638 795A  
                           l3782 7302                             l3774 7292  
                           l4558 73F6                             l4718 6012  
                           l4670 5DE0                             l4662 5D68  
                           l4398 749C                             l4574 7062  
                           l4566 6FD0                             l4590 789C  
                           l4910 3BEC                             l4902 3B48  
                           l4830 3734                             l4814 36BC  
                           l4822 370C                             l4806 3662  
                           l4750 33B8                             l4742 338C  
                           l4734 3358                             l4726 330E  
                           l5198 4922                             l6078 663A  
                           l4656 79F6                             l4648 79EA  
                           l5392 7CD4                             l5384 7CC0  
                           l4496 6DC2                             l3960 5028  
                           l3952 4FE4                             l3936 4F90  
                           l3928 4F68                             l3944 4FAE  
                           l3880 4DF4                             l3872 4DC0  
                           l3856 4D56                             l3848 4D46  
                           l3864 4D66                             l3792 4C42  
                           l5480 44B8                             l5472 43A0  
                           l5464 42AC                             l5448 41C8  
                           l4488 7BA2                             l5368 61A8  
                           l5376 6208                             l5296 5326  
                           l5288 529A                             l5800 22E0  
                           l5720 19BC                             l5712 1928  
                           l5704 1852                             l5632 1232  
                           l5640 1328                             l5624 1136  
                           l5616 10D2                             l5608 1026  
                           l5560 0D06                             l5552 0CAC  
                           l5544 0C66                             l5536 0C2E  
                           l5528 0A8C                             l3776 72A4  
                           l4680 5E38                             l4672 5DE2  
                           l4664 5D88                             l4584 70C4  
                           l4568 6FF0                             l4592 77CE  
                           l4920 3C3C                             l4912 3C00  
                           l4904 3B54                             l4840 37A8  
                           l4832 3750                             l4816 36D0  
                           l4808 3696                             l4760 3420  
                           l4752 33BC                             l4744 33A0  
                           l4736 3362                             l4728 331E  
                           l4658 7A0C                             l5394 7CD6  
                           l5386 7CC4                             l4498 6DDA  
                           l3970 50A4                             l3962 5062  
                           l3938 4F98                             l3946 4FBC  
                           l3882 4DF6                             l3874 4DD6  
                           l3866 4D6A                             l3858 4D5A  
                           l3794 4C52                             l3786 4C26  
                           l5490 45D4                             l5482 44EC  
                           l5474 43F8                             l5466 42E0  
                           l5458 420C                             l5378 623A  
                           l5298 5334                             l5810 23C6  
                           l5802 2314                             l5730 1B28  
                           l5722 1A2E                             l5714 1938  
                           l5706 18D4                             l5650 1474  
                           l5642 135C                             l5634 1250  
                           l5626 11A2                             l5618 10E2  
                           l5570 0DB0                             l5562 0D14  
                           l5554 0CD4                             l5546 0C74  
                           l3778 72AE                             l4690 5ED8  
                           l4682 5E3E                             l4674 5DFC  
                           l4666 5DB0                             l4578 706E  
                           l4930 3C70                             l4922 3C4A  
                           l4914 3C12                             l4906 3B78  
                           l4850 37F0                             l4842 37BA  
                           l4834 3790                             l4818 36D8  
                           l4762 3432                             l4746 33AC  
                           l4754 33C2                             l4738 336A  
                           l5388 7CC6                             l5396 782E  
                           l3980 50C4                             l3972 50A8  
                           l3956 500E                             l3964 5064  
                           l3948 4FC0                             l3892 4E46  
                           l3884 4E00                             l3876 4DE2  
                           l3868 4D94                             l3796 4C62  
                           l3788 4C32                             l5492 462C  
                           l5484 4520                             l5476 442C  
                           l5468 4338                             l5900 2CF0  
                           l5820 24B6                             l5812 23E0  
                           l5804 2372                             l5740 1C98  
                           l5732 1B80                             l5724 1A3E  
                           l5716 1952                             l5708 1908  
                           l5660 1592                             l5652 14A8  
                           l5644 13B4                             l5636 12BC  
                           l5580 0E22                             l5572 0DC8  
                           l5564 0D60                             l4692 5EDE  
                           l4684 5E46                             l4676 5E18  
                           l4668 5DD0                             l4588 788C  
                           l4596 7804                             l4940 3CA2  
                           l4932 3C80                             l4924 3C5A  
                           l4916 3C20                             l4908 3BDC  
                           l4860 3838                             l4852 37FE  
                           l4844 37CC                             l4836 379A  
                           l4828 3720                             l4780 3508  
                           l4764 344E                             l4756 33E8  
                           l4772 3498                             l4748 33B4  
                           l5398 7832                             l3982 50D2  
                           l3974 50B6                             l3966 5074  
                           l3958 501A                             l3894 4E56  
                           l3886 4E22                             l3878 4DE6  
                           l3798 4C72                             l5494 4660  
                           l5486 4554                             l5478 4484  
                           l5910 2E3C                             l5902 2D24  
                           l5830 2534                             l5814 23F0  
                           l5806 23A6                             l5750 1E08  
                           l5742 1CF0                             l5734 1BB4  
                           l5726 1A9C                             l5718 1962  
                           l5670 163A                             l5822 24EA  
                           l5662 15A2                             l5654 1558  
                           l5646 13E8                             l5590 0EC4  
                           l5582 0E40                             l5574 0DD6  
                           l5566 0D78                             l5558 0CEA  
                           l3990 7A7A                             l4694 5EE4  
                           l4686 5E50                             l4678 5E2A  
                           l4598 7816                             l4950 3D4A  
                           l4942 3CB4                             l4934 3C84  
                           l4926 3C5E                             l4918 3C28  
                           l4870 394C                             l4862 3848  
                           l4854 3816                             l4846 37DA  
                           l4838 37A0                             l4782 3524  
                           l4774 34BE                             l4790 3540  
                           l4766 3466                             l3984 50D4  
                           l3976 50BC                             l3968 5084  
                           l3896 4E64                             l3888 4E32  
                           l5496 4694                             l5488 457C  
                           l5920 2FAC                             l5912 2E70  
                           l5904 2D7C                             l5840 265C  
                           l5832 258C                             l5824 24FA  
                           l5816 2424                             l5808 23B6  
                           l5760 1F30                             l5752 1E60  
                           l5744 1D48                             l5736 1BE8  
                           l5728 1AD0                             l5680 1708  
                           l5672 166E                             l5664 15D6  
                           l5656 1568                             l5648 1440  
                           l5592 0ED4                             l5584 0E56  
                           l3992 7A8C                             l4688 5E56  
                           l4696 5F48                             l4960 3DAC  
                           l4952 3D52                             l4944 3CB8  
                           l4936 3C8A                             l4928 3C64  
                           l4880 39F4                             l4864 385C  
                           l4872 3952                             l4856 3828  
                           l4848 37DE                             l4792 355A  
                           l4768 3470                             l3978 50BE  
                           l3898 4E72                             l5930 3164  
                           l5922 3004                             l5914 2EA4  
                           l5906 2DD4                             l5850 26FC  
                           l5842 266C                             l5834 25E4  
                           l5826 250A                             l5818 2482  
                           l5770 1FAE                             l5762 1F40  
                           l5754 1E94                             l5746 1DA0  
                           l5738 1C40                             l5690 1794  
                           l5682 1720                             l5674 1680  
                           l5658 1578                             l5666 160E  
                           l5594 0F38                             l5586 0E82  
                           l5578 0DFE                             l3994 7A90  
                           l4698 5F62                             l4970 3DF6  
                           l4962 3DBC                             l4938 3C90  
                           l4946 3CBE                             l4954 3D56  
                           l4890 3AD2                             l4882 3A26  
                           l4874 3976                             l4866 38C0  
                           l4858 3830                             l4778 34F6  
                           l5940 322E                             l5932 3198  
                           l5924 305C                             l5916 2EFC  
                           l5908 2E08                             l5860 2844  
                           l5852 2714                             l5844 2690  
                           l5836 2618                             l5828 2524  
                           l5780 20FA                             l5772 1FE2  
                           l5764 1F50                             l5756 1EC8  
                           l5748 1DD4                             l5692 17A8  
                           l5684 1738                             l5676 1690  
                           l5668 161E                             l5596 0FB8  
                           l5588 0E90                             l3988 7A6E  
                           l3996 7BDA                             l4980 3E2C  
                           l4972 3DFE                             l4964 3DCE  
                           l4956 3D7A                             l4948 3D16  
                           l4892 3AD8                             l4884 3A36  
                           l4876 39AA                             l4868 3918  
                           l4796 3590                             l5942 327E  
                           l5934 31CC                             l5926 30D8  
                           l5918 2F54                             l5870 2926  
                           l5854 2790                             l5838 264C  
                           l5790 2178                             l5782 210A  
                           l5774 2016                             l5766 1F6A  
                           l5758 1EFC                             l5694 17B8  
                           l5686 175C                             l5678 16A0  
                           l5598 0FD0                             l3998 7BE6  
                           l4990 3E88                             l4982 3E34  
                           l4974 3E0E                             l4966 3DD2  
                           l4958 3D98                             l4894 3B0C  
                           l4886 3A46                             l4878 39DE  
                           l4798 35C4                             l5950 776C  
                           l5960 7C58                             l5944 32CE  
                           l5936 31DC                             l5928 3130  
                           l5880 2A36                             l5792 21AC  
                           l5784 211A                             l5776 204A  
                           l5768 1F7A                             l5696 17C4  
                           l5688 1770                             l4992 3E90  
                           l4984 3E40                             l4976 3E16  
                           l4968 3DE4                             l4896 3B20  
                           l4888 3A7A                             l5952 777A  
                           l5962 7C5E                             l5970 7AF4  
                           l5938 31EC                             l5890 2C72  
                           l5882 2B68                             l5866 28B0  
                           l5874 2992                             l5858 27FC  
                           l5794 21E0                             l5786 2134  
                           l5778 20C6                             l5698 17D4  
                           l4986 3E46                             l4994 3E96  
                           l4978 3E24                             l4898 3B24  
                           l5954 77A8                             l5964 7C64  
                           l5956 7C44                             l5980 7B24  
                           l5972 7B04                             l5892 2C82  
                           l5884 2BFA                             l5876 2A04  
                           l5868 28CE                             l5796 225C  
                           l5788 2144                             l4996 3EA8  
                           l4988 3E6C                             l5948 7764  
                           l5982 7D2A                             l5966 7C6A  
                           l5958 7C4C                             l5974 7B0C  
                           l5894 2C92                             l5886 2C0A  
                           l5878 2A14                             l5798 22BA  
                           l4998 3EC2                             l5990 78FA  
                           l5984 7D06                             l5976 7B16  
                           l5968 7AF4                             l5896 2CAC  
                           l5888 2C3E                             l5992 7902  
                           l5986 7D08                             l5978 7B1E  
                           l5898 2CBC                             l5994 790A  
                           l5996 7928                             l5988 78E8  
                           _ADON 007E10                             STR_1 08A1  
                           STR_2 08C0                             STR_3 08D5  
                           STR_4 08CE                             STR_5 0895  
                           STR_6 08B6                             STR_7 08AC  
                           STR_8 08EA                             STR_9 08C7  
                           _LATB 000F8A                             u4000 4F54  
                           u4001 4F50                             u4010 4F80  
                           u4011 4F7C                             u4100 5062  
                           u4020 4F90                             u4101 505E  
                           u4021 4F8C                             u4110 5074  
                           u4030 4FAC                             u4111 5070  
                           u4031 4FA8                             u5000 6E78  
                           u4120 5084                             u4040 4FBC  
                           u4200 69D2                             u5001 6E74  
                           u4121 5080                             u4041 4FB8  
                           u4201 69CE                             u5010 6E98  
                           u4130 50A4                             u4050 4FCE  
                           u4210 6A04                             u5011 6E94  
                           u4131 50A0                             u4051 4FCA  
                           u4211 6A00                             u5020 6EA8  
                           u4140 50B6                             u4060 4FE4  
                           u4300 6BF4                             u5100 7056  
                           u5021 6EA4                             u4141 50B2  
                           u4061 4FE0                             u4221 6A2E  
                           u4301 6BF0                             u5101 7052  
                           u4150 50D2                             u4070 4FFA  
                           u4230 6A52                             u4310 6C22  
                           u5030 735A                             u5110 7080  
                           u4151 50CE                             u4071 4FF6  
                           u4231 6A4E                             u4311 6C1E  
                           u5031 7356                             u5111 707C  
                           u4400 5AF0                             u4080 500E  
                           u4240 6A7C                             u4320 6C6A  
                           u4160 7AB0                             u5040 737C  
                           u5200 62C8                             u6000 3EC2  
                           u4401 5AEC                             u4081 500A  
                           u4241 6A78                             u4321 6C66  
                           u4161 7AAC                             u5041 7378  
                           u6001 3EBE                             u4410 5B66  
                           u4330 59E8                             u4090 5028  
                           u4250 6ABC                             u4170 7C02  
                           u5050 73D2                             u5130 70BA  
                           u5210 62F6                             u6010 3EDA  
                           u4411 5B62                             u4331 59E4  
                           u4091 5024                             u4251 6AB8  
                           u4171 7BFE                             u5051 73CE  
                           u5131 70B4                             u5211 62F2  
                           u6011 3ED6                             u4500 5C80  
                           u4420 5B88                             u4340 59FA  
                           u5300 7B9A                             u6100 6988  
                           u4260 6B06                             u5060 73E2  
                           u5140 70BC                             u5220 6318  
                           u4180 7B62                             u6020 3F3A  
                           u4501 5C7C                             u4421 5B84  
                           u4341 59F6                             u5301 7B94  
                           u6101 6984                             u4261 6B02  
                           u5061 73DE                             u5125 7092  
                           u5221 6314                             u5205 62BE  
                           u4181 7B5C                             u6021 3F34  
                           u4510 5C94                             u4430 5BB2  
                           u4350 5A0A                             u5310 7B9C  
                           u6110 699A                             u4270 6B5A  
                           u5070 7ACC                             u5150 78D4  
                           u4190 7B64                             u6030 3F3C  
                           u4511 5C90                             u4431 5BAE  
                           u4351 5A06                             u6111 6996  
                           u4271 6B56                             u5071 7AC8  
                           u4520 5CAE                             u4440 5BD6  
                           u4360 5A4E                             u4600 5632  
                           u3800 4CA4                             u6200 674E  
                           u7000 0D14                             u5320 795A  
                           u4280 6B8C                             u5400 5DFC  
                           u5080 7010                             u5240 6384  
                           u5160 78E6                             u6040 3F54  
                           u6120 71D4                             u4521 5CAA  
                           u4441 5BD2                             u4361 5A4A  
                           u4601 562E                             u3801 4CA0  
                           u6201 674A                             u7001 0D10  
                           u5321 7956                             u4281 6B88  
                           u5401 5DF8                             u5241 6380  
                           u5161 78E2                             u6041 3F50  
                           u6121 71D0                             u4530 5CF6  
                           u4450 5BEC                             u4370 5A60  
                           u4610 5642                             u3810 4CBA  
                           u6210 6798                             u7010 0D78  
                           u5330 7988                             u6050 6868  
                           u4290 6BCA                             u3730 7292  
                           u5410 5E2A                             u5090 702E  
                           u5250 63A8                             u5170 77FE  
                           u6130 7206                             u4531 5CF2  
                           u4451 5BE8                             u4371 5A5C  
                           u4611 563E                             u3811 4CB6  
                           u6211 6794                             u7011 0D74  
                           u5331 7984                             u6051 6864  
                           u4291 6BC6                             u3731 728E  
                           u5411 5E26                             u5091 702A  
                           u5235 632C                             u5171 77F8  
                           u6131 7202                             u5340 7A0C  
                           u4540 5D26                             u4460 5C0A  
                           u4380 5A70                             u4700 58E6  
                           u4620 5678                             u3900 4DF4  
                           u3820 4CCC                             u6220 67B6  
                           u7100 0FD0                             u7020 0DC8  
                           u6060 689E                             u3740 72A4  
                           u5500 5FFE                             u5420 5E38  
                           u5260 63C4                             u5236 6336  
                           u5180 7800                             u6140 7222  
                           u6300 4840                             u5341 7A08  
                           u4541 5D22                             u4461 5C06  
                           u4381 5A6C                             u4701 58E2  
                           u4621 5674                             u3901 4DF0  
                           u3821 4CC8                             u6221 67B2  
                           u7101 0FCC                             u7021 0DC4  
                           u6061 689A                             u3741 72A0  
                           u5501 5FFA                             u5421 5E34  
                           u5085 7006                             u5261 63C0  
                           u5237 6346                             u5157 78CA  
                           u6141 721E                             u6301 483A  
                           u5350 7A26                             u4550 5D54  
                           u4470 5C2A                             u4390 5AB0  
                           u4710 5900                             u4630 5688  
                           u3910 4E14                             u3830 4CDC  
                           u6230 67C6                             u7110 1026  
                           u7030 0DD6                             u6070 68BA  
                           u3750 72CC                             u5430 5F62  
                           u5270 6418                             u5190 7816  
                           u5510 332C                             u6150 7234  
                           u6310 4842                             u5351 7A22  
                           u4551 5D50                             u4471 5C26  
                           u4391 5AAC                             u4711 58FC  
                           u4631 5684                             u3911 4E10  
                           u3831 4CD8                             u6231 67C2  
                           u7111 1022                             u7031 0DD2  
                           u6071 68B6                             u3751 72C8  
                           u5431 5F5E                             u5255 639E  
                           u5191 7812                             u5511 3328  
                           u6151 7230                             u4480 5C3C  
                           u4720 5948                             u4640 5802  
                           u4560 55BE                             u3920 4E22  
                           u3840 4D18                             u6240 67D4  
                           u7120 103C                             u7040 0E40  
                           u6080 6970                             u3760 7302  
                           u5440 5F80                             u5360 5D98  
                           u4800 74C2                             u5280 6434  
                           u5600 34EE                             u5520 337C  
                           u6160 725C                             u6400 4AF0  
                           u6320 4858                             u4481 5C38  
                           u4721 5944                             u4561 55BA  
                           u3921 4E1E                             u3841 4D14  
                           u6241 67D0                             u7121 1038  
                           u7041 0E3C                             u6081 696A  
                           u3761 72FE                             u5441 5F7C  
                           u5361 5D92                             u4801 74BE  
                           u5281 6430                             u5601 34E8  
                           u5521 3378                             u6161 7258  
                           u6321 4854                             u4490 5C6A  
                           u4730 5976                             u4650 585C  
                           u4570 55D0                             u3930 4E32  
                           u3850 4D26                             u3770 4C40  
                           u6250 680E                             u6170 668E  
                           u7210 175C                             u7130 10D2  
                           u7050 0E56                             u6090 6972  
                           u5450 5F9A                             u5370 5D9A  
                           u4810 74E6                             u5290 6470  
                           u5610 34F0                             u5530 338C  
                           u6410 4B06                             u6330 488A  
                           u4491 5C66                             u4731 5972  
                           u4651 5858                             u4571 55CC  
                           u3931 4E2E                             u3851 4D22  
                           u3771 4C3C                             u6251 680A  
                           u6171 668A                             u7211 1758  
                           u7131 10CE                             u7051 0E52  
                           u5451 5F96                             u4811 74E2  
                           u5291 646C                             u5275 640E  
                           u5531 3388                             u6411 4B02  
                           u6331 4886                             u4740 59B0  
                           u4660 587C                             u4580 55E0  
                           u3940 4E64                             u3860 4D94  
                           u3780 4C52                             u6260 681C  
                           u6180 669C                             u4900 6EFA  
                           u6500 5334                             u7220 1794  
                           u7140 1104                             u7060 0E72  
                           u5460 5FB4                             u5380 5DB0  
                           u4820 7500                             u5700 3734  
                           u5620 3508                             u5540 33A0  
                           u6420 4BA2                             u6340 48CC  
                           u4741 59AC                             u4661 5878  
                           u4645 57F8                             u4581 55DC  
                           u3941 4E60                             u3861 4D90  
                           u3781 4C4E                             u6261 6818  
                           u6181 6698                             u4901 6EF6  
                           u6501 5330                             u7221 1790  
                           u7205 16B6                             u7141 1100  
                           u7061 0E6E                             u5461 5FB0  
                           u5381 5DAC                             u4821 74FC  
                           u5701 3730                             u5621 3504  
                           u5541 339C                             u6421 4B9E  
                           u6341 48C8                             u4670 588E  
                           u4590 5620                             u3950 4E72  
                           u3870 4DAC                             u3790 4C62  
                           u6190 66F8                             u4910 6F38  
                           u6510 53D0                             u6430 513C  
                           u7310 2A36                             u7206 16C0  
                           u7150 1128                             u7070 0E90  
                           u5470 5FC4                             u5390 5DE0  
                           u4750 7422                             u4830 751A  
                           u5710 3750                             u5630 358C  
                           u5550 33E8                             u6350 4922  
                           u6270 4712                             u4671 588A  
                           u4591 561C                             u3951 4E6E  
                           u3871 4DA6                             u3791 4C5E  
                           u6191 66F4                             u4911 6F34  
                           u6511 53CC                             u6431 5138  
                           u7311 2A32                             u7207 16D0  
                           u7151 1124                             u7071 0E8C  
                           u5471 5FC0                             u5391 5DDC  
                           u4751 741E                             u4831 7516  
                           u5711 374C                             u5631 3588  
                           u5551 33E4                             u6351 491E  
                           u6271 470E                             u4680 58BC  
                           u3960 4E90                             u3880 4DAE  
                           u6600 6150                             u4920 6F56  
                           u6520 5438                             u6440 51B6  
                           u7240 2690                             u7160 1136  
                           u7080 0ED4                             u5480 5FD6  
                           u4760 743C                             u4840 7538  
                           u5800 39DE                             u5720 3790  
                           u5640 3622                             u5560 3418  
                           u6360 4946                             u6280 475C  
                           u7400 77C4                             u4681 58B8  
                           u3961 4E8C                             u6601 614C  
                           u4921 6F52                             u6521 5434  
                           u6441 51B2                             u7305 29C2  
                           u7241 268C                             u7161 1132  
                           u7081 0ED0                             u5481 5FD2  
                           u4761 7438                             u4841 7534  
                           u5801 39DA                             u5721 378C  
                           u5641 361E                             u5561 3412  
                           u6361 4942                             u6281 4758  
                           u7401 77C0                             u7410 7B04  
                           u4690 58D2                             u3970 4EC8  
                           u3890 4DD6                             u6610 61A8  
                           u4930 6F76                             u6530 544E  
                           u6450 51E4                             u7306 29CC  
                           u7250 2714                             u7170 1232  
                           u7090 0F38                             u5490 5FE6  
                           u4770 7462                             u4850 754E  
                           u5810 3A26                             u5730 37BA  
                           u5650 3696                             u5570 341A  
                           u6370 49D8                             u6290 4796  
                           u7411 7B00                             u4691 58CE  
                           u3971 4EC4                             u3891 4DD2  
                           u6611 61A4                             u4931 6F72  
                           u6531 544A                             u6451 51E0  
                           u7307 29DC                             u7251 2710  
                           u7235 19CE                             u7171 122E  
                           u7091 0F34                             u5491 5FE2  
                           u4771 745E                             u4851 754A  
                           u5811 3A22                             u5731 37B6  
                           u5651 3692                             u6371 49D4  
                           u6291 4792                             u3980 4F0E  
                           u6620 6200                             u4940 6FC6  
                           u6540 5492                             u6460 5206  
                           u7260 2790                             u7180 1250  
                           u6700 7680                             u7420 7164  
                           u4780 7480                             u4860 7572  
                           u5900 3C3C                             u5820 3A36  
                           u5740 37CC                             u5660 36BC  
                           u5580 3432                             u6380 4A86  
                           u3981 4F0A                             u6621 61FC  
                           u4941 6FC2                             u6541 548E  
                           u6461 5202                             u7325 2A50  
                           u7261 278C                             u7181 124C  
                           u6701 7678                             u7421 7160  
                           u4781 747C                             u4861 756E  
                           u5901 3C38                             u5821 3A32  
                           u5741 37C8                             u5661 36B8  
                           u5581 342E                             u6381 4A82  
                           u3990 4F44                             u4950 7BB8  
                           u6550 54D6                             u7326 2A5A  
                           u7270 2844                             u7190 163A  
                           u4790 749C                             u4870 75B2  
                           u5910 3C4A                             u5830 3AD2  
                           u5750 37DA                             u5670 36D0  
                           u5590 34BE                             u6390 4AEE  
                           u7430 6562                             u3991 4F40  
                           u4951 7BB4                             u6551 54D2  
                           u7335 2ABA                             u7327 2A6A  
                           u7271 2840                             u7191 1636  
                           u4791 7498                             u4871 75AE  
                           u5911 3C46                             u5831 3ACE  
                           u5751 37D6                             u5671 36CC  
                           u5591 34BA                             u6391 4AE8  
                           u7431 655E                             u6640 7852  
                           u4960 6DDA                             u6800 41C8  
                           u6480 5286                             u7360 2BFA  
                           u7336 2AC4                             u7280 28CE  
                           u4880 75F0                             u5920 3CA2  
                           u5840 3B20                             u5760 37F0  
                           u5680 36F2                             u4961 6DD6  
                           u6801 41C4                             u6481 5282  
                           u7361 2BF6                             u7345 2B12  
                           u7337 2AD4                             u7281 28CA  
                           u4881 75EC                             u5921 3C9E  
                           u5841 3B1C                             u5761 37EC  
                           u5681 36EE                             u6650 787A  
                           u4970 6E0E                             u6810 41F8  
                           u6570 6078                             u6490 52BE  
                           u7346 2B1C                             u7290 2926  
                           u6730 76AA                             u4890 7624  
                           u5930 3D7A                             u5850 3B48  
                           u5770 37FE                             u5690 371C  
                           u6811 41F4                             u6635 621A  
                           u6571 6074                             u6491 52BA  
                           u6475 5244                             u7355 2BC0  
                           u7347 2B2C                             u7291 2922  
                           u6731 76A6                             u4891 7620  
                           u5931 3D76                             u5851 3B44  
                           u5771 37FA                             u5691 3718  
                           u6660 788A                             u4980 6E3C  
                           u6820 4246                             u6740 3FF0  
                           u6580 60D0                             u6476 524E  
                           u7356 2BCA                             u6724 7690  
                           u5940 3D98                             u5860 3BEC  
                           u5780 3828                             u6661 7886  
                           u4981 6E38                             u6741 3FEC  
                           u6581 60CC                             u6565 5552  
                           u6477 525E                             u7357 2BDA  
                           u6725 768C                             u5941 3D94  
                           u5861 3BE8                             u5781 3824  
                           u4990 6E50                             u6750 4010  
                           u6590 6128                             u7390 327E  
                           u6830 097A                             u6718 7682  
                           u6670 7658                             u5950 3DAC  
                           u5870 3C00                             u5790 3976  
                           u6647 7848                             u4991 6E4C  
                           u4975 6E04                             u6591 6124  
                           u7391 327A                             u7375 31FE  
                           u6831 0976                             u6671 7650  
                           u5951 3DA8                             u5871 3BFC  
                           u5791 3972                             u6760 402C  
                           u6920 0B6C                             u6840 09AC  
                           u5960 3DBC                             u5880 3C12  
                           u6657 7870                             u6825 423C  
                           u6761 4028                             u7385 3244  
                           u6905 0ABE                             u6841 09A8  
                           u5961 3DB8                             u5881 3C0E  
                           u7457 64DA                             u6770 4054  
                           u7386 324E                             u6930 0BA6  
                           u6906 0AC8                             u6850 09E4  
                           u5970 3DF6                             u5890 3C20  
                           u6771 4050                             u6755 4006  
                           u7387 325E                             u6931 0BA2  
                           u6915 0B18                             u6907 0AD8  
                           u6851 09E0                             u5971 3DF2  
                           u5891 3C1C                             u7467 6542  
                           u6780 40D0                             u6940 0C12  
                           u6916 0B22                             u6860 0A06  
                           u5980 3E24                             u6941 0C0E  
                           u6925 0B62                             u6917 0B32  
                           u6861 0A02                             u5981 3E20  
                           u7477 6592                             u6790 40EC  
                           u6950 0C2E                             u6870 0A5C  
                           u6694 7668                             u5990 3EA8  
                           u6791 40E8                             u6951 0C2A  
                           u6871 0A58                             u6695 7664  
                           u7487 713A                             u5991 3EA4  
                           u6960 0C66                             u6880 0A78  
                           u6688 765A                             u6785 40C6  
                           u6961 0C62                             u6881 0A74  
                           u6970 0C74                             u6890 0AA8  
                           u6971 0C70                             u6891 0AA4  
                           u6980 0CAC                             u6981 0CA8  
                           u6990 0D06                             u6991 0D02  
         ??_calculate_resistance 0045                             abs@a 0013  
                           _dbuf 0212                             _cp_h 0891  
                           _cp_l 088D                             _dp_h 0809  
                           _dp_l 0801                             _atoi 6830  
                           _main 6492                             _dtoa 5D68  
                           _nanf 7CE4                             _huge 0861  
                           _logf 3FA0               __size_of_LCD_Clear 0008  
                           _prec 00FB                             _nout 01FC  
                           _powf 08F2                             pad@i 0018  
                           pad@p 0015                             _tiny 085D  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           indf1 000FE7                             indf2 000FDF  
                           fsr1l 000FE1                             pad@w 001A  
                           fsr2l 000FD9                 __end_of_ADC_Init 7D1A  
               __end_of_ADC_Read 76CA                    ___fpclassifyf 6FD0  
                           prodh 000FF4                             prodl 000FF3  
                           start 0000                  __end_of_MSdelay 7A28  
                ___fldiv@new_exp 0039                    _LCD_String_xy 7AF2  
                   _tolower$1240 000D                     ___param_bank 000000  
                          ??_abs 0015                            ??_pad 0017  
               __end_of_LCD_Char 7CBE                 __end_of_LCD_Init 7C72  
                  ___fltol@sign1 00C5                  __end_of___aodiv 6B48  
                          ?_atoi 0008                  __end_of___fladd 50E6  
                          ?_main 0001                            ?_dtoa 001C  
                          ?_nanf 0001                  __end_of___aomod 6CAC  
                          ?_logf 0060                  __end_of___fldiv 5D68  
                __end_of___awdiv 74D4                  __end_of___flneg 7BDA  
                          STR_10 08B6                            STR_11 08DA  
                          STR_12 08E2                            STR_21 08EE  
                          STR_15 08DE                            STR_24 08C6  
                          STR_16 08E6                            STR_19 08EE  
                __end_of___awmod 7584                  __end_of___flmul 59CE  
                          ?_powf 00AC                  __end_of___flsub 7A6E  
                __end_of___fltol 6ECA                  ___awdiv@divisor 0003  
                          _LATD0 007C60                            _LATD1 007C61  
                ___awdiv@counter 0005                     vfpfcnvrt@fmt 00D5  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISD 000F95                            _lg2_h 0829  
                          _lg2_l 0825                            _fabsf 7C10  
                          _flags 00FD                            _errno 0210  
                          _ivln2 0819                            _fputc 7280  
                          _fputs 7A6E                  __end_of_isdigit 7BA2  
                __end_of_read_mq 71AA                  __end_of_ivln2_h 088D  
                __end_of_ivln2_l 0819                            _two24 0865  
                __end_of_scalbnf 6280                            atoi@n 0015  
                          pad@fp 0011                            atoi@s 0008  
                          _width 01FE                            _putch 7D32  
                          dtoa@d 001E                            dtoa@i 003E  
                          dtoa@n 0036                            dtoa@p 0030  
                          _sqrtf 50E6                            dtoa@s 0034  
                          dtoa@w 0032                            nanf@s 0001  
                          nanf@u 0005                  __end_of_isspace 7994  
                          logf@R 006A                            logf@f 00A4  
                          logf@k 0086                            logf@s 0090  
                          logf@u 00A0                            logf@w 0098  
                          logf@x 0060                            logf@z 0094  
                __end_of_isupper 7B6A                            tablat 000FF5  
                          powf@i 012C                            powf@j 01AC  
                          powf@k 01A0                            powf@n 017C  
                          powf@r 014C                            powf@s 015C  
                          powf@t 01B0                            powf@u 0174  
                          powf@v 0178                            powf@w 0144  
                          powf@x 00AC                            powf@y 00B0  
                          powf@z 01B4                            status 000FD8  
            __size_of_LCD_String 005E                  __end_of_sprintf 7942  
                 ?___fpclassifyf 0001                  __end_of_tolower 782E  
                __end_of_strncmp 7280                   ?_LCD_String_xy 000A  
                __initialization 7994                     __end_of_cp_h 0895  
                   __end_of_cp_l 0891                     __end_of_dp_h 0811  
                   __end_of_dp_l 0809                     __end_of_atoi 69C0  
                   __end_of_main 667C                     __end_of_dtoa 604C  
                   __end_of_nanf 7D06                     __end_of_huge 0865  
                   __end_of_logf 46EE                     __end_of_powf 3304  
                   __end_of_tiny 0861                           ??_atoi 000A  
                         ??_main 00F9                           ??_dtoa 0026  
                         ??_nanf 0005                           ??_logf 0064  
                         ??_powf 00B4                __end_of_LCD_Clear 7D32  
                  __activetblptr 000002                           ?_fabsf 0001  
                         _ADCON0 000FC2                           _ADCON1 000FC1  
                         _ADCON2 000FC0                           ?_fputc 0001  
                         ?_fputs 000A                           _ADRESH 000FC4  
                         _ADRESL 000FC3                 ___awdiv@dividend 0001  
                         ?_putch 0001                           ?_sqrtf 006C  
               LCD_String_xy@msg 000B                 LCD_String_xy@pos 000A  
               LCD_String_xy@row 000D                        ??_MSdelay 0003  
                         _OSCCON 000FD3                 __end_of___xxtofl 6830  
                   vfprintf@cfmt 00F7                           ___flge 6ECA  
                         ___fleq 7584                        ??___aodiv 0011  
                      ??___fladd 004F                        ??___aomod 0011  
                         ___wmul 7C72                           _ln2_hi 087D  
                      ??___fldiv 0030                        ??___awdiv 0005  
                         _ln2_lo 0879                        ??___flneg 0005  
                      ??___awmod 0005                        ??___flmul 0017  
                      ??___flsub 005F                        ??___fltol 00C1  
                         _efgtoa 3304                  ADC_Read@channel 0001  
                         _floorf 6280                           fabsf@u 0005  
                         fabsf@x 0001                  ADC_Read@digital 0007  
                         clear_0 79BA                 ___awdiv@quotient 0007  
                ___awmod@divisor 0003                  ___awmod@counter 0005  
                         pad@buf 0013             __size_of_LCD_Command 0026  
                         dtoa@fp 001C                           main@rs 0276  
                         _strcpy 788C                           _strlen 7BDA  
                         logf@t1 006E                           logf@t2 0072  
                         logf@dk 008C                           logf@ix 00A8  
                         fputc@c 0001                           fputs@c 000E  
                         fputs@i 000F                           fputs@s 000A  
                      ??_isdigit 0003                        ??_read_mq 005B  
                      ??_scalbnf 002E                  ___fpclassifyf@e 0009  
                      ?_ADC_Init 0001                  ___fpclassifyf@u 000B  
                      ?_ADC_Read 0001                  ___fpclassifyf@x 0001  
                   __mediumconst 0000                        ??_isspace 0003  
                         powf@s2 018C                           powf@t1 0180  
                         powf@t2 011C                           tblptrh 000FF7  
                      ??_isupper 0003                           tblptrl 000FF6  
                         powf@y1 0128                           tblptru 000FF8  
                         powf@ax 0170                           powf@is 0190  
                         powf@hx 0160                           powf@hy 0184  
                         powf@ix 01A8                           powf@iy 0198  
                         powf@sn 0188                           putch@c 0001  
               __end_of_vfprintf 77CE                           sqrtf@i 007D  
                         sqrtf@m 0091                           sqrtf@q 0085  
                         sqrtf@r 0095                           sqrtf@s 0079  
                         sqrtf@t 0089                           sqrtf@x 006C  
                         sqrtf@z 008D                 _tiny@sqrtf$F1192 0811  
                      ??_sprintf 005F                        ??_tolower 0009  
                      ??_strncmp 0007                       ___flge@ff1 0060  
                ??___fpclassifyf 0005                       ___flge@ff2 0064  
                   ___xxtofl@arg 000B                     ___xxtofl@exp 000A  
                   ___xxtofl@val 0001                       ___fleq@ff1 0001  
                     ___fleq@ff2 0005                        ?_LCD_Char 0001  
                     __accesstop 0060          __end_of__initialization 79D4  
                      ?_LCD_Init 0001                  ??_LCD_String_xy 000D  
                     ___flneg@f1 0001    gas_plot_log_scale@rs_ro_ratio 00C7  
                  ___rparam_used 000001      __size_of_gas_plot_log_scale 0116  
                     ___fltol@f1 00BD                   __pcstackCOMRAM 0001  
                   __pidataBANK2 7D1A                    __end_of_lg2_h 082D  
                  __end_of_lg2_l 0829                    __end_of_fabsf 7C44  
                  __end_of_ivln2 081D                    __end_of_fputc 734A  
                  __end_of_fputs 7AB2                    __end_of_two24 0869  
                  __end_of_putch 7D34                    __end_of_sqrtf 55A4  
                   ??_LCD_String 000A                       __end_of_L1 085D  
                     __end_of_L2 0859                       __end_of_L3 0855  
                     __end_of_L4 0851                       __end_of_L5 084D  
                     __end_of_L6 0849                       __end_of_P1 0845  
                     __end_of_P2 0841                       __end_of_P3 083D  
                     __end_of_P4 0839                       __end_of_P5 0835  
                     __end_of_bp 0889                       __end_of_cp 0821  
                     ??_ADC_Init 0001                       ??_ADC_Read 0003  
                        ??_fabsf 0005                          ??_fputc 0005  
                        ??_fputs 000E                          ??_putch 0001  
                        ??_sqrtf 0070                       __pbssBANK0 00FB  
                     __pbssBANK1 01FC                       __pbssBANK2 0200  
                     ??_LCD_Char 0007                       ??_LCD_Init 0008  
             __end_of_LCD_String 788C                       _efgtoa$942 01C0  
                     _efgtoa$937 01BC                       _efgtoa$946 01C2  
                     _efgtoa$938 01BE                       _efgtoa$947 01C4  
                     _efgtoa$948 01C6                          ?___flge 0060  
                        ?___fleq 0001                          ?___wmul 0001  
                        ?_efgtoa 00C7                          ?_floorf 0041  
                        ?_strcpy 0001                          ?_strlen 0001  
                      ?___xxtofl 0001               __size_of_vfpfcnvrt 0538  
calculate_resistance@adc_channel 0041                          _MSdelay 79DE  
  __size_of_calculate_resistance 009A                    LCD_String@msg 0008  
                        __Hparam 0000                          __Lparam 0000  
                __size_of___flge 0106                  __size_of___fleq 00AA  
                        ___aodiv 69C0                          ___fladd 4C26  
                        ___aomod 6B48                          ___fldiv 59CE  
                        ___awdiv 7410                          ___flneg 7BA2  
                        ___awmod 74D4                          ___flmul 55A4  
                        ___flsub 7A28                          ___fltol 6DC2  
                __size_of___wmul 0026                        ?_vfprintf 00F1  
                   __psmallconst 0800                  __size_of_efgtoa 0C9C  
                __size_of_floorf 0212                          __pcinit 7994  
                        __ramtop 0800                          __ptext0 6492  
                        __ptext1 78E8                          __ptext2 7764  
                        __ptext3 46EE                          __ptext4 71AA  
                        __ptext5 3304                          __ptext6 77CE  
                        __ptext7 7B32                          __ptext8 788C  
                        __ptext9 6280                  __size_of_strcpy 005C  
                __size_of_strlen 0036                     __size_of_abs 0040  
                   __size_of_pad 00C6                          _isdigit 7B6A  
                        _read_mq 70CE                          _ivln2_h 0889  
                        _ivln2_l 0815                       ??___xxtofl 0005  
                        _scalbnf 604C                 ___awmod@dividend 0001  
                        _isspace 7942                          _isupper 7B32  
                        efgtoa@c 00CD                          efgtoa@d 01D4  
                        efgtoa@e 01EC                          efgtoa@f 00C9  
                        efgtoa@g 01E8                          efgtoa@h 01DE  
                        efgtoa@i 01E6                          efgtoa@l 01E2  
                        efgtoa@m 01CE                          efgtoa@n 01EE  
                        efgtoa@p 01D8                          efgtoa@t 01C8  
                        efgtoa@u 01F0                          efgtoa@w 01DA  
                      _LCD_Clear 7D2A                          atoi@neg 000E  
                        _sprintf 78E8                          _tolower 77CE  
                        _strncmp 71AA             end_of_initialization 79D4  
                        floorf@e 004F                          floorf@m 004B  
                        floorf@u 0051                          floorf@x 0041  
                        fputc@fp 0003                   LCD_Command@cmd 0007  
                  __Lmediumconst 0000                          fputs@fp 000C  
                      _MQ6_curve 0282                          powf@p_h 019C  
                        powf@p_l 0164                          powf@s_h 016C  
                        powf@t_h 0168                          powf@s_l 0130  
                        powf@t_l 0134                          powf@z_h 0120  
                        powf@z_l 0124                __end_of_vfpfcnvrt 4C26  
                     efgtoa@mode 01DD                     read_mq@count 0060  
                     efgtoa@sign 01D6                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
       __end_of_tiny@sqrtf$F1192 0815                       ??_vfprintf 005F  
                        sqrtf@ix 0099                          strcpy@d 0009  
                        strlen@a 0003                          strcpy@s 0007  
                        strlen@s 0001                        _PORTDbits 000F83  
                    ___fladd@grs 0056                    ___xxtofl@sign 0009  
                      _TRISDbits 000F95                       ?_LCD_Clear 0001  
                    ___fldiv@grs 003B                      ___fldiv@rem 0034  
              __size_of_ADC_Init 0014                __size_of_ADC_Read 009C  
                    ___flmul@grs 001C                __size_of_LCD_Char 0026  
              __size_of_LCD_Init 002E                    ??_LCD_Command 0007  
                 __end_of___flge 6FD0                   __end_of___fleq 762E  
                    vfpfcnvrt@ap 00D7                      vfpfcnvrt@ct 00ED  
                    vfpfcnvrt@fp 00D3                      vfpfcnvrt@ll 00DD  
                 __end_of___wmul 7C98                   __end_of_ln2_hi 0881  
                 __end_of_ln2_lo 087D                   __end_of_efgtoa 3FA0  
        gas_plot_log_scale@curve 00CB                   __end_of_floorf 6492  
                     floorf@F527 0204                   __end_of_strcpy 78E8  
                 __end_of_strlen 7C10              start_initialization 7994  
                    __end_of_Lg1 0879                      __end_of_Lg2 0875  
                    __end_of_Lg3 0871                      __end_of_Lg4 086D  
                    __end_of_lg2 0831                      __end_of_abs 7AF2  
                    __end_of_pad 7410                      __end_of_ovt 0825  
     __end_of_gas_plot_log_scale 6DC2            __end_of___fpclassifyf 70CE  
          __end_of_LCD_String_xy 7B32                      vfprintf@fmt 00F3  
                       ??___flge 0068                         ??___fleq 0009  
                       ??___wmul 0005                         ??_efgtoa 00CE  
                    __pdataBANK2 027E                         ??_floorf 0045  
                       ??_strcpy 0005                         ??_strlen 0003  
                      ___fladd@a 004B                        ___fladd@b 0047  
                      ___fldiv@a 002C                        ___fldiv@b 0028  
            __end_of_LCD_Command 7CE4                        ___flmul@a 0013  
                      ___flmul@b 000F                        ___flsub@a 005B  
                      ___flsub@b 0057                    __pcstackBANK0 0060  
                  __pcstackBANK1 0100                    __pcstackBANK2 0262  
               ___aodiv@dividend 0001                      ??_LCD_Clear 0008  
              __size_of___xxtofl 01B4                         ?_MSdelay 0001  
                      _atoi$1003 0010                        _atoi$1004 0014  
                      _atoi$1005 0012                         ?___aodiv 0001  
                       ?___fladd 0047                         ?___aomod 0001  
                       ?___fldiv 0028                         ?___awdiv 0001  
               ___aodiv@quotient 0013                         ?___flneg 0001  
                       ?___awmod 0001                         ?___flmul 000F  
                       ?___flsub 0057                         ?___fltol 00BD  
                      _logf$1453 009C                        _logf$1454 0076  
                      _logf$1455 007A                        _logf$1456 007E  
                      _logf$1457 0082     __end_of_calculate_resistance 7764  
              __size_of_vfprintf 006A                        fabsf@F465 0200  
                    __smallconst 0800                         ?_isdigit 0001  
                       ?_read_mq 0057                         ?_scalbnf 0028  
                       _ADC_Init 7D06                         _ADC_Read 762E  
                       ?_isspace 0001                         ?_isupper 0001  
                 __size_of_fabsf 0034            LCD_String_xy@location 000E  
                       ?_sprintf 01F4                         ?_tolower 0007  
                 __size_of_fputc 00CA                   __size_of_fputs 0044  
                       ?_strncmp 0001                   __size_of_putch 0002  
                 __size_of_sqrtf 04BE                         MSdelay@i 0003  
                       MSdelay@j 0005                        _powf$1460 0148  
                      _powf$1461 0194                        _powf$1462 0138  
                      _powf$1470 0110                        _powf$1471 0114  
                      _powf$1463 0100                        _powf$1472 0118  
                      _powf$1464 0104                        _powf$1465 0158  
                      _powf$1458 01A4                        _powf$1466 013C  
                      _powf$1459 0154                        _powf$1467 0140  
                      _powf$1468 0108                        _powf$1469 010C  
                       _LCD_Char 7C98                         _LCD_Init 7C44  
                 ___wmul@product 0005                       powf@yisint 0150  
                    _LCD_Command 7CBE                        _vfpfcnvrt 46EE  
                     _ADCON0bits 000FC2                ___wmul@multiplier 0001  
                      main@ratio 027A                     _isspace$1034 0007  
                     vfpfcnvrt@c 00F0                       vfpfcnvrt@f 00E9  
                      copy_data0 79A8                 __size_of_MSdelay 004A  
                       __Hrparam 0000                       vfprintf@ap 00F5  
                       __Lrparam 0000                       vfprintf@fp 00F1  
                      read_mq@rs 0062                 __size_of___aodiv 0188  
               __size_of___fladd 04C0                 __size_of___aomod 0164  
               __size_of___fldiv 039A                 __size_of___awdiv 00C4  
               __size_of___flneg 0038                 __size_of___awmod 00B0  
               __size_of___flmul 042A                 __size_of___flsub 0046  
               __size_of___fltol 0108                       ?_vfpfcnvrt 00D3  
                ___aodiv@divisor 0009                  ___aodiv@counter 0011  
             ___fpclassifyf@F465 0208                       sprintf@fmt 01F6  
                       ___xxtofl 667C                 __size_of_isdigit 0038  
               __size_of_read_mq 00DC                 __size_of_scalbnf 0234  
                       _dtoa$913 002E                 __size_of_isspace 0052  
                       __ptext10 6FD0                         __ptext11 7584  
                       __ptext20 7AB2                         __ptext12 74D4  
                       __ptext21 6B48                         __ptext13 7410  
                       __ptext30 6CAC                         __ptext22 69C0  
                       __ptext14 5D68                         __ptext31 08F2  
                       __ptext23 6830                         __ptext15 734A  
                       __ptext40 7A28                         __ptext32 50E6  
                       __ptext24 7942                         __ptext16 7BDA  
                       __ptext41 4C26                         __ptext33 7CE4  
                       __ptext25 7B6A                         __ptext17 7A6E  
                       __ptext50 7CBE                         __ptext42 55A4  
                       __ptext34 6ECA                         __ptext26 7C72  
                       __ptext18 7280                         __ptext51 79DE  
                       __ptext43 59CE                         __ptext35 604C  
                       __ptext27 70CE                         __ptext19 7D32  
                       __ptext52 7D06                         __ptext44 6DC2  
                       __ptext36 7C10                         __ptext28 76CA  
                       __ptext45 7AF2                         __ptext37 7BA2  
                       __ptext29 762E                         __ptext46 782E  
                       __ptext38 3FA0                         __ptext47 7C98  
                       __ptext39 667C                         __ptext48 7C44  
                       __ptext49 7D2A                 __size_of_isupper 0038  
               __size_of_sprintf 005A                 __size_of_tolower 0060  
                     strcpy@dest 0001                 __size_of_strncmp 00D6  
                  __size_of_atoi 0190                    __size_of_main 01EA  
                  __size_of_dtoa 02E4                    __size_of_nanf 0022  
                  __size_of_logf 074E                    __size_of_powf 2A12  
           _calculate_resistance 76CA                       MSdelay@val 0001  
           powf@__xc8_float_word 01B8                         efgtoa@fp 00C7  
                       efgtoa@ne 01CC                         efgtoa@pp 01CA  
                       efgtoa@ou 01D0               _gas_plot_log_scale 6CAC  
                       _vfprintf 7764                         main@data 026C  
                     _LCD_String 782E                 ___aomod@dividend 0001  
                       logf@F472 020C              ?_gas_plot_log_scale 00C7  
                       logf@hfsq 0088                         isdigit@c 0001  
                       scalbnf@n 002C                         scalbnf@u 0032  
                       scalbnf@x 0028                         scalbnf@y 0036  
                      sprintf@ap 0264                         isspace@c 0001  
          ?_calculate_resistance 0041             ??_gas_plot_log_scale 005F  
                      strcpy@src 0003                         isupper@c 0001  
                      strncmp@_l 0001                        strncmp@_r 0003  
                    efgtoa@nmode 01DC                  ___aomod@divisor 0009  
                    ??_vfpfcnvrt 00D9                  ___aomod@counter 0011  
                  _vfpfcnvrt$962 00E5                    _vfpfcnvrt$967 00E7  
                       sprintf@f 0266                         tolower@c 0007  
                       sprintf@s 01F4           __size_of___fpclassifyf 00FE  
                       strncmp@l 0008                         strncmp@n 0005  
                       strncmp@r 000A           __size_of_LCD_String_xy 0040  
        _gas_plot_log_scale$1450 00CD          _gas_plot_log_scale$1451 00D1  
        _gas_plot_log_scale$1452 00D5                    ___fladd@signs 0053  
                   ___aodiv@sign 0012            sqrtf@__xc8_float_word 0081  
                   ___fladd@aexp 0054                     ___fladd@bexp 0055  
                   ___aomod@sign 0012  
